/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 MI-S1_240205.glb -k -s
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import React, { useRef, memo, useState, useEffect } from "react";
import { isEqual } from "lodash";

function Model(props) {

  const { nodes, materials } = useGLTF("/model/MIS1_240205.glb");
  
  return (
    <group {...props} dispose={null}>
      <mesh
        name="LaserBeam"
        castShadow
        receiveShadow
        geometry={nodes.LaserBeam.geometry}
        material={materials.Laser}
      />
      <mesh
        name="LaserBeamBS"
        castShadow
        receiveShadow
        geometry={nodes.LaserBeamBS.geometry}
        material={materials.Laser}
      />
      <mesh
        name="BeamBlocker2"
        castShadow
        receiveShadow
        geometry={nodes.BeamBlocker2.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="BeamBlocker1"
        castShadow
        receiveShadow
        geometry={nodes.BeamBlocker1.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="LaserBeamBB1"
        castShadow
        receiveShadow
        geometry={nodes.LaserBeamBB1.geometry}
        material={materials.Laser}
      />
      <mesh
        name="LaserBeamBB2"
        castShadow
        receiveShadow
        geometry={nodes.LaserBeamBB2.geometry}
        material={materials.Laser}
      />
      <mesh
        name="RefMirrorMesh"
        castShadow
        receiveShadow
        geometry={nodes.RefMirrorMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="RefMirrorMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.RefMirrorMesh_1.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="RefMirrorMesh_2"
        castShadow
        receiveShadow
        geometry={nodes.RefMirrorMesh_2.geometry}
        material={materials.Mirror}
      />
      <mesh
        name="TranslateMirrorMesh"
        castShadow
        receiveShadow
        geometry={nodes.TranslateMirrorMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="TranslateMirrorMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.TranslateMirrorMesh_1.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="TranslateMirrorMesh_2"
        castShadow
        receiveShadow
        geometry={nodes.TranslateMirrorMesh_2.geometry}
        material={materials.Mirror}
      />
      <mesh
        name="SchirmMesh"
        castShadow
        receiveShadow
        geometry={nodes.SchirmMesh.geometry}
        material={materials.WhiteParts}
      />
      <mesh
        name="SchirmMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.SchirmMesh_1.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="BaseMesh"
        castShadow
        receiveShadow
        geometry={nodes.BaseMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="BaseMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.BaseMesh_1.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="LaserMesh"
        castShadow
        receiveShadow
        geometry={nodes.LaserMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="LaserMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.LaserMesh_1.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="NetzteilMesh"
        castShadow
        receiveShadow
        geometry={nodes.NetzteilMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="NetzteilMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.NetzteilMesh_1.geometry}
        material={materials.Glass}
      />
      <mesh
        name="NetzteilMesh_2"
        castShadow
        receiveShadow
        geometry={nodes.NetzteilMesh_2.geometry}
        material={materials.RedParts}
      />
      <mesh
        name="BSHolderMesh"
        castShadow
        receiveShadow
        geometry={nodes.BSHolderMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="BSHolderMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.BSHolderMesh_1.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="BSHolderMesh_2"
        castShadow
        receiveShadow
        geometry={nodes.BSHolderMesh_2.geometry}
        material={materials.Servo}
      />
      <mesh
        name="BeamSplitterMesh"
        castShadow
        receiveShadow
        geometry={nodes.BeamSplitterMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="BeamSplitterMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.BeamSplitterMesh_1.geometry}
        material={materials.Glass}
      />
      <mesh
        name="BeamSplitterCubeMesh"
        castShadow
        receiveShadow
        geometry={nodes.BeamSplitterCubeMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="BeamSplitterCubeMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.BeamSplitterCubeMesh_1.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="BeamSplitterCubeMesh_2"
        castShadow
        receiveShadow
        geometry={nodes.BeamSplitterCubeMesh_2.geometry}
        material={materials.Glass}
      />
      <mesh
        name="LensMesh"
        castShadow
        receiveShadow
        geometry={nodes.LensMesh.geometry}
        material={materials.Glass}
      />
      <mesh
        name="LensMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.LensMesh_1.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="LensMesh_2"
        castShadow
        receiveShadow
        geometry={nodes.LensMesh_2.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="BB2HolderMesh"
        castShadow
        receiveShadow
        geometry={nodes.BB2HolderMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="BB2HolderMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.BB2HolderMesh_1.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="BB2HolderMesh_2"
        castShadow
        receiveShadow
        geometry={nodes.BB2HolderMesh_2.geometry}
        material={materials.Servo}
      />
      <mesh
        name="BB1HolderMesh"
        castShadow
        receiveShadow
        geometry={nodes.BB1HolderMesh.geometry}
        material={materials.BlackParts}
      />
      <mesh
        name="BB1HolderMesh_1"
        castShadow
        receiveShadow
        geometry={nodes.BB1HolderMesh_1.geometry}
        material={materials.ShinyParts}
      />
      <mesh
        name="BB1HolderMesh_2"
        castShadow
        receiveShadow
        geometry={nodes.BB1HolderMesh_2.geometry}
        material={materials.Servo}
      />
    </group>
  );
}

useGLTF.preload("/MI-S1_240205.glb");
export default memo(Model, isEqual);
