{"version":3,"sources":["components/Console/Console.module.css","components/UI/CSS/Window.module.css","components/UI/CSS/Settings.module.css","components/UI/CSS/NavBar.module.css","components/UI/CSS/RotaryCtrl.module.css","components/Login/Login.module.css","components/windows/InfoWindowContent.module.css","App.js","components/UI/experimentUI/NavBar.js","services/AppContext.js","components/Console/Console.js","components/Chat/Chat.js","components/Login/Login.js","services/PopUp.module.css","services/SocketContext.js","components/UI/templates/RadioButton.js","components/UI/templates/Switch.js","components/UI/CtrlUnits/BeamSplitterCtrl.js","components/UI/experimentUI/Window.js","components/assembly/BeamSplitter.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/templates/ESPCamSettings.js","components/UI/CtrlUnits/Settings.js","components/assembly/ESPCamStream.js","components/UI/templates/HeaterSettings.js","components/UI/CtrlUnits/HeaterCtrl.js","components/assembly/Heater.js","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/media/rotary_outline.png","components/assembly/Rotary.js","components/UI/CtrlUnits/LaserCtrl.js","components/assembly/Laser.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/Chat/ViewCamStream.js","components/assembly/CamWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_230201.js","components/UI/experimentUI/VirtualLayer.js","index.js","components/UI/templates/Theme.js","components/UI/CSS/HeaterCtrl.module.css","components/Chat/CSS/Chat.module.css","services/PopUpContext.js"],"names":["module","exports","App","process","title","NavBar","appCtx","useAppContext","socketCtx","useSocketContext","connectionStatusColor","connected","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showCam","showInfoWindowColor","showInfoWindow","showHelpWindowColor","showHelpWindow","showManualWindowColor","showManualWindow","useState","mobileVersion","setMobileVersion","openMobileVersion","Boolean","led","setLED","openLED","laserBeam","setLaserBeam","openLaserBeam","handleLED","closeLaserBeam","id","className","styles","navbar","theme","navMenuLaser","onClick","event","currentTarget","variant","sx","borderRadius","height","width","color","bgcolor","icon","MenuListProps","anchorEl","open","onClose","toggleShowBeam","disableRipple","navMenu","toggleConnection","toggleLogin","size","toggleAutoRotate","toggleShowTags","toggleCam","toggleShowManualWindow","toggleShowHelpWindow","toggleShowInfoWindow","mobile","memo","isEqual","AppContext","React","createContext","useContext","AppContextProvider","children","lastClosedComponent","setLastClosedComponent","smallSettingTemp","setSmallSettingTemp","showVirtualLayer","setShowVirtualLayer","Set","selectedComps","setSelectedComps","setShowInfoWindow","smallSetting","setSmallSetting","setAutoRotate","showRotary","setShowRotary","showLogin","setShowLogin","showBeam","setShowBeam","setShowTags","setShowCam","showLED","setShowLED","logs","setLogs","toggleSelectedComp","compId","has","prev","filter","x","add","Provider","value","toggleShowVirtualLayer","addLog","log","newVal","toogleLastComp","toggleShowLED","toggleChangeRotary","smallSettings","smallSettingsTemp","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","map","payload","index","consoleHandler","closeConsole","openConsole","Chat","showChat","setShowChat","message","setMessage","chat","setChat","useEffect","socket","on","removeAllListeners","sendMessage","preventDefault","at","userId","toggleunderConstruction","emit","user","i","length","slice","controlIds","username","controlId","reset","frameSize","exposure","fontColor","contrast","chatContainer","chatMain","style","msgForm","marginLeft","paddingTop","htmlFor","onChange","target","onKeyPress","e","key","endAdornment","position","edge","label","chatHandler","closeChat","openChat","Login","connectionOption","connection","setConnection","accessCode","setAccessCode","setUsername","handleLogin","setNewURL","String","error","themeLogin","popupWindow","popupInner","close","fontSize","container","direction","justifyContent","alignItems","autoFocus","paddingRight","helperText","type","endIcon","manager","Manager","autoConnect","SocketContext","jwt","require","SocketContextProvider","setConnected","URL","setURL","setFontColor","Auth","connect","disconnect","newURL","sub","code","component","iat","Date","now","token","sign","auth","setNewFont","newFont","helperEmit","RadioButton","val","radioButton","setRadioButton","handleChange","a","option","status","FormControl","FormLabel","RadioGroup","row","aria-labelledby","name","FormControlLabel","disabled","online","control","Radio","SwiitchCtrl","switchValue","setSwitchValue","switchStatus","Box","FormGroup","Stack","spacing","Typography","start","Switch","checked","newValue","substring","inputProps","end","BeamSplitterCtrl","switchWhiteIsOn","setSwitchWhiteStatus","switchRedIsOn","setSwitchRedStatus","selectionStatus","setSelectionStatus","onlineStatus","setOnlineStatus","redLED","isOn","whiteLED","busy","state","getStatus","ThemeProvider","mx","component2","pinhole","Window","lastChange","setLastChange","alertType","setAlertType","footer","setFooter","alert","setAlert","popupCtx","usePopUpContext","Footer","componentList","includes","time","getHours","getMinutes","getSeconds","getDay","getMonth","getFooter","handle","window","top","left","windowHeader","display","cursor","float","header","windowContent","background","windowFooter","difH","difMin","timeNow","difSec","toggleShowPopUp","windowInfo","BeamSplitter","controlId2","controlLED","controlLED2","rotation","rotationTop","SliderCtrl","sliderValue","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","text","m","gutterBottom","mb","Slider","aria-label","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","fullWidth","InputLabel","command","ESPCamSettings","Settings","switchIsOn","settings","setSettings","setSwitchStatus","setFrameSize","setContrast","setExposure","x1","x2","y1","y2","ctx","document","getElementById","gray","data","uint8Arr","Uint8Array","binary","fromCharCode","base64String","btoa","img","Image","onload","canvas","getContext","drawImage","this","src","IconButton","Canvas","ESPCamStream","innerWidth","HeaterSettings","Temp","Canvas2","Button","marginTop","marginBottom","startIcon","zIndex","averageTime","updateTime","HeaterCtrl","powerSwitch","setPowerSwitch","setAverageTime","setUpdateTime","powerValue","setPowerValue","temp","setTemp","hiddenSetting","pwm","componentT","string","toFixed","Canvas1","TempSmall","SwitchTemp","Heater","controlIdHeater","controlIdThermistor","RotaryCtrl","enteredRotation","setEnteredRotation","setRotation","absolute","rotCW_Handler","Number","move","rotaryCtrl","CtrlLeft","CtrlRight","Rotary","Rotary_bg","LaserCtrl","setSwitch","pl","pt","vertical-align","Laser","KM100","controlIdBottom","controlIdTop","KM100_Background","rotationBottom","SM1ZP","SM1ZP_bg","MichelsonInterferometer","zero","innerHeight","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","selected","InfoWindowContent","mainWrapper","href","bgTeam","alt","InfoWindow","ViewCam","peerConnection","offer","peer","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","localDescription","ontrack","srcObject","streams","onicecandidate","candidate","addIceCandidate","RTCIceCandidate","catch","console","setAttribute","autoPlay","playsInline","RTCPeerConnection","iceServers","urls","ExperimentUILayer","CamWindow","toggleSelect","DescriptiveTag","Html","zIndexRange","borderLeft","description","Model","useRef","useGLTF","nodes","materials","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","Math","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","PlaneMesh","WhiteParts","PlaneMesh_1","LaserMesh","LaserMesh_1","SD5","Cylinder","Cylinder_1","LaserBeam","emissive","emissiveIntensity","Cylinder007","Cylinder007_1","LaserBeamBS","LEDLightWhite","LEDWhite","LEDLightRed","LEDRed","TranslateMirrorMesh005","TranslateMirrorMesh005_1","TranslateMirrorMesh005_2","TranslateMirrorBase","Cylinder008","Cylinder008_1","Cylinder008_2","Cylinder008_3","Cylinder008_4","Cylinder008_5","TranslateMirrorMesh004","TranslateMirrorMesh004_1","BS_slimHolder001","BS_slimHolder","BaseMesh001","BaseMesh001_1","BaseMesh001_2","BaseMesh001_3","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_230201","ReactDOM","render","createTheme","palette","mode","primary","light","main","dark","contrastText","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","setText","setType","errmsg","newText","newType","autoHideDuration","reason","popUp","severity"],"mappings":"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","file":"static/js/main.890aed9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__2M4_v\",\"consoleMain\":\"Console_consoleMain__3PA3Q\",\"consoleHandler\":\"Console_consoleHandler__1s8wN\",\"openConsole\":\"Console_openConsole__EoPR2\",\"closeConsole\":\"Console_closeConsole__3fUaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__bP_tv\",\"windowHeader\":\"Window_windowHeader__3dGvs\",\"windowFooter\":\"Window_windowFooter__32UEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Settings_Canvas__3PUPd\",\"Settings\":\"Settings_Settings__vSiuu\",\"Cam\":\"Settings_Cam__1Pqxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__3PxRA\",\"navMenu\":\"NavBar_navMenu__pAShU\",\"navMenuLaser\":\"NavBar_navMenuLaser__2I-gB\",\"navRow\":\"NavBar_navRow__3fRgQ\",\"mobile\":\"NavBar_mobile__2AMvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__5PhHk\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__22lvT\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__3xHkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__F7FYl\",\"close\":\"Login_close__29SJu\",\"popupWindow\":\"Login_popupWindow__2dTT4\",\"popupInner\":\"Login_popupInner__2jRMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__3FTCe\"};","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import { MdOutlineScreenRotation, MdInfoOutline, MdOutlineHelp, MdOutlineMenuBook } from 'react-icons/md';\r\nimport { MenuItem, Menu, ThemeProvider, IconButton, Tooltip } from '@mui/material';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport { ImConnection } from 'react-icons/im'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport { theme } from './../templates/Theme'\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa';\r\nimport { memo, useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let autoRotateColor = '';\r\n    if (appCtx.autoRotate) { autoRotateColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n    let showHelpWindowColor = '';\r\n    if (appCtx.showHelpWindow) { showHelpWindowColor = 'white' }\r\n    let showManualWindowColor = '';\r\n    if (appCtx.showManualWindow) { showManualWindowColor = 'white' }\r\n\r\n    const [mobileVersion, setMobileVersion] = useState(null);\r\n    const openMobileVersion = Boolean(mobileVersion);\r\n\r\n    const [led, setLED] = useState(null);\r\n    const openLED = Boolean(led)\r\n\r\n    const [laserBeam, setLaserBeam] = useState(null);\r\n    const openLaserBeam = Boolean(laserBeam)\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setMobileVersion(event.currentTarget);\r\n    };\r\n\r\n    const handleClick2 = (event) => {\r\n        setLED(event.currentTarget);\r\n    };\r\n\r\n    const handleLaserBeam = (event) => {\r\n        setLaserBeam(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileVersion = () => {\r\n        setMobileVersion(null);\r\n    };\r\n    const handleLED = () => {\r\n        setLED(null);\r\n    };\r\n\r\n    const closeLaserBeam = () => {\r\n        setLaserBeam(null);\r\n    };\r\n\r\n    return (\r\n        <div id='navbar' className={styles.navbar} >\r\n            <ThemeProvider theme={theme} >\r\n                <h1>XR TwinLab</h1>\r\n                <div className={styles.navMenuLaser}>\r\n                    <h3>Overlay:</h3>\r\n\r\n                    <IconButton onClick={handleClick2} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <Icon icon=\"mdi:led-off\" width=\"70\" height=\"70\" />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={led}\r\n                        open={openLED}\r\n                        onClose={handleLED}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowBeam('none');\r\n                        }} disableRipple >None</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowBeam('white');\r\n                        }} disableRipple>White</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowBeam('red');\r\n                        }} disableRipple>Red</MenuItem>\r\n                    </Menu>\r\n\r\n                    <IconButton onClick={handleLaserBeam} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <GiLaserWarning />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={laserBeam}\r\n                        open={openLaserBeam}\r\n                        onClose={closeLaserBeam}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('on');\r\n                        }} disableRipple >On</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('off');\r\n                        }} disableRipple>Off</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('split');\r\n                        }} disableRipple>Beamsplitter</MenuItem>\r\n                    </Menu>\r\n\r\n\r\n                </div>\r\n                <div className={styles.navMenu}>\r\n                    <ul>\r\n                        <Tooltip title='Connnection'>\r\n                            <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29} color={connectionStatusColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Rotation'>\r\n                            <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Labels'>\r\n                            <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Webcam'>\r\n                            <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Manual'>\r\n                            <li onClick={appCtx.toggleShowManualWindow}><MdOutlineMenuBook size={26} color={showManualWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Help'>\r\n                            <li onClick={appCtx.toggleShowHelpWindow}><MdOutlineHelp size={26} color={showHelpWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Information'>\r\n                            <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className={styles.mobile}>\r\n                    <IconButton onClick={handleClick} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <KeyboardArrowDownIcon color={'white'} />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={mobileVersion}\r\n                        open={openMobileVersion}\r\n                        onClose={handleMobileVersion}\r\n                    >\r\n                        <MenuItem onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }} disableRipple>\r\n                            <ImConnection size={29} sx={{ width: '10px' }} />\r\n                            Connection\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleAutoRotate} disableRipple>\r\n                            <MdOutlineScreenRotation size={26} />\r\n                            Rotation\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleShowTags} disableRipple>\r\n                            <FaTags size={25} />\r\n                            Tags\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleCam} disableRipple>\r\n                            <MdOutlineMenuBook size={26} />\r\n                            Manual\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleShowManualWindow} disableRipple>\r\n                            <MdOutlineHelp size={26} />\r\n                            Help\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleShowHelpWindow} disableRipple>\r\n                            <BsCamera size={26} />\r\n                            Cam\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleShowInfoWindow} disableRipple>\r\n                            <MdInfoOutline size={26} />\r\n                            Info\r\n                        </MenuItem>\r\n\r\n                    </Menu>\r\n                </div>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\nexport default memo(NavBar, isEqual)\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [lastClosedComponent, setLastClosedComponent] = useState('');\r\n  const [smallSettingTemp, setSmallSettingTemp] = useState(false);\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [smallSetting, setSmallSetting] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showRotary, setShowRotary] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showBeam, setShowBeam] = useState('off');\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [showLED, setShowLED] = useState('none');\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      setLastClosedComponent(compId);\r\n    }\r\n  };\r\n\r\n  const toogleLastComp = () => {\r\n    setLastClosedComponent('');\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('Cam_1')\r\n  }\r\n\r\n  const toggleShowLED = (newVal) => {\r\n    setShowLED(newVal);\r\n  }\r\n\r\n  const toggleShowBeam = (newVal) => {\r\n    setShowBeam(newVal);\r\n  }\r\n\r\n  const toggleChangeRotary = () => {\r\n    setShowBeam(!showRotary);\r\n  }\r\n\r\n  const smallSettings = () => {\r\n    setSmallSetting(!smallSetting)\r\n  }\r\n\r\n  const smallSettingsTemp = () => {\r\n    setSmallSettingTemp(!smallSettingTemp)\r\n  }\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin,\r\n        toggleCam,\r\n        showCam,\r\n        lastClosedComponent,\r\n        toogleLastComp,\r\n        showLED,\r\n        toggleShowLED,\r\n        setShowRotary,\r\n        toggleChangeRotary,\r\n        smallSettings,\r\n        smallSetting,\r\n        smallSettingsTemp,\r\n        smallSettingTemp\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import { useAppContext } from '../../services/AppContext'\nimport { RiTerminalBoxFill } from 'react-icons/ri'\nimport styles from './Console.module.css'\nimport { useState, memo } from 'react'\nimport { isEqual } from 'lodash';\n\nconst Console = (props) => {\n  const [showConsole, setShowConsole] = useState(false);\n  const [animation, setAnimation] = useState('');\n  const appCtx = useAppContext();\n\n  const showConsoleHandler = () => {\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\n    setShowConsole(!showConsole)\n  }\n\n  return (\n    <div className={styles.consoleContainer + ' ' + animation}>\n      <div className={styles.consoleMain}>\n        {appCtx.logs.map((payload, index) => {\n          return (<span key={index}>{payload}<br /></span>)\n        })}\n      </div>\n      <div className={styles.consoleHandler}>\n        <span>\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\n        </span>\n      </div>\n    </div>\n  )\n}\nexport default memo(Console, isEqual);\n","import { useSocketContext } from '../../services/SocketContext';\nimport { useAppContext } from '../../services/AppContext';\nimport { theme } from '../../components/UI/templates/Theme';\nimport { useEffect, useState, memo } from 'react'\nimport styles from './CSS/Chat.module.css'\nimport { ImBubble } from 'react-icons/im'\nimport { MdSend } from 'react-icons/md'\nimport { isEqual } from 'lodash';\nimport { ThemeProvider, InputAdornment, IconButton, FormControl, InputLabel, OutlinedInput } from '@mui/material';\nconst Chat = () => {\n  const [showChat, setShowChat] = useState(false);\n  const [animation, setAnimation] = useState('');\n  var [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n\n  const socketCtx = useSocketContext();\n  const appCtx = useAppContext();\n\n  useEffect(() => {\n    const message = (payload) => {\n      setChat([...chat, payload]);\n    }\n\n    socketCtx.socket.on('message', message);\n\n    return () => {\n      socketCtx.socket.removeAllListeners('message', message);\n    }\n  }, [socketCtx, chat])\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    if (message.at(0) === '!') {\n\n      // console.log('message', message)\n\n      if (message === '!rotate' || message === '!r') {\n        appCtx.toggleAutoRotate();\n        setChat([...chat, { userId: 'XRTL', message: 'HRotation command was sent ... ', color: '#FF7373' }]);\n      } else if (message === '!constructiom' || message === '!c') {\n        appCtx.toggleunderConstruction();\n      }\n      else if (message === '!user' || message === '!users') {\n\n        socketCtx.socket.emit('updateUser')\n\n        socketCtx.socket.on('updateUser', (payload) => {\n          //console.log(payload)\n          var user = ''\n          for (var i = 2; i < payload.length; i += 3) {\n            user += payload[i] + ','\n          }\n          user = user.slice(0, -1)\n          setChat([...chat, { userId: 'XRTL', message: 'List of all the active user/s: ' + user, color: '#FF7373' }]);\n        })\n      }\n      else if (message === '!reset') {\n        socketCtx.socket.emit('message', { userId: 'XRTL', message: 'Attention the reset command was emited!', color: '#FF7373' });\n\n        const controlIds = ['KM100_top_1', 'KM100_bottom_1', 'linear_1', 'greenlaser_top_1', 'greenlaser_bottom_1', 'beamSplitter']\n\n        for (var i = 0; i < controlIds.length; i++) {\n          socketCtx.socket.emit('command', {\n            userId: socketCtx.username,\n            controlId: controlIds[i],\n            reset: true\n          })\n        }\n      }\n      else if (message === '!showcase' || message === '!s') {\n        // socketCtx.socket.emit ('updateUser') \n      }\n      else if (message === '!cam') {\n        socketCtx.socket.emit(\"command\", {\n          userId: 'XRTL',\n          controlId: 'overview',\n          frameSize: 10\n        })\n\n        socketCtx.socket.emit(\"command\", {\n          userId: 'XRTL',\n          controlId: 'overview',\n          exposure: 800,\n          color: socketCtx.fontColor,\n        })\n\n        socketCtx.socket.emit(\"command\", {\n          userId: 'XRTL',\n          controlId: 'overview',\n          contrast: 1,\n          color: socketCtx.fontColor,\n        })\n\n        setChat([...chat, { userId: 'XRTL', message: 'The highest camera settings have been made!', color: '#FF7373' }]);\n      }\n      else {\n        setChat([...chat, { userId: 'XRTL', message: \"Command doesn't exists\", color: '#FF7373' }]);\n      }\n\n    } else {\n      socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\n    }\n    setMessage('');\n  }\n\n  const showChatHandler = () => {\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\n    setShowChat(!showChat);\n  }\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  return (\n    <div\n      className={styles.chatContainer + ' ' + animation}\n    >\n      <div className={styles.chatMain}>\n        {chat.map((payload, index) => {\n          return (\n            <b key={index} >\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\n              <br />\n            </b>\n          )\n        })}\n      </div>\n      <form className={styles.msgForm}>\n        <ThemeProvider theme={theme}>\n\n          <FormControl sx={{ marginLeft: -4, width: 3 / 3, paddingTop: 1 }} variant=\"outlined\">\n            <InputLabel htmlFor=\"outlined-adornment-password\">Message  </InputLabel>\n            <OutlinedInput\n              onChange={handleChange}\n              onKeyPress={(e) => { if (e.key === 'Enter') { sendMessage(e); } }}\n              value={message}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={sendMessage}\n                    edge=\"end\"\n                  >\n                    <MdSend />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Message\"\n            />\n          </FormControl>\n        </ThemeProvider>\n      </form>\n      <div className={styles.chatHandler + ' ' + animation}>\n        <span>\n          <ImBubble size={35} onClick={showChatHandler} />\n        </span>\n      </div>\n    </div>\n  )\n}\nexport default memo(Chat, isEqual);","import HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { TextField, ThemeProvider, Button, IconButton, Grid } from '@mui/material';\r\nimport { themeLogin } from '../../components/UI/templates/Theme';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './Login.module.css';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'https://xrtl-mi.uni-jena.de' }]\r\n    const [connection, setConnection] = useState(null);\r\n    const [accessCode, setAccessCode] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleLogin = () => {\r\n        if (username !== '' && accessCode !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection), String(username));\r\n                socketCtx.toggleConnection(String(username), String(accessCode));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n        setConnection(connectionOption[1].title);\r\n    };\r\n\r\n    const handleAccessCode = (event) => {\r\n        setAccessCode(event.target.value);\r\n    };\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={themeLogin}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Login</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <TextField\r\n                            autoFocus\r\n                            variant='outlined'\r\n                            label='Username '\r\n                            value={username}\r\n                            onChange={handleChange}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{ marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={username === ''}\r\n                            helperText={username === '' ? 'Enter your username!' : ' '}\r\n                        />\r\n\r\n                        <TextField\r\n                            variant='outlined'\r\n                            label='Access code '\r\n                            value={accessCode}\r\n                            onChange={handleAccessCode}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{  marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={accessCode === ''}\r\n                            helperText={accessCode === '' ? 'Enter the access code!' : ' '}\r\n                        />\r\n                    </Grid>\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: '20%', height: '15%' }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__2QIb1\"};","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const Auth = (color) => {\r\n      setFontColor(color);\r\n      socket.emit('newUserInfo', username)\r\n    }\r\n\r\n    const connect = (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    socket.on('Auth', Auth);\r\n\r\n    if (appCtx.lastClosedComponent === 'screen') {\r\n      socket.emit(\"leave stream room\", { controlId: 'screen', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'heater') {\r\n      socket.emit('leave stream room', { controlId: 'heater', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'Cam_1') {\r\n      socket.emit('watcher disconnect');\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('Auth', Auth)\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username, accessCode) => {\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        code: accessCode,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      //secure: true, rejectUnauthorized: false}\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { FormControl, RadioGroup, FormControlLabel, Radio, FormLabel } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst RadioButton = (props) => {\r\n    const [radioButton, setRadioButton] = useState(props.val);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    const handleChange = async (event) => {\r\n        setRadioButton(event.target.value)\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: event.target.value,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set position on \" + props.component + \" to \" + radioButton)\r\n    }\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">{props.title}</FormLabel>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                value={props.val}\r\n                onChange={handleChange}\r\n            >\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'none'} control={<Radio />} label=\"None\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'splitter'} control={<Radio />} label=\"Beam splitter\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'pinhole'} control={<Radio />} label=\"Pinhole\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'rled'} control={<Radio />} label=\"Red LED\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'wled'} control={<Radio />} label=\"White LED\" />\r\n\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default RadioButton;","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\nimport { useSocketContext } from \"../../../services/SocketContext\";\nimport { useAppContext } from \"../../../services/AppContext\";\nimport { useState } from \"react\";\n\nconst SwiitchCtrl = (props) => {\n    const [switchValue, setSwitchValue] = useState(false);\n    const appCtx = useAppContext();\n    const socketCtx = useSocketContext();\n\n    try {\n        props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\n    } catch (error) { }\n\n    const handleSettingChanges = (event, newValue) => {\n        setSwitchValue(newValue);\n        socketCtx.socket.emit(\"command\", {\n            userId: socketCtx.username,\n            controlId: props.component,\n            [props.option]: newValue,\n            color: socketCtx.fontColor,\n        })\n\n        socketCtx.socket.emit(\"footer\", {\n            status: 'Used by: ' + socketCtx.username.substring(0, 17),\n            controlId: props.component\n        })\n\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\n\n        try {\n            props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\n        } catch (error) { }\n    }\n\n    return (\n        <Box >\n            <FormGroup>\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                    <Typography>{props.start}</Typography>\n                    <Switch checked={props.switchStatus}\n                        onChange={handleSettingChanges}\n                        inputProps={{ 'aria-label': 'controlled' }}\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\n                    <Typography>{props.end}</Typography>\n                </Stack>\n            </FormGroup>\n        </Box>\n    )\n}\n\nexport default SwiitchCtrl;\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { theme } from '../templates/Theme.js'\r\nimport RadioButton from '../templates/RadioButton';\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from '../templates/Switch';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst BeamSplitterCtrl = (props) => {\r\n    const [switchWhiteIsOn, setSwitchWhiteStatus] = useState(false);\r\n    const [switchRedIsOn, setSwitchRedStatus] = useState(false);\r\n    const [selectionStatus, setSelectionStatus] = useState(80);\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.redLED) {\r\n                setSwitchRedStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.whiteLED) {\r\n                setSwitchWhiteStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.component) {\r\n                (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n                setSelectionStatus(payload.status.state)\r\n            }\r\n            //console.log(\"Status of settings:   \", payload)\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.redLED,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.whiteLED,\r\n            getStatus: true\r\n        })\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps      \r\n    }, [socketCtx.socket]);\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ mx: 1 }}>\r\n                <RadioButton component={props.component} component2={props.pinhole} online={onlineStatus} val={selectionStatus} option=\"state\" />\r\n                <Switch component={props.whiteLED} switchStatus={switchWhiteIsOn} online={onlineStatus} start='LED white Off' end='On' option='switch' />\r\n                <Switch component={props.redLED} switchStatus={switchRedIsOn} online={onlineStatus} start='LED red Off' end='On' option='switch' />\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default BeamSplitterCtrl\r\n","import { IoReloadOutline, IoInformationCircleOutline } from 'react-icons/io5'\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { usePopUpContext } from '../../../services/PopUpContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/Window.module.css';\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { memo, useEffect } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { isEqual } from 'lodash';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Window = (props) => {\r\n  const [lastChange, setLastChange] = useState(props.lastChange);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState('Initializing... ');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.footer) {\r\n      setFooter('empty');\r\n    }\r\n\r\n    const Footer = (payload) => {\r\n      if (props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.on('footer', Footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('footer', Footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n\r\n    if (props.id === \"Cam_1\") {\r\n      appCtx.toggleCam();\r\n    }\r\n\r\n    if (props.id === \"info\") {\r\n      appCtx.toggleShowInfoWindow();\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.componentList[0],\r\n      reset: true\r\n    })\r\n\r\n    if (props.componentList[1]) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.componentList[1],\r\n        reset: true\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 50px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={handleReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={handleCloseWindow}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: 'url(' + props.background + ')',\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {footer !== 'empty' && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={handleInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);","import BeamSplitterCtrl from \"../UI/CtrlUnits/BeamSplitterCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\nconst BeamSplitter = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId, props.controlId2, props.controlLED, props.controlLED2]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"190px\"\r\n      width=\"360px\"\r\n\r\n    >\r\n      <BeamSplitterCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlId}\r\n        pinhole={props.controlId2}\r\n        redLED={props.controlLED}\r\n        whiteLED={props.controlLED2}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default BeamSplitter;\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderValue);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    setSliderPos(newValue)\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: newValue,\r\n      color: socketCtx.fontColor,\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState(props.selectValue);\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue.props.value,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set selected \" + props.component + \" with \" + selectValue)\r\n    }\r\n    if (props.title === 'Resolution') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={10}>XGA (1024x768)</MenuItem>\r\n                <MenuItem value={9}>SVGA (800x600)</MenuItem>\r\n                <MenuItem value={8}>VGA (640x480)</MenuItem>\r\n                <MenuItem value={5}>QVGA (320x240)</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n    else if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={5000}>5</MenuItem>\r\n                <MenuItem value={10000}>10</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\nimport { FormControl, InputLabel, Box } from '@mui/material';\nimport SelectItem from './SelectItem';\n\nconst SelectCtrl = (props) => {\n    return (\n        <Box sx={{ m: 2, width: 250 }}>\n            <FormControl fullWidth>\n                <InputLabel >{props.title}</InputLabel>\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} selectValue={props.selectValue} />\n            </FormControl>\n        </Box>\n    )\n}\nexport default SelectCtrl;","import { ThemeProvider } from '@mui/material/styles';\r\nimport styles from '../CSS/Settings.module.css';\r\nimport { theme } from '../templates/Theme.js';\r\nimport Slider from '../templates/SliderCtrl';\r\nimport Switch from '../templates/Switch';\r\nimport Select from '../templates/Select';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst ESPCamSettings = (props) => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Settings}>\r\n                <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n                <Select title='Resolution' component={props.component} online={props.online} option='frameSize' selectValue={props.frameSize}/>\r\n                <Switch component={props.component} switchStatus={props.switchIsOn} online={props.online} start='Color' end='Gray' option='gray' />\r\n                <Slider title='Contrast' component={props.component} online={props.online} sliderValue={props.contrast} min={-2} max={2} option='contrast' />\r\n                <Slider title='Exposure' component={props.component} online={props.online} sliderValue={props.exposure} min={0} max={1200} option='exposure' />\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default ESPCamSettings;","import { useSocketContext } from '../../../services/SocketContext';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport ESPCamSettings from '../templates/ESPCamSettings';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport styles from '../CSS/Settings.module.css'\r\nimport { theme } from '../templates/Theme.js';\r\nimport { useState, useEffect } from 'react';\r\nimport { IconButton } from '@mui/material';\r\n\r\nconst Settings = (props) => {\r\n    const appCtx = useAppContext();\r\n    const [settings, setSettings] = useState(appCtx.smallSetting);\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [switchIsOn, setSwitchStatus] = useState(false);\r\n    const [frameSize, setFrameSize] = useState(0);\r\n    const [contrast, setContrast] = useState(0);\r\n    const [exposure, setExposure] = useState(0);\r\n    const socketCtx = useSocketContext();\r\n\r\n    const hiddenSetting = () => {\r\n        setSettings(!settings);\r\n        appCtx.smallSettings()\r\n\r\n        if (props.width === '670px' || props.width === '1000px') {\r\n            if (appCtx.smallSetting) {\r\n                document.getElementById('ScreenCanvas').style.left = '-325px'\r\n            } else {\r\n                document.getElementById('ScreenCanvas').style.left = '-655px'\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        var x1, x2, y1, y2;\r\n        var ctx;\r\n        if (props.width === '670px' || props.width === '1000px') {\r\n            if (props.width === '670px') {\r\n                document.getElementById('ScreenCanvas').style.left = '-325px'\r\n            } else {\r\n                document.getElementById('ScreenCanvas').style.left = '-655px'\r\n            }\r\n        }\r\n\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                setSwitchStatus(payload.status.gray)\r\n                setExposure(payload.status.exposure)\r\n                setContrast(payload.status.contrast)\r\n                setFrameSize(payload.status.frameSize)\r\n                //console.log('Status of settings:   ', payload)\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                var uint8Arr = new Uint8Array(payload.data);\r\n                var binary = '';\r\n                for (var i = 0; i < uint8Arr.length; i++) {\r\n                    binary += String.fromCharCode(uint8Arr[i]);\r\n                }\r\n                var base64String = window.btoa(binary);\r\n\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    var canvas = document.getElementById('ScreenCanvas');\r\n                    if (canvas != null && settings) {\r\n                        ctx = canvas.getContext('2d');\r\n                        x1 = 0;\r\n                        y1 = 0;\r\n                        x2 = 600;\r\n                        y2 = 400;\r\n                        ctx.drawImage(this, x1, y1, x2, y2);\r\n                    } else {\r\n                        ctx = canvas.getContext('2d');\r\n                        x1 = 0;\r\n                        y1 = 0;\r\n                        x2 = 600;\r\n                        y2 = 400;\r\n                        ctx.drawImage(this, x1, y1, x2, y2);\r\n                    }\r\n                };\r\n                img.src = 'data:image/jpg;base64,' + base64String;\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('join stream room', {\r\n            controlId: props.component,\r\n            userId: socketCtx.username\r\n        });\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Settings}>\r\n                <IconButton onClick={hiddenSetting}  >\r\n                    <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                </IconButton>\r\n                <div className={styles.Canvas}>\r\n                    <canvas id='ScreenCanvas' width={'600px'} height={'400px'} />\r\n                </div>\r\n                {settings && <ESPCamSettings component={props.component} online={onlineStatus} contrast={contrast} exposure={exposure} switchIsOn={switchIsOn} frameSize={frameSize} />}\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Settings;","import Settings from '../UI/CtrlUnits/Settings';\nimport Window from '../UI/experimentUI/Window';\nimport { useAppContext } from '../../services/AppContext';\n\nconst ESPCamStream = (props) => {\n  const appCtx = useAppContext();\n  var width = window.innerWidth\n  var height = 0;\n\n  if (0 < width && width < 576) {\n    width = '350px'\n    height = '260px'\n  }\n  else if (576 < width && width < 768) {\n    width = '510px'\n    height = '340px'\n  }\n  else if (768 < width && width < 1000) {\n    width = '650px'\n    height = '430px'\n  } else {\n    width = '1000px'\n    height = '430px'\n  }\n\n  if (appCtx.smallSetting && width === '1000px') {\n    width = '1000px'\n  } else if(!appCtx.smallSetting && width === '1000px') {\n    width = '670px'\n  }\n\n  return (\n    <Window\n      id={props.controlId}\n      componentList={[props.controlId]}\n      header={props.title}\n      top={props.top}\n      left={props.left}\n      width={width}\n      height={height}\n    >\n      <Settings\n        component={props.controlId}\n        width={width}\n      />\n    </Window>\n  );\n};\nexport default ESPCamStream;","import DeviceThermostatOutlinedIcon from '@mui/icons-material/DeviceThermostatOutlined';\r\nimport { Button } from '@mui/material';\r\nimport styles from '../CSS/HeaterCtrl.module.css';\r\nimport Select from './Select'\r\n\r\nconst HeaterSettings = (props) => {\r\n\r\n    return (\r\n        <div className={styles.Temp}>\r\n            <div className={styles.Canvas2}>\r\n                <Button sx={{ fontSize: 17, marginLeft: -34, marginTop: -4, marginBottom: 10 }} startIcon={<DeviceThermostatOutlinedIcon />}>Gauge settings </Button>\r\n                <div className={styles.Select}>\r\n                    <Select sx={{ zIndex: 1500, marginBottom: -10 }} title='Average time (ms)' component={props.component} online={props.online} option='averageTime' selectValue={props.averageTime} />\r\n                    <Select title='Update time (s)' component={props.component} online={props.online} option='updateTime' selectValue={props.updateTime} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default HeaterSettings;","import { ThemeProvider, Button, IconButton, Typography } from '@mui/material';\r\nimport MicrowaveOutlinedIcon from '@mui/icons-material/MicrowaveOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport styles from '../CSS/HeaterCtrl.module.css';\r\nimport { theme } from '../templates/Theme.js';\r\nimport Slider from '../templates/SliderCtrl';\r\nimport { useState, useEffect } from 'react';\r\nimport Switch from '../templates/Switch'\r\nimport HeaterSettings from '../templates/HeaterSettings'\r\nimport { useAppContext } from '../../../services/AppContext';\r\n\r\nconst HeaterCtrl = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [powerSwitch, setPowerSwitch] = useState(false);\r\n    const [averageTime, setAverageTime] = useState(0);\r\n    const [updateTime, setUpdateTime] = useState(0);\r\n    const [powerValue, setPowerValue] = useState(0);\r\n    const [temp, setTemp] = useState('-°C');\r\n\r\n    const hiddenSetting = () => {\r\n        appCtx.smallSettingsTemp();\r\n\r\n        if (!appCtx.smallSettingTemp) {\r\n            document.getElementById('smallTemp').style.display = 'none'\r\n            document.getElementById('temp').style.display = 'block'\r\n        } else {\r\n            document.getElementById('smallTemp').style.display = 'block'\r\n            document.getElementById('temp').style.display = 'none'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (appCtx.smallSettingTemp) {\r\n            document.getElementById('smallTemp').style.display = 'none'\r\n            document.getElementById('temp').style.display = 'block'\r\n        } else {\r\n            document.getElementById('smallTemp').style.display = 'block'\r\n            document.getElementById('temp').style.display = 'none'\r\n        }\r\n\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                setPowerSwitch(payload.status.isOn)\r\n                setPowerValue(payload.status.pwm)\r\n\r\n                // console.log(\"Status  \", payload)\r\n            }\r\n\r\n            if (payload.controlId === props.componentT) {\r\n                setAverageTime(payload.status.averageTime);\r\n                setUpdateTime(payload.status.updateTime);\r\n                // console.log(\"Status  Thermistor\", payload)\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.componentT) {\r\n                var string = payload.data.data;\r\n                try { string = string.toFixed(1) + \" °C\" } catch (e) { string = '-°C' }\r\n                setTemp(string);\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.componentT,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('join stream room', {\r\n            controlId: props.componentT,\r\n            userId: socketCtx.username\r\n        });\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n\r\n            <div id={'temp'} style={{ display: 'none' }}>\r\n                <div className={styles.Temp}>\r\n                    <Typography id='temp' variant='h2'>{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.Canvas1}>\r\n                    <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                    <Slider title='PowerSwitch' component={props.component} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n\r\n                </div>\r\n                <div className={styles.Switch} >\r\n                    <Switch component={props.component} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option='switch' />\r\n                </div>\r\n                <HeaterSettings online={true} component={props.componentT} updateTime={updateTime} averageTime={averageTime} />\r\n            </div>\r\n\r\n\r\n            <div id={'smallTemp'} >\r\n                <div className={styles.TempSmall}>\r\n                    <Typography id='temp' variant='h2'>{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className={styles.Canvas1}>\r\n                    <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                    <Slider title='PowerSwitch' component={props.component} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n\r\n                </div>\r\n                <div className={styles.SwitchTemp} >\r\n                    <Switch component={props.component} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option='switch' />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </ThemeProvider>\r\n    )\r\n\r\n}\r\nexport default HeaterCtrl;\r\n","import HeaterCtrl from '../UI/CtrlUnits/HeaterCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useAppContext } from '../../services/AppContext';\r\n\r\nconst Heater = (props) => {\r\n    const appCtx = useAppContext();\r\n    var width = window.innerWidth\r\n\r\n    if (appCtx.smallSettingTemp) {\r\n        width = '673px'\r\n    } else if (!appCtx.smallSettingTemp) {\r\n        width = '350px'\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            id={props.id}\r\n            componentList={[props.controlIdHeater, props.controlIdThermistor]}\r\n            header={props.title}\r\n            top={props.top}\r\n            left={props.left}\r\n            height='340px'\r\n            width={width}\r\n        >\r\n            <HeaterCtrl\r\n                component={props.controlIdHeater}\r\n                componentT={props.controlIdThermistor}\r\n            />\r\n        </Window>\r\n    )\r\n}\r\nexport default Heater;","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\nimport { useSocketContext } from '../../../services/SocketContext'\nimport { useAppContext } from '../../../services/AppContext';\nimport styles from '../CSS/RotaryCtrl.module.css';\nimport { useState, useEffect } from 'react';\n\nconst RotaryCtrl = (props) => {\n  const [enteredRotation, setEnteredRotation] = useState(0);\n  const [onlineStatus, setOnlineStatus] = useState(false);\n  const [rotation, setRotation] = useState(0);\n  var direction;\n\n  const appCtx = useAppContext();\n  const socketCtx = useSocketContext();\n\n  useEffect(() => {\n    const status = (payload) => {\n      if (payload.controlId === props.component) {\n        setOnlineStatus(true)\n        setRotation(payload.status.absolute);\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\n      }\n    }\n\n    socketCtx.socket.emit('command', {\n      userId: socketCtx.username,\n      controlId: props.component,\n      getStatus: true\n    });\n\n    socketCtx.socket.emit('getFooter', props.component);\n\n    socketCtx.socket.on('status', status);\n\n    return () => {\n      socketCtx.socket.removeAllListeners('status', status)\n\n    }\n    //Comment needed to prevent a warning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socketCtx.socket]);\n\n  const rotCW_Handler = name => (event) => {\n    event.preventDefault();\n    direction = 0;\n\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\n\n    if (direction !== 0) {\n      socketCtx.socket.emit('command', {\n        userId: socketCtx.username,\n        controlId: props.component,\n        move: direction,\n        color: socketCtx.fontColor,\n      });\n\n      socketCtx.socket.emit('footer', {\n        status: 'Used by: ' + socketCtx.username.substring(0, 17),\n        controlId: props.component\n      });\n\n      /*  if (rotation > 5000 || rotation > -5000) {\n         appCtx.toggleChangeRotary();\n       } else {\n         appCtx.toggleChangeRotary();\n       } */\n    }\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\n  };\n\n  const changeRotationHandler = (event) => {\n    if (event.target.value > -1) {\n      setEnteredRotation(event.target.value);\n    }\n  };\n\n  return (\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\n      <div className={styles.rotaryCtrl}>\n        <span>{Number(rotation)}</span>\n        <input\n          type='number'\n          min='0'\n          max='100'\n          value={enteredRotation}\n          onChange={changeRotationHandler}\n        />\n      </div>\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\n        <MdOutlineRotateLeft size={28} />\n      </button>\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\n        <MdOutlineRotateRight size={28} />\n      </button>\n    </form>\n  );\n};\nexport default RotaryCtrl;","export default __webpack_public_path__ + \"static/media/rotary_outline.c6f9b7e7.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Rotary_bg from './media/rotary_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Rotary = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={Rotary_bg}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top='10'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default Rotary;\r\n","import { ThemeProvider } from '@mui/material/styles';\nimport { useSocketContext } from \"../../../services/SocketContext\";\nimport { GiLaserWarning } from \"react-icons/gi\";\nimport { useState, useEffect } from \"react\";\nimport { theme } from '../templates/Theme.js';\nimport Switch from '../templates/Switch';\nimport { Box } from '@mui/material';\n\nconst LaserCtrl = (props) => {\n  const [onlineStatus, setOnlineStatus] = useState(false);\n  const [switchIsOn, setSwitch] = useState(false);\n  const socketCtx = useSocketContext();\n\n  useEffect(() => {\n    const status = (payload) => {\n      if (payload.controlId === props.component) {\n        setOnlineStatus(true)\n        setSwitch(payload.status.isOn)\n      }\n    }\n\n    socketCtx.socket.emit(\"command\", {\n      userId: socketCtx.username,\n      controlId: props.component,\n      getStatus: true\n    })\n\n    socketCtx.socket.emit('getFooter', props.component)\n\n    socketCtx.socket.on(\"status\", status);\n\n    return () => {\n      socketCtx.socket.removeAllListeners('status', status)\n    }\n    //Comment needed to prevent a warning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socketCtx.socket])\n\n\n  return (\n    <div className=\"switchOnOff\" style={{ top: \"0px\", position: \"relative\", paddingTop: '0px' }}>\n      <ThemeProvider theme={theme} >\n        <Box sx={{ pl: 2, pt: 2 }}>\n          <Switch component={props.component} led={props.led} icon={document.getElementById(\"icon\")} online={onlineStatus} switchStatus={switchIsOn} start='Off' end='On' option=\"switch\" />\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\n        </Box>\n      </ThemeProvider>\n    </div>\n  )\n}\nexport default LaserCtrl\n","import LaserCtrl from '../UI/CtrlUnits/LaserCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Laser = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='200px'\r\n      width='300px'\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n        top='0'\r\n        left='0'\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst KM100 = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlIdBottom, props.controlIdTop]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      \r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport SM1ZP_bg from './media/linear_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst SM1ZP = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={SM1ZP_bg}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import BeamSplitter from '../../assembly/BeamSplitter';\r\nimport ESPCam from '../../assembly/ESPCamStream';\r\nimport Heater from '../../assembly/Heater';\r\nimport Rotary from '../../assembly/Rotary';\r\nimport Laser from '../../assembly/Laser';\r\nimport KM100 from '../../assembly/KM100';\r\nimport SM1ZP from '../../assembly/SM1ZP';\r\n\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = 'Initializing...'\r\n  var zero = '0'\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has('KM100_1') && (\r\n        <KM100\r\n          title='Reference Mirror'\r\n          id={'KM100_1'}\r\n          controlIdTop={'KM100_top_1'}\r\n          controlIdBottom={'KM100_bottom_1'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has('linear_1') && (\r\n        <SM1ZP\r\n          title='Linear Movable Mirror'\r\n          controlId={'linear_1'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Rotary stage plate*/}\r\n      {props.selected.has('plate_rotation') && (\r\n        <Rotary\r\n          title='Glass Plate Rotation Stage'\r\n          controlId={'plate_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Rotary stage Measurement Mirror*/}\r\n      {props.selected.has('heater_rotation') && (\r\n        <Rotary\r\n          title='Mirror Changing Stage'\r\n          controlId={'heater_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topHighMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has('greenlaser_1') && (\r\n        <KM100\r\n          title='Laser Alignment'\r\n          id={'greenlaser_1'}\r\n          controlIdTop={'greenlaser_top_1'}\r\n          controlIdBottom={'greenlaser_bottom_1'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has('greenlaserPower_1') && (\r\n        <Laser\r\n          title='Power Supply'\r\n          id={'greenlaserPower_1'}\r\n          controlId={'greenlaser_1'}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has('screen') && (\r\n        <ESPCam\r\n          title='Screen'\r\n          controlId={'screen'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n      {/* Heater */}\r\n      {props.selected.has('heater') && (\r\n        <Heater\r\n          title='Heatable Mirror Stage'\r\n          id={'heater'}\r\n          controlIdHeater={'heater'}\r\n          controlIdThermistor={'thermistor'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n\r\n      {/* Beam splitter */}\r\n      {props.selected.has('experimentSelection') && (\r\n        <BeamSplitter\r\n          title='Multi Component Selection'\r\n          controlId={'experimentSelection'}\r\n          controlId2={'pinhole'}\r\n          controlLED={'redLED'}\r\n          controlLED2={'whiteLED'}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={halfWidth}\r\n        />\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default MichelsonInterferometer;","export default __webpack_public_path__ + \"static/media/xrtl_team.9c8d8d7c.png\";","import styles from \"./InfoWindowContent.module.css\"\r\nimport bgTeam from \"../media/images/xrtl_team.png\"\r\n\r\nconst InfoWindowContent = (props) => {\r\n  return (\r\n    <div>\r\n\r\n      <div className={styles.mainWrapper}      >\r\n        Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\r\n        <p>\r\n          This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n        </p>\r\n        <p>\r\n          Best! Clara, Falko, Jari and Johannes\r\n        </p>\r\n      </div>\r\n      <img className={styles.img} src={bgTeam} alt='XRTL Team' />\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;\r\n","import Window from \"../UI/experimentUI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            id='info'\r\n            top=\"10\"\r\n            left=\"20\"\r\n            width=\"30\"\r\n            height=\"80\"\r\n            footer={'empty'}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import { useSocketContext } from '../../services/SocketContext'\r\nimport { useEffect } from 'react';\r\n\r\nconst ViewCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        var peerConnection;\r\n        \r\n        const offer = (payload) => {\r\n            peerConnection = props.peer;\r\n            peerConnection\r\n            .setRemoteDescription(payload.data)\r\n            .then(() => peerConnection.createAnswer())\r\n            .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n            .then(() => socketCtx.socket.emit('answer', { id: payload.id, data: peerConnection.localDescription }))\r\n            \r\n            peerConnection.ontrack = (event) => {\r\n                document.getElementById('video').srcObject = event.streams[0];\r\n            }\r\n            \r\n            peerConnection.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socketCtx.socket.emit('candidate', { id: payload.id, data: event.candidate })\r\n                }\r\n            }\r\n        }\r\n        \r\n        const candidate = (payload) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(payload.data))\r\n                .catch(e => console.error(e))\r\n        }\r\n\r\n        document.getElementById('video').setAttribute('style', 'transform: rotate(180deg)')\r\n\r\n        socketCtx.socket.emit('viewer', props.component)\r\n\r\n        socketCtx.socket.on('offer', offer)\r\n\r\n        socketCtx.socket.on('candidate', candidate)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('offer', offer)\r\n            socketCtx.socket.removeAllListeners('candidate', candidate)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <video className=\"video\" id='video' autoPlay playsInline width=\"640px\" height=\"480px\" ></video>\r\n        </div>\r\n    );\r\n};\r\nexport default ViewCam;\r\n","import Window from \"../UI/experimentUI/Window\";\r\nimport ViewCam from \"../Chat/ViewCamStream\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const config = { iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }] } //stun:stun.stunprotocol.org\r\n    var peerConnection = new RTCPeerConnection(config);\r\n\r\n    return (\r\n        <Window\r\n            id=\"Cam_1\"\r\n            componentList={['Cam_1']}\r\n            header=\"Top view of experiment\"\r\n            top=\"200\"\r\n            left=\"250\"\r\n            width=\"640px\"\r\n            footer={'empty'}\r\n        >\r\n            <ViewCam\r\n                component=\"Cam_1\"\r\n                peer={peerConnection}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;\r\n","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport CamWindow from \"../../assembly/CamWindow\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\"\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.setNewFont(color);\r\n      setConnection(true);\r\n    }\r\n    socketCtx.socket.on('AuthFailed', () => {\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    })\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '30px',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '150px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from 'react';\r\nimport { useGLTF, Box, Cylinder} from '@react-three/drei';\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport {isEqual} from 'lodash';\r\n\r\nexport function Model(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF(\"/model/MI_230104.glb\");\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* Glass Materials need to be generated here*/}\r\n          {/* Beam Splitter cube */}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 1 */}\r\n          <Box\r\n            position={[-0.45, 0.55, 0.58]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#9999ff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 2 */}\r\n          <Box\r\n            position={[0.2, 0.55, 0.44]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#99ff99\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Beam Splitter slim is defined in 'off' Overlay*/}\r\n\r\n          {/* Lens */}\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[0,0,0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"KM100_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 1.3, 0.9]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"KM100_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}          \r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"screen\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, -1.3]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n            material={materials.WhiteParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaser_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.6, 1.3, 0]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"greenlaser_1\") ? (\r\n                <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n              )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n       </group>\r\n\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaserPower_1\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.4, 1.1, -0.8]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"greenlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {\r\n          (props.showBeam === 'off') &&\r\n          <group>\r\n            <group\r\n                name=\"BS_slim\"\r\n                position={[0.64, 0, -0.52]}\r\n                onPointerDown={(e) => {\r\n                  e.stopPropagation();\r\n                  props.toggleSelect(\"experimentSelection\");\r\n                }}\r\n              >\r\n                {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n                <mesh\r\n                  name=\"Cylinder\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder.geometry}\r\n                  material={materials.BlackParts}\r\n                >\r\n                  {props.selected.has(\"experimentSelection\") ? (\r\n                    <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                  ) : (\r\n                    <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                  )}\r\n                </mesh>\r\n                <mesh\r\n                  name=\"Cylinder_1\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder_1.geometry}\r\n                  material={materials.ShinyParts}\r\n                />\r\n              </group>\r\n              <Cylinder\r\n                position={[0.64, 0.68, -0.66]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n          </group>\r\n        }\r\n        {\r\n          (props.showBeam === 'on') &&\r\n          <group>\r\n            <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group> \r\n        }\r\n\r\n        {\r\n          (props.showBeam === 'split') && \r\n          <group>\r\n            <mesh\r\n              name=\"LaserBeamBS\"\r\n              geometry={nodes.LaserBeamBS.geometry}\r\n              material={materials.Laser}\r\n              position={[-0.53, 0.68, -0.13]}\r\n              rotation={[0, 0, -Math.PI / 2]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <mesh\r\n              name=\"LaserBeam\"\r\n              castShadow\r\n              receiveShadow\r\n              geometry={nodes.LaserBeam.geometry}\r\n              material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh> \r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0, 0, 0]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n              <Cylinder\r\n                position={[0, 0.68, -0.14]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group>  \r\n        }\r\n\r\n        {(props.showLED === 'none') &&\r\n        <mesh/>\r\n        }\r\n\r\n        {(props.showLED === 'white') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightWhite\"\r\n              geometry={nodes.LEDLightWhite.geometry}\r\n              material={materials.LEDWhite}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ffffff\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n          </group>\r\n        }\r\n\r\n        {(props.showLED === 'red') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightRed\"\r\n              geometry={nodes.LEDLightRed.geometry}\r\n              material={materials.LEDRed}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ff3900\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder> \r\n          </group>\r\n        }\r\n\r\n    \r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.76, 0.62, 0.03]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"linear_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.8, 0]} title=\"Linear Movable Mirror\" description=\"SM1ZP/M Translation Mount\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"linear_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n                  \r\n        <mesh\r\n          name=\"TranslateMirrorBase\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.TranslateMirrorBase.geometry}\r\n          material={materials.BlackParts}\r\n          position={[-1.88, 0.11, -0.01]}\r\n        />\r\n\r\n        <group\r\n          name=\"ThermalMirror\"\r\n          position={[-2.7, 0.82, -0.91]}\r\n          rotation={[0, -Math.PI / 2, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"heater\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Heatable Mirror Stage\" description=\"Mirror Mounted on an Aluminum Rod\" />}\r\n          <mesh \r\n            name=\"Cylinder008\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008.geometry}\r\n            material={materials['Material.002']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#884422\" opacity={1.0}/>\r\n            )}\r\n          </mesh>\r\n          <mesh \r\n            name=\"Cylinder008_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_1.geometry}\r\n            material={materials['BlackParts.001']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"Cylinder008_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_2.geometry}\r\n            material={materials['ShinyParts.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_3\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_3.geometry}\r\n            material={materials['Alu.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_4\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_4.geometry}\r\n            material={materials['Mirror.002']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_5\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_5.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n        </group>\r\n\r\n        <group\r\n          name=\"TranslateMirrorBase\"\r\n          position={[-2.38, 0.11, -1.01]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('heater_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Mirror Changing Stage\" description=\"PR01/M Rotation Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004.geometry}\r\n            material={materials.BlackParts}\r\n          >  \r\n            {props.selected.has('heater_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        \r\n        <group\r\n          name=\"RotaryStage\"\r\n          position={[-0.12, 0, 0.51]}\r\n          rotation={[0, -1.57, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('plate_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Glass Plate Rotation Stage\" description=\"PR01/M Rotation Stage\" />}\r\n          <mesh\r\n            name=\"PR01_M-Step001\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001'].geometry}\r\n            material={materials['BlackParts.004']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_1'].geometry}\r\n            material={materials['BlackParts.003']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_2'].geometry}\r\n            material={materials['ShinyParts.003']}\r\n          />\r\n        </group>\r\n\r\n        <mesh\r\n          name=\"BS_slimHolder001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder001.geometry}\r\n          material={materials.BlackParts}\r\n        />     \r\n\r\n        <mesh\r\n          name=\"BS_slimHolder\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder.geometry}\r\n          material={materials.BlackParts}\r\n          position={[0.64, 0, -0.66]}\r\n          rotation={[-Math.PI, 0.63, -Math.PI]}\r\n        />\r\n        \r\n        \r\n\r\n        <mesh\r\n          name=\"BaseMesh001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_1.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_2.geometry}\r\n          material={materials['BlackParts.004']}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_3.geometry}\r\n          material={materials['ShinyParts.004']}\r\n        />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/MI_230104.glb')\r\nexport default memo(Model, isEqual);\r\n","import MI_230201 from \"../../experiment/MichelsonInterferometer/MI_230201\";\r\nimport { OrbitControls, Environment } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: 'absolute',\r\n          background: 'linear-gradient(Teal, Black)',\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files='../hdri/autoshop.hdr' />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_230201\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n            showLED={appCtx.showLED}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            light: '#01bd7d',\n            main: '#01bd7d',\n            dark: '#01bd7d',\n            contrastText: '#01bd7d',\n        },\n    }\n})\n\nexport const themeLogin = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            light: '#01bd7d',\n            main: '#01bd7d',\n            dark: '#01bd7d',\n            contrastText: '#fff',\n        },\n    },\n    spacing: 2,\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Temp\":\"HeaterCtrl_Temp__jBaKb\",\"Switch\":\"HeaterCtrl_Switch__3eN4Z\",\"Canvas1\":\"HeaterCtrl_Canvas1__2Nq0o\",\"Canvas2\":\"HeaterCtrl_Canvas2__1H7_e\",\"Select\":\"HeaterCtrl_Select__1DEUK\",\"TempSmall\":\"HeaterCtrl_TempSmall__2Dmo3\",\"SwitchTemp\":\"HeaterCtrl_SwitchTemp__GvZuy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__12YJt\",\"chatMain\":\"Chat_chatMain__2eTFB\",\"msgForm\":\"Chat_msgForm__3_C6o\",\"chatHandler\":\"Chat_chatHandler__321sW\",\"openChat\":\"Chat_openChat__3oUjr\",\"closeChat\":\"Chat_closeChat__GVHsw\",\"buttonBlink\":\"Chat_buttonBlink__3AMb2\"};","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n"],"sourceRoot":""}