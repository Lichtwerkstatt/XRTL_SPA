{"version":3,"sources":["components/Console/Console.module.css","components/UI/CSS/Window.module.css","components/UI/CSS/RotaryCtrl.module.css","components/UI/CSS/NavBar.module.css","components/Login/Login.module.css","components/UI/CSS/Settings.module.css","components/assembly/Stream.module.css","services/SocketContext.js","services/AppContext.js","App.js","components/UI/experimentUI/NavBar.js","components/Console/Console.js","components/Chat/Chat.js","components/Login/Login.js","services/PopUp.module.css","components/windows/InfoWindowContent.module.css","components/UI/templates/RadioButton.js","components/UI/templates/Switch.js","components/UI/CtrlUnits/BeamSplitterCtrl.js","components/UI/experimentUI/Window.js","components/assembly/BeamSplitter.js","components/UI/templates/LeftRightCtrl.js","components/UI/templates/UpDownCtrl.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/CtrlUnits/Settings.js","components/assembly/ESPCamStream.js","components/UI/CtrlUnits/HeaterCtrl.js","components/assembly/Heater.js","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/media/rotary_outline.png","components/assembly/Rotary.js","components/UI/CtrlUnits/LaserCtrl.js","components/assembly/Laser.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/Chat/ViewCamStream.js","components/windows/CamWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_230201.js","components/UI/experimentUI/VirtualLayer.js","index.js","services/PopUpContext.js","components/UI/CSS/HeaterCtrl.module.css","components/Chat/CSS/Chat.module.css"],"names":["module","exports","manager","Manager","autoConnect","socket","SocketContext","createContext","jwt","require","useSocketContext","useContext","SocketContextProvider","children","useState","connected","setConnected","username","setUsername","URL","setURL","fontColor","setFontColor","appCtx","useAppContext","useEffect","Auth","color","emit","connect","e","addLog","disconnect","on","lastClosedComponent","controlId","userId","toogleLastComp","removeAllListeners","setNewURL","newURL","Provider","value","toggleConnection","accessCode","close","payload","sub","code","component","iat","Date","now","token","sign","auth","setNewFont","newFont","helperEmit","event","AppContext","React","AppContextProvider","setLastClosedComponent","showVirtualLayer","setShowVirtualLayer","Set","selectedComps","setSelectedComps","showInfoWindow","setShowInfoWindow","autoRotate","setAutoRotate","showRotary","setShowRotary","showLogin","setShowLogin","showBeam","setShowBeam","showTags","setShowTags","showCam","setShowCam","showLED","setShowLED","logs","setLogs","toggleSelectedComp","compId","has","prev","filter","x","add","toggleAutoRotate","toggleShowVirtualLayer","log","toggleShowTags","toggleShowBeam","newVal","console","toggleShowInfoWindow","toggleLogin","toggleCam","toggleShowLED","toggleChangeRotary","App","process","title","NavBar","socketCtx","connectionStatusColor","autoRotateColor","showTagsColor","cameraStatusColor","showInfoWindowColor","id","className","styles","navbar","navMenuLaser","variant","popupId","popupState","bindTrigger","sx","borderRadius","bgcolor","icon","width","height","bindMenu","mode","onClick","size","navMenu","memo","isEqual","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","map","index","consoleHandler","closeConsole","openConsole","Chat","showChat","setShowChat","message","setMessage","chat","setChat","chatContainer","chatMain","style","msgForm","onSubmit","preventDefault","type","name","placeholder","onChange","target","required","chatHandler","closeChat","openChat","Login","connection","setConnection","setAccessCode","createFilterOptions","theme","createTheme","palette","primary","light","main","dark","contrastText","spacing","handleLogin","String","error","popupWindow","popupInner","fontSize","container","columnSpacing","md","item","xs","autoFocus","label","onKeyPress","key","marginLeft","helperText","m","freeSolo","renderInput","params","newValue","inputValue","filterOptions","options","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","endIcon","marginTop","RadioButton","val","radioButton","setRadioButton","FormControl","FormLabel","RadioGroup","row","aria-labelledby","Number","component2","option2","led","status","FormControlLabel","disabled","online","control","Radio","SwiitchCtrl","switchValue","setSwitchValue","switchStatus","Box","FormGroup","Stack","direction","alignItems","Typography","start","Switch","checked","inputProps","end","BeamSplitterCtrl","switchWhiteIsOn","setSwitchWhiteStatus","switchRedIsOn","setSwitchRedStatus","selectionStatus","setSelectionStatus","onlineStatus","setOnlineStatus","redLED","isOn","whiteLED","absolute","footer","newStatus","getFooter","getStatus","pinhole","ThemeProvider","mx","Window","handle","window","top","left","windowHeader","display","cursor","float","header","onReset","onClose","windowContent","background","undefined","windowFooter","onInfo","windowInfo","BeamSplitter","lastChange","setLastChange","alertType","setAlertType","setFooter","alert","setAlert","popupCtx","usePopUpContext","reset","difH","difMin","timeNow","difSec","getHours","getMinutes","getSeconds","getDay","getMonth","toggleShowPopUp","rotation","rotationTop","controlId2","newFooter","time","controlLED","controlLED2","LED","LeftRightCtrl","handleCtrl","negativ","IconButton","UpDownCtrl","SliderCtrl","sliderValue","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","text","gutterBottom","mb","Slider","aria-label","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","fullWidth","InputLabel","command","Settings","switchIsOn","setSwitchStatus","contrast","setContrast","exposure","setExposure","gray","UpDown","LeftRight","ESPCamStream","handleChangeFooter","data","uint8Arr","Uint8Array","binary","i","length","fromCharCode","base64String","btoa","img","Image","onload","canvas","document","getElementById","getContext","drawImage","this","src","Canvas","HeaterCtrl","powerSwitch","setPowerSwitch","powerValue","setPowerValue","setting","setSettings","temp","setTemp","hiddenSetting","pwm","string","toFixed","Temp","Canvas1","Heater","gridTemplateColumns","mt","paddingLeft","Button","startIcon","Canvas2","componentT","controlIdThermistor","controlIdHeater","RotaryCtrl","enteredRotation","setEnteredRotation","setRotation","busy","rotCW_Handler","move","rotaryCtrl","CtrlLeft","CtrlRight","Rotary","Rotary_bg","LaserCtrl","setSwitch","vertical-align","Laser","KM100","KM100_Background","controlIdBottom","controlIdTop","rotationBottom","SM1ZP","SM1ZP_bg","MichelsonInterferometer","zero","innerHeight","innerWidth","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","selected","InfoWindowContent","mainWrapper","backgroundImage","bgTeam","href","InfoWindow","ViewCam","peerConnection","offer","peer","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","localDescription","ontrack","srcObject","streams","onicecandidate","candidate","addIceCandidate","RTCIceCandidate","catch","setAttribute","autoPlay","playsInline","RTCPeerConnection","iceServers","urls","ExperimentUILayer","CamWindow","toggleSelect","DescriptiveTag","Html","position","zIndexRange","borderLeft","description","Model","useRef","useGLTF","nodes","materials","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","Math","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","PlaneMesh","WhiteParts","PlaneMesh_1","LaserMesh","LaserMesh_1","SD5","Cylinder","Cylinder_1","LaserBeam","emissive","emissiveIntensity","Cylinder007","Cylinder007_1","LaserBeamBS","LEDLightWhite","LEDWhite","LEDLightRed","LEDRed","TranslateMirrorMesh005","TranslateMirrorMesh005_1","TranslateMirrorMesh005_2","TranslateMirrorBase","Cylinder008","Cylinder008_1","Cylinder008_2","Cylinder008_3","Cylinder008_4","Cylinder008_5","TranslateMirrorMesh004","TranslateMirrorMesh004_1","BS_slimHolder001","BS_slimHolder","BaseMesh001","BaseMesh001_1","BaseMesh001_2","BaseMesh001_3","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_230201","ReactDOM","render","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","setText","setType","errmsg","newText","newType","open","autoHideDuration","reason","popUp","severity"],"mappings":"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","file":"static/js/main.3668cd34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__1dDWk\",\"consoleMain\":\"Console_consoleMain__SxxQK\",\"consoleHandler\":\"Console_consoleHandler__2f7jk\",\"openConsole\":\"Console_openConsole__1E2CK\",\"closeConsole\":\"Console_closeConsole__1Gp8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__eoZ4W\",\"windowHeader\":\"Window_windowHeader__2vHd6\",\"windowFooter\":\"Window_windowFooter__3xtgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1dFJs\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__1Oq_0\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__RbI2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2NK8m\",\"navMenu\":\"NavBar_navMenu__DRNeT\",\"navMenuLaser\":\"NavBar_navMenuLaser__1OP1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1DZpm\",\"close\":\"Login_close__jc06k\",\"popupWindow\":\"Login_popupWindow__2XsJg\",\"popupInner\":\"Login_popupInner__1U9Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpDown\":\"Settings_UpDown__1XZ21\",\"LeftRight\":\"Settings_LeftRight__NUQR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Stream_Canvas__pCA10\",\"Settings\":\"Stream_Settings__2Zsif\"};","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const Auth = (color) => {\r\n      setFontColor(color);\r\n      socket.emit('newUserInfo', username)\r\n    }\r\n\r\n    const connect = (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    socket.on('Auth', Auth);\r\n\r\n    if (appCtx.lastClosedComponent === 'screen') {\r\n      socket.emit(\"leave stream room\", { controlId: 'screen', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'heater') {\r\n      socket.emit('leave stream room', { controlId: 'heater', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'Cam_1') {\r\n      socket.emit('watcher disconnect');\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('Auth', Auth)\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username, accessCode) => {\r\n    accessCode='access';\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        code: accessCode,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      //secure: true, rejectUnauthorized: false}\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [lastClosedComponent, setLastClosedComponent] = useState('');\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showRotary, setShowRotary] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showBeam, setShowBeam] = useState('off');\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [showLED, setShowLED] = useState('none');\r\n  const [logs, setLogs] = useState([]);\r\n\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      setLastClosedComponent(compId);\r\n    }\r\n  };\r\n\r\n  const toogleLastComp = () => {\r\n    setLastClosedComponent('');\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('Cam_1')\r\n  }\r\n\r\n  const toggleShowLED = (newVal) => {\r\n    console.log(newVal)\r\n    setShowLED(newVal);\r\n  }\r\n\r\n  const toggleShowBeam = (newVal) => {\r\n    console.log(newVal)\r\n    setShowBeam(newVal);\r\n  }\r\n  \r\n  const toggleChangeRotary = () => {\r\n   \r\n    setShowBeam(!showRotary);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin,\r\n        toggleCam,\r\n        showCam,\r\n        lastClosedComponent,\r\n        toogleLastComp,\r\n        showLED,\r\n        toggleShowLED,\r\n        setShowRotary,\r\n        toggleChangeRotary\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\r\nimport { MdOutlineScreenRotation, MdInfoOutline } from 'react-icons/md'\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { ImConnection } from 'react-icons/im'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa'\r\n//import { BsBox } from 'react-icons/bs'\r\nimport Menu from '@mui/material/Menu';\r\nimport { Icon } from '@iconify/react';\r\nimport { memo, Fragment } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let autoRotateColor = '';\r\n    if (appCtx.autoRotate) { autoRotateColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n\r\n    return <div id='navbar' className={styles.navbar} >\r\n        <h1>XR TwinLab</h1>\r\n        <div className={styles.navMenuLaser}>\r\n        <h3>Overlay:</h3>\r\n   \r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n                    {(popupState) => (\r\n                        <Fragment>\r\n                            <IconButton variant=\"contained\" {...bindTrigger(popupState)} sx={{\r\n                                borderRadius: 1,\r\n                                color: 'black',\r\n                                ':hover': {\r\n                                    bgcolor: 'darkgreen',\r\n                                    color: '#00ffa8',\r\n                                }\r\n                            }}>\r\n                                <Icon icon=\"mdi:led-off\"  width=\"27\"  height=\"27\" />\r\n                            </IconButton>\r\n                            <Menu {...bindMenu(popupState)} sx={{ color: { mode: 'dark' } }} >\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('none');\r\n                                }} >None</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('white');\r\n                                }}>White</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('red');\r\n                                }}>Red</MenuItem>\r\n                            </Menu>\r\n                        </Fragment>\r\n                    )}\r\n                </PopupState>\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n                    {(popupState) => (\r\n                        <Fragment>\r\n                            <IconButton variant=\"contained\" size='25' sx={{\r\n                                borderRadius: 1,\r\n                                color: 'black',\r\n                                ':hover': {\r\n                                    bgcolor: 'darkgreen',\r\n                                    color: '#00ffa8',\r\n                                }\r\n                            }}  {...bindTrigger(popupState)}>\r\n                                <GiLaserWarning />\r\n                            </IconButton>\r\n                            <Menu {...bindMenu(popupState)}>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('on');\r\n                                }} >On</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('off');\r\n                                }}>Off</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('split');\r\n                                }}>Beamsplitter</MenuItem>\r\n                            </Menu>\r\n                        </Fragment>\r\n                    )}\r\n                </PopupState>\r\n           \r\n        </div>\r\n        <div className={styles.navMenu}>\r\n            <ul>\r\n                <Tooltip title='Connnection'>\r\n                    <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29} color={connectionStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n{/*                 <Tooltip title='2D model'>\r\n                    <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} /></li>\r\n                </Tooltip> */}\r\n\r\n                <Tooltip title='Rotation'>\r\n                    <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Labels'>\r\n                    <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Webcam'>\r\n                    <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Information'>\r\n                    <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                </Tooltip>\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\nexport default memo(NavBar, isEqual)","import { useAppContext } from '../../services/AppContext'\r\nimport { RiTerminalBoxFill } from 'react-icons/ri'\r\nimport styles from './Console.module.css'\r\nimport { useState, memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Console = (props) => {\r\n  const [showConsole, setShowConsole] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + ' ' + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}>\r\n        <span>\r\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { useEffect, useState, memo } from 'react'\r\nimport styles from './CSS/Chat.module.css'\r\nimport { ImBubble } from 'react-icons/im'\r\nimport { MdSend } from 'react-icons/md'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Chat = () => {\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const message = (payload) => {\r\n      setChat([...chat, payload]);\r\n    }\r\n\r\n    socketCtx.socket.on('message', message);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('message', message);\r\n    }\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\r\n    setMessage('');\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\r\n    setShowChat(!showChat);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + ' ' + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm} onSubmit={sendMessage}>\r\n        <input\r\n          type='text'\r\n          name='message'\r\n          placeholder='Type message here...'\r\n          value={message}\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n          }}\r\n          required\r\n        />\r\n        <button type='submit'><MdSend size={25} /></button>\r\n      </form>\r\n      <div className={styles.chatHandler + ' ' + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);","import { Grid, Autocomplete, Box, TextField, createTheme, ThemeProvider, Button, IconButton } from '@mui/material';\r\nimport HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { useSocketContext } from '../../services/SocketContext'\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './Login.module.css'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'http://10.232.37.40:3000' }]\r\n    const [connection, setConnection] = useState(null);\r\n    const [username, setUsername] = useState('');\r\n    const [accessCode, setAccessCode] = useState('');\r\n    const filter = createFilterOptions();\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#fff',\r\n            },\r\n        },\r\n        spacing: 2,\r\n    })\r\n\r\n    const handleLogin = () => {\r\n        if (username !== ''){ //&& accessCode !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection.title), String(username));\r\n                socketCtx.toggleConnection(String(username), String(accessCode));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const handleAccessCode = (event) => {\r\n        setAccessCode(event.target.value);\r\n    };\r\n\r\n\r\n    const autoCompleteHandle = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setConnection({ title: newValue, });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setConnection({ title: newValue.inputValue, });\r\n        } else {\r\n            setConnection(newValue);\r\n        }\r\n    }\r\n\r\n    const filterOption = (options, params) => {\r\n        const filtered = filter(options, params);\r\n        const { inputValue } = params;\r\n        const isExisting = options.some((option) => inputValue === option.title);\r\n        if (inputValue !== '' && !isExisting) {\r\n            filtered.push({ inputValue, title: `Add '${inputValue}'`, });\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    const getLabel = (option) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n        }\r\n        if (option.inputValue) {\r\n            return option.inputValue;\r\n        }\r\n        return option.title;\r\n    }\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Login</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid container columnSpacing={{ md: 95 }}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                autoFocus\r\n                                variant='outlined'\r\n                                label='Username '\r\n                                value={username}\r\n                                onChange={handleChange}\r\n                                onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                                style={{ marginLeft: 17, width: 250 }}\r\n                                error={username === ''}\r\n                                helperText={username === '' ? 'Enter your username!' : ' '}\r\n                            />\r\n                        </Grid>\r\n                 \r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                label='Access code '\r\n                                value={accessCode}\r\n                                onChange={handleAccessCode}\r\n                                onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                                style={{ marginLeft: -30, width: 150 }}\r\n                                error={accessCode === ''}\r\n                                helperText={accessCode === '' ? 'Enter the access code!' : ' '}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{ m: 8, width: 250 }} >\r\n                        <Autocomplete\r\n                            value={connection}\r\n                            freeSolo\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label='Choose server address ' />)}\r\n                            onChange={autoCompleteHandle}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            filterOptions={filterOption}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            options={connectionOption}\r\n                            getOptionLabel={getLabel}\r\n                            renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: 90, height: 30, marginTop: -3, marginLeft: 350 }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__IolRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__345Fv\"};","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { FormControl, RadioGroup, FormControlLabel, Radio, FormLabel } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst RadioButton = (props) => {\r\n    const [radioButton, setRadioButton] = useState(props.val);\r\n    var val = false;\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    const handleChange = (event) => {\r\n        setRadioButton(event.target.value)\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: Number(event.target.value)\r\n        })\r\n        if (event.target.value === '79') {\r\n            val = true;\r\n\r\n        } else {\r\n            val = false;\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component2,\r\n            [props.option2]: val\r\n        })\r\n\r\n        if (props.led) {\r\n            socketCtx.socket.emit('command', {\r\n                controlId: props.led,\r\n                color: socketCtx.fontColor,\r\n            });\r\n        }\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set position on \" + props.component + \" to \" + radioButton)\r\n    }\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">{props.title}</FormLabel>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                value={props.val}\r\n                onChange={handleChange}\r\n\r\n            >\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={80} control={<Radio />} label=\"None\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={112} control={<Radio />} label=\"Beam splitter\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={79} control={<Radio />} label=\"Pinhole\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={40} control={<Radio />} label=\"Red LED\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={41} control={<Radio />} label=\"White LED\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default RadioButton;","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    try {\r\n        props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n    } catch (error) { }\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n\r\n        })\r\n        \r\n        if (props.led) {\r\n            socketCtx.socket.emit('command', {\r\n                controlId: props.led,\r\n                color: socketCtx.fontColor,\r\n            });\r\n        }\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 250, m: 2 }}>\r\n            <FormGroup>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport RadioButton from '../templates/RadioButton';\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from '../templates/Switch';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst BeamSplitterCtrl = (props) => {\r\n    const [switchWhiteIsOn, setSwitchWhiteStatus] = useState(false);\r\n    const [switchRedIsOn, setSwitchRedStatus] = useState(false);\r\n    const [selectionStatus, setSelectionStatus] = useState(80);\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.redLED) {\r\n                setSwitchRedStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.whiteLED) {\r\n                setSwitchWhiteStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === 'experimentSelection') {\r\n                setSelectionStatus(payload.status.absolute)\r\n            }\r\n            //console.log(\"Status of settings:   \", payload)\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n\r\n                setOnlineStatus(payload.online)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.pinhole,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.redLED,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.whiteLED,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component);\r\n        socketCtx.socket.emit('getFooter', props.pinhole);\r\n        socketCtx.socket.emit('getFooter', props.redLED)\r\n        socketCtx.socket.emit('getFooter', props.whiteLED)\r\n\r\n\r\n\r\n        socketCtx.socket.on(\"status\", status);\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps      \r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ mx: 1 }}>\r\n                <RadioButton component={props.component} component2={props.pinhole} online={onlineStatus} val={selectionStatus} led={props.led} option=\"moveTo\" option2=\"binaryCtrl\" />\r\n                <Switch component={props.whiteLED} led={props.led} switchStatus={switchWhiteIsOn} online={onlineStatus} start='LED white Off' end='On' option='switch' />\r\n                <Switch component={props.redLED} led={props.led} switchStatus={switchRedIsOn} online={onlineStatus} start='LED red Off' end='On' option='switch' />\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default BeamSplitterCtrl\r\n","import { IoReloadOutline, IoInformationCircleOutline } from 'react-icons/io5'\r\nimport { CgCloseO } from 'react-icons/cg'\r\nimport styles from '../CSS/Window.module.css'\r\nimport Draggable from 'react-draggable'\r\nimport { memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Window = (props) => {\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 50px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={props.onReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={props.onClose}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: 'url(' + props.background + ')',\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {props.footer !== undefined && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={props.onInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{props.footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);\r\n","import BeamSplitterCtrl from \"../UI/CtrlUnits/BeamSplitterCtrl\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport { useState } from \"react\";\r\n\r\nconst BeamSplitter = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setFooter(newFooter);\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"190px\"\r\n      width=\"360px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n\r\n    >\r\n      <BeamSplitterCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlId}\r\n        pinhole={props.controlId2}\r\n        newStatus={handleChangeFooter}\r\n        redLED={props.controlLED}\r\n        whiteLED={props.controlLED2}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default BeamSplitter;\r\n","import Right from '@mui/icons-material/ArrowCircleRightOutlined';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport Left from '@mui/icons-material/ArrowCircleLeftOutlined';\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst LeftRightCtrl = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCtrl = (direction, negativ) => (event) => {\r\n        event.preventDefault();\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: negativ ? 15 : -15\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User changed the position on \" + props.component)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", false)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n                <Left />\r\n            </IconButton>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", true)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n                <Right />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftRightCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Stack, IconButton } from '@mui/material';\r\nimport Up from '@mui/icons-material/ArrowCircleUpOutlined';\r\nimport Down from '@mui/icons-material/ArrowCircleDownOutlined';\r\n\r\nconst UpDownCtrl = (props) => {\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCtrl = (direction, negativ) => (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: negativ ? 15 : -15\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User changed the position on \" + props.component)\r\n  }\r\n\r\n  return (\r\n    <Stack >\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", true)} disabled={(socketCtx.connected && props.online) ? false : true} >\r\n        <Up />\r\n      </IconButton>\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", false)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n        <Down />\r\n      </IconButton>\r\n    </Stack>\r\n  )\r\n}\r\nexport default UpDownCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderValue);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    setSliderPos(newValue)\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: newValue\r\n    })\r\n    \r\n    if (props.led) {\r\n      socketCtx.socket.emit('command', {\r\n        controlId: props.led,\r\n        color: socketCtx.fontColor,\r\n      });\r\n    }\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 300, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={90}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState('');\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue.props.value\r\n        })\r\n        if (props.led) {\r\n            socketCtx.socket.emit('command', {\r\n                controlId: props.led,\r\n                color: socketCtx.fontColor,\r\n            });\r\n        }\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set selected \" + props.component + \" with \" + selectValue)\r\n    }\r\n    if (props.title === 'Resolution') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={13}>UXGA (1600x1200)</MenuItem>\r\n                <MenuItem value={12}>SXGA (1280x1024)</MenuItem>\r\n                <MenuItem value={10}>XGA (1024x768)</MenuItem>\r\n                <MenuItem value={9}>SVGA (800x600)</MenuItem>\r\n                <MenuItem value={8}>VGA (640x480)</MenuItem>\r\n                <MenuItem value={6}>CIF (400x296)</MenuItem>\r\n                <MenuItem value={5}>QVGA (320x240)</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n    else if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={5000}>5</MenuItem>\r\n                <MenuItem value={10000}>10</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\r\nimport { FormControl, InputLabel, Box } from '@mui/material';\r\nimport SelectItem from './SelectItem'\r\n\r\nconst SelectCtrl = (props) => {\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >{props.title}</InputLabel>\r\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} />\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\nexport default SelectCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport LeftRightCtrl from \"../templates/LeftRightCtrl\";\r\nimport styles from \"../CSS/Settings.module.css\"\r\nimport UpDownCtrl from \"../templates/UpDownCtrl\"\r\nimport Slider from \"../templates/SliderCtrl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from \"../templates/Switch\"\r\nimport Select from \"../templates/Select\";\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Settings = (props) => {\r\n    const [switchIsOn, setSwitchStatus] = useState(false);\r\n    const [contrast, setContrast] = useState(0);\r\n    const [exposure, setExposure] = useState(0);\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setSwitchStatus(payload.status.gray)\r\n                setExposure(payload.status.exposure)\r\n                setContrast(payload.status.contrast)\r\n                console.log(\"Status of settings:   \", payload)\r\n            }\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on(\"status\", status);\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.UpDown}>\r\n                <UpDownCtrl component={props.component} online={onlineStatus} option='virtualTilt' />\r\n            </div>\r\n            <div className={styles.LeftRight}>\r\n                <LeftRightCtrl component={props.component} online={onlineStatus} option='virtualPan' />\r\n            </div>\r\n            <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n            <Select title=\"Resolution\" component={props.component} online={onlineStatus} option=\"frameSize\" />\r\n            <Switch component={props.component} switchStatus={switchIsOn} online={onlineStatus} start='Color' end='Gray' option=\"gray\" />\r\n            <Slider title=\"Contrast\" component={props.component} online={onlineStatus} sliderValue={contrast} min={-2} max={2} option=\"contrast\" />\r\n            <Slider title=\"Exposure\" component={props.component} online={onlineStatus} sliderValue={exposure} min={0} max={500} option=\"exposure\" />\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Settings\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport Settings from '../UI/CtrlUnits/Settings';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useEffect, useState } from 'react';\r\nimport styles from './Stream.module.css';\r\n\r\nconst ESPCamStream = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = (payload) => {\r\n      var uint8Arr = new Uint8Array(payload.data);\r\n      var binary = '';\r\n      for (var i = 0; i < uint8Arr.length; i++) {\r\n        binary += String.fromCharCode(uint8Arr[i]);\r\n      }\r\n      var base64String = window.btoa(binary);\r\n\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        var canvas = document.getElementById('ScreenCanvas');\r\n        if (canvas != null) {\r\n          var ctx = canvas.getContext('2d');\r\n          var x1 = 0,\r\n            y1 = 0,\r\n            x2 = 300,\r\n            y2 = 200;\r\n          ctx.drawImage(this, x1, y1, x2, y2);\r\n        }\r\n      };\r\n      img.src = 'data:image/jpg;base64,' + base64String;\r\n    }\r\n\r\n    socketCtx.socket.on('data', data);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('data', data)\r\n    }\r\n  }, [socketCtx.socket]);\r\n\r\n  useEffect(() => {\r\n    socketCtx.socket.emit('join stream room', { controlId: props.controlId, userId: socketCtx.username });\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='1000px'\r\n      height='430px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      footer={footer}\r\n      newStatus={handleChangeFooter}\r\n    >\r\n      <div className={styles.Canvas}>\r\n        <canvas id='ScreenCanvas' />\r\n      </div>\r\n      <div className={styles.Settings}>\r\n        <Settings\r\n          component={props.controlId}\r\n          led={props.LED}\r\n          footer={footer}\r\n          newStatus={handleChangeFooter} />\r\n      </div>\r\n\r\n    </Window>\r\n  );\r\n};\r\nexport default ESPCamStream;\r\n","import { Box, createTheme, ThemeProvider, Button, IconButton, Typography } from '@mui/material';\r\nimport DeviceThermostatOutlinedIcon from '@mui/icons-material/DeviceThermostatOutlined';\r\nimport MicrowaveOutlinedIcon from '@mui/icons-material/MicrowaveOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport styles from \"../CSS/HeaterCtrl.module.css\";\r\nimport Slider from '../templates/SliderCtrl';\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from '../templates/Switch'\r\nimport Select from '../templates/Select'\r\n\r\nconst HeaterCtrl = (props) => {\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [powerSwitch, setPowerSwitch] = useState(false);\r\n    const [powerValue, setPowerValue] = useState(0);\r\n    const [setting, setSettings] = useState(true);\r\n    const [temp, setTemp] = useState('-°C');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    const hiddenSetting = () => {\r\n        setSettings(!setting);\r\n    }\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setPowerSwitch(payload.status.isOn)\r\n                setPowerValue(payload.status.pwm)\r\n            }\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(payload.online)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            var string = payload.data.data;\r\n            try { string = string.toFixed(1) + \" °C\" } catch (e) { string = '-°C' }\r\n            setTemp(string);\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on(\"status\", status);\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        socketCtx.socket.on(\"data\", data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    if (setting) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.Temp}>\r\n                    <Typography id='temp' variant=\"h2\" >{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.Canvas1}>\r\n                    <canvas id=\"Gauge\" />\r\n                </div>\r\n                <div className={styles.Heater} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', mt: -2 }}>\r\n                        <div style={{ paddingLeft: 10 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                            <Slider title=\"PowerSwitch\" component={props.component} led={props.led} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={styles.Switch} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)' }}>\r\n                        <Switch component={props.component} led={props.led} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option=\"switch\" />\r\n                    </Box>\r\n                </div>\r\n            </ThemeProvider>\r\n        )\r\n    } else {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.Temp}>\r\n                    <Typography id='temp' variant=\"h2\">{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.Canvas2}>\r\n                    <canvas id=\"Heater\" />\r\n                </div>\r\n                <div className={styles.Canvas1}>\r\n                    <canvas id=\"Gauge\" />\r\n                </div>\r\n                <div className={styles.Heater} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', mt: -2 }}>\r\n                        <div style={{ paddingLeft: 10 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                            <Slider title=\"PowerSwitch\" component={props.component} led={props.led} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n                        </div>\r\n                        <div style={{ paddingLeft: 40 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<DeviceThermostatOutlinedIcon />}>Gauge settings </Button>\r\n                            <Select title=\"Average time (ms)\" component={props.componentT} led={props.led} online={onlineStatus} option=\"averageTime\" />\r\n                            <Select title=\"Update time (s)\" component={props.componentT} led={props.led} online={onlineStatus} option=\"updateTime\" />\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={styles.Switch} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)' }}>\r\n                        <Switch component={props.component} led={props.led} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option=\"switch\" />\r\n                    </Box>\r\n                </div>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\nexport default HeaterCtrl;","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport HeaterCtrl from '../UI/CtrlUnits/HeaterCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst Heater = (props) => {\r\n    const [lastChange, setLastChange] = useState(['', '', '']);\r\n    const [alertType, setAlertType] = useState('info');\r\n    const [footer, setFooter] = useState(props.footer);\r\n    var [alert, setAlert] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n    const popupCtx = usePopUpContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCloseWindow = () => {\r\n        appCtx.toggleSelectedComp(props.id);    \r\n    };\r\n\r\n    const handleReset = () => {\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.controlIdHeater,\r\n            reset: true\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.controlIdThermistor,\r\n            reset: true\r\n        })\r\n    }\r\n\r\n    const handleInfo = () => {\r\n        var timeNow = new Date();\r\n        let difH, difMin, difSec = 0;\r\n        alert = '';\r\n\r\n        timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n        if (lastChange[0] === '') {\r\n            alert = 'No last change detected!'\r\n        } else if (timeNow[0] > lastChange[0]) {\r\n            difH = timeNow[0] - lastChange[0];\r\n            alert = 'Last change is more than ' + difH + ' h ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n            difSec = timeNow[2] - lastChange[2]\r\n            alert = 'Last change is ' + difSec + ' s ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n            difMin = timeNow[1] - lastChange[1]\r\n            alert = 'Last change is more than ' + difMin + ' min ago!'\r\n        } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n            alert = 'Last change is more than 24 h ago!'\r\n        } else {\r\n            alert = 'No last change detected!'\r\n        }\r\n\r\n        setAlert(alert);\r\n        setAlertType('info');\r\n        popupCtx.toggleShowPopUp(alert, alertType);\r\n    }\r\n\r\n    const handleChangeFooter = (newFooter) => {\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n        setFooter(newFooter);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [socketCtx.socket]);\r\n\r\n    useEffect(() => {\r\n        socketCtx.socket.emit('join stream room', { controlId: props.controlIdThermistor, userId: socketCtx.username });\r\n\r\n        return () => {\r\n\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <Window\r\n            header={props.title}\r\n            top={props.top}\r\n            left={props.left}\r\n            height='340px'\r\n            width='673px'\r\n            onClose={handleCloseWindow}\r\n            onReset={handleReset}\r\n            onInfo={handleInfo}\r\n            footer={footer}\r\n        >\r\n            <HeaterCtrl\r\n                component={props.controlIdHeater}\r\n                componentT={props.controlIdThermistor}\r\n                newStatus={handleChangeFooter}\r\n                led={props.LED}\r\n                footer={footer}\r\n            />\r\n        </Window>\r\n    )\r\n}\r\n\r\nexport default Heater;","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    const footer = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(payload.online)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    socketCtx.socket.on('footer', footer);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n      socketCtx.socket.removeAllListeners('footer', footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.component,\r\n        move: direction\r\n      });\r\n\r\n      socketCtx.socket.emit('command', {\r\n        controlId: props.led,\r\n        color: socketCtx.fontColor,\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Last change by: ' + socketCtx.username,\r\n        controlId: props.component\r\n      });\r\n\r\n      if (rotation > 5000 || rotation > -5000) {\r\n        appCtx.toggleChangeRotary();\r\n      } else {\r\n        appCtx.toggleChangeRotary();\r\n      }\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    setEnteredRotation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","export default __webpack_public_path__ + \"static/media/rotary_outline.c6f9b7e7.png\";","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Rotary_bg from './media/rotary_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst Rotary = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      background={Rotary_bg}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        control='linear'\r\n        top='10'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default Rotary;\r\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { GiLaserWarning } from \"react-icons/gi\"\r\nimport { Box } from '@mui/material';\r\nimport Switch from '../templates/Switch';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n      primary: {\r\n        light: '#01bd7d',\r\n        main: '#01bd7d',\r\n        dark: '#01bd7d',\r\n        contrastText: '#fff',\r\n      },\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n    const footer = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(payload.online)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    socketCtx.socket.on('footer', footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n      socketCtx.socket.removeAllListeners('footer', footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <div className=\"switchOnOff\">\r\n      <ThemeProvider theme={theme} >\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n          <Switch component={props.component} led={props.led} icon={document.getElementById(\"icon\")} online={onlineStatus} switchStatus={switchIsOn} start='Off' end='On' option=\"switch\" />\r\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\nexport default LaserCtrl\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport LaserCtrl from '../UI/CtrlUnits/LaserCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst Laser = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='200px'\r\n      width='300px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n        top='0'\r\n        left='0'\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import { useSocketContext } from '../../services/SocketContext'\r\nimport { usePopUpContext } from '../../services/PopUpContext'\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst KM100 = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  //wie handhaben wir das?\r\n  const handleReset = () => {\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlIdBottom,\r\n      reset: true\r\n    })\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlIdTop,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport SM1ZP_bg from './media/linear_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst SM1ZP = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      background={SM1ZP_bg}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        control='linear'\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import BeamSplitter from '../../assembly/BeamSplitter';\r\nimport ESPCam from '../../assembly/ESPCamStream';\r\nimport Heater from '../../assembly/Heater';\r\nimport Rotary from '../../assembly/Rotary';\r\nimport Laser from '../../assembly/Laser';\r\nimport KM100 from '../../assembly/KM100';\r\nimport SM1ZP from '../../assembly/SM1ZP';\r\n\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = 'Initializing...'\r\n  var zero = '0'\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has('KM100_1') && (\r\n        <KM100\r\n          title='Mirror'\r\n          id={'KM100_1'}\r\n          controlIdTop={'KM100_top_1'}\r\n          controlIdBottom={'KM100_bottom_1'}\r\n          LED={'led_KM100'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has('linear_1') && (\r\n        <SM1ZP\r\n          title='Mirror Stage'\r\n          controlId={'linear_1'}\r\n          LED={'led_linear'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Rotary stage plate*/}\r\n      {props.selected.has('plate_rotation') && (\r\n        <Rotary\r\n          title='Plate Stage'\r\n          controlId={'plate_rotation'}\r\n          LED={'led_plate'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Rotary stage Measurement Mirror*/}\r\n      {props.selected.has('heater_rotation') && (\r\n        <Rotary\r\n          title='Measure Stage'\r\n          controlId={'heater_rotation'}\r\n          LED={'led_heater'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topHighMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has('greenlaser_1') && (\r\n        <KM100\r\n          title='Laser'\r\n          id={'greenlaser_1'}\r\n          controlIdTop={'greenlaser_top_1'}\r\n          controlIdBottom={'greenlaser_bottom_1'}\r\n          LED={'led_laser'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has('greenlaserPower_1') && (\r\n        <Laser\r\n          title='Power Supply'\r\n          id={'greenlaserPower_1'}\r\n          controlId={'greenlaser_1'}\r\n          LED={'led_laser'}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has('screen') && (\r\n        <ESPCam\r\n          title='Screen'\r\n          controlId={'screen'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n      {/* Heater */}\r\n      {props.selected.has('heater') && (\r\n        <Heater\r\n          title='Heater'\r\n          id={'heater'}\r\n          controlIdHeater={'heater'}\r\n          controlIdThermistor={'thermistor'}\r\n          LED={'led_linear'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n\r\n      {/* Beam splitter */}\r\n      {props.selected.has('experimentSelection') && (\r\n        <BeamSplitter\r\n          title='Beam modifier/LED'\r\n          controlId={'experimentSelection'}\r\n          controlId2={'pinhole'}\r\n          controlLED={'redLED'}\r\n          controlLED2={'whiteLED'}\r\n          LED={'led_selection'}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={halfWidth}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MichelsonInterferometer;","export default __webpack_public_path__ + \"static/media/xrtl_team.519a843e.png\";","import styles from \"./InfoWindowContent.module.css\"\r\nimport bgTeam from \"../media/images/xrtl_team.png\"\r\n\r\nconst InfoWindowContent = (props) => {\r\n  return (\r\n    <div className={styles.mainWrapper}\r\n      style={{ backgroundImage: \"url(\\\"\" + bgTeam + \"\\\")\" }}\r\n    >\r\n      Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\r\n      <p>\r\n        This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n      </p>\r\n      <p>\r\n        Best! Clara, Falko, Jari and Johannes\r\n      </p>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;","import { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCloseWindow = () => {\r\n        appCtx.toggleShowInfoWindow();\r\n    };\r\n\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            top=\"250\"\r\n            left=\"200\"\r\n\r\n            width=\"600px\"\r\n            onClose={handleCloseWindow}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import { useSocketContext } from '../../services/SocketContext'\r\nimport { useEffect } from 'react';\r\n\r\nconst ViewCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        var peerConnection;\r\n        \r\n        const offer = (payload) => {\r\n            peerConnection = props.peer;\r\n            peerConnection\r\n            .setRemoteDescription(payload.data)\r\n            .then(() => peerConnection.createAnswer())\r\n            .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n            .then(() => socketCtx.socket.emit('answer', { id: payload.id, data: peerConnection.localDescription }))\r\n            \r\n            peerConnection.ontrack = (event) => {\r\n                document.getElementById('video').srcObject = event.streams[0];\r\n            }\r\n            \r\n            peerConnection.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socketCtx.socket.emit('candidate', { id: payload.id, data: event.candidate })\r\n                }\r\n            }\r\n        }\r\n        \r\n        const candidate = (payload) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(payload.data))\r\n                .catch(e => console.error(e))\r\n        }\r\n\r\n        document.getElementById('video').setAttribute('style', 'transform: rotate(180deg)')\r\n\r\n        socketCtx.socket.emit('viewer', props.component)\r\n\r\n        socketCtx.socket.on('offer', offer)\r\n\r\n        socketCtx.socket.on('candidate', candidate)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('offer', offer)\r\n            socketCtx.socket.removeAllListeners('candidate', candidate)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <video className=\"video\" id='video' autoPlay playsInline width=\"640px\" height=\"480px\" ></video>\r\n        </div>\r\n    );\r\n};\r\nexport default ViewCam;\r\n","import { useAppContext } from \"../../services/AppContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport ViewCam from \"../Chat/ViewCamStream\";\r\nimport { useState } from \"react\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const [footer, setFooter] = useState(props.footer);\r\n    const [lastChange, setLastChange] = useState(['', '', '']);\r\n    const [alertType, setAlertType] = useState('info');\r\n    var [alert, setAlert] = useState(false);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n    const popupCtx = usePopUpContext();\r\n\r\n    const config = { iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }] } //stun:stun.stunprotocol.org\r\n    var peerConnection = new RTCPeerConnection(config);\r\n\r\n    const handleCloseWindow = () => {\r\n        //appCtx.toggleSelectedComp(props.id);\r\n        appCtx.toggleCam();\r\n        peerConnection.close();\r\n        socketCtx.socket.emit('watcher disconnect')\r\n    };\r\n    const handleChangeFooter = (newFooter) => {\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n        setFooter(newFooter);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        peerConnection.close();\r\n    }\r\n\r\n    const handleInfo = () => {\r\n        var timeNow = new Date();\r\n        let difH, difMin, difSec = 0;\r\n        alert = '';\r\n\r\n        timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n        if (lastChange[0] === '') {\r\n            alert = 'No last change detected!'\r\n        } else if (timeNow[0] > lastChange[0]) {\r\n            difH = timeNow[0] - lastChange[0];\r\n            alert = 'Last change is more than ' + difH + ' h ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n            difSec = timeNow[2] - lastChange[2]\r\n            alert = 'Last change is ' + difSec + ' s ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n            difMin = timeNow[1] - lastChange[1]\r\n            alert = 'Last change is more than ' + difMin + ' min ago!'\r\n        } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n            alert = 'Last change is more than 24 h ago!'\r\n        } else {\r\n            alert = 'No last change detected!'\r\n        }\r\n\r\n        setAlert(alert);\r\n        setAlertType('info');\r\n        popupCtx.toggleShowPopUp(alert, alertType);\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            header=\"Cam_1\"\r\n            top=\"200\"\r\n            left=\"250\"\r\n            title=\"Cam_1\"\r\n            id=\"Cam_1\"\r\n            footer={footer}\r\n            width=\"640px\"\r\n            onClose={handleCloseWindow}\r\n            onReset={handleReset}\r\n            onInfo={handleInfo}\r\n            newStatus={handleChangeFooter}\r\n        >\r\n            <ViewCam\r\n                title=\"Cam_1\"\r\n                component=\"Cam_1\"\r\n                peer ={peerConnection}\r\n                footer={footer}\r\n                newStatus={handleChangeFooter}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;\r\n","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport CamWindow from \"../../windows/CamWindow\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\"\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.setNewFont(color);\r\n      setConnection(true);\r\n    }\r\n    socketCtx.socket.on('AuthFailed', () => {\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    })\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '30px',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '150px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from 'react';\r\nimport { useGLTF, Box, Cylinder} from '@react-three/drei';\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport {isEqual} from 'lodash';\r\n\r\nexport function Model(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF(\"/model/MI_230104.glb\");\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* Glass Materials need to be generated here*/}\r\n          {/* Beam Splitter cube */}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 1 */}\r\n          <Box\r\n            position={[-0.45, 0.55, 0.58]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#9999ff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 2 */}\r\n          <Box\r\n            position={[0.2, 0.55, 0.44]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#99ff99\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Beam Splitter slim is defined in 'off' Overlay*/}\r\n\r\n          {/* Lens */}\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[0,0,0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"KM100_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 1.3, 0.9]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"KM100_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}          \r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"screen\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, -1.3]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n            material={materials.WhiteParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaser_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.6, 1.3, 0]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"greenlaser_1\") ? (\r\n                <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n              )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n       </group>\r\n\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaserPower_1\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.4, 1.1, -0.8]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"greenlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {\r\n          (props.showBeam === 'off') &&\r\n          <group>\r\n            <group\r\n                name=\"BS_slim\"\r\n                position={[0.64, 0, -0.52]}\r\n                onPointerDown={(e) => {\r\n                  e.stopPropagation();\r\n                  props.toggleSelect(\"experimentSelection\");\r\n                }}\r\n              >\r\n                {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Beam Splitter\" description=\"Observation of second IM Path\" />}\r\n                <mesh\r\n                  name=\"Cylinder\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder.geometry}\r\n                  material={materials.BlackParts}\r\n                >\r\n                  {props.selected.has(\"experimentSelection\") ? (\r\n                    <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                  ) : (\r\n                    <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                  )}\r\n                </mesh>\r\n                <mesh\r\n                  name=\"Cylinder_1\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder_1.geometry}\r\n                  material={materials.ShinyParts}\r\n                />\r\n              </group>\r\n              <Cylinder\r\n                position={[0.64, 0.68, -0.66]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n          </group>\r\n        }\r\n        {\r\n          (props.showBeam === 'on') &&\r\n          <group>\r\n            <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group> \r\n        }\r\n\r\n        {\r\n          (props.showBeam === 'split') && \r\n          <group>\r\n            <mesh\r\n              name=\"LaserBeamBS\"\r\n              geometry={nodes.LaserBeamBS.geometry}\r\n              material={materials.Laser}\r\n              position={[-0.53, 0.68, -0.13]}\r\n              rotation={[0, 0, -Math.PI / 2]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <mesh\r\n              name=\"LaserBeam\"\r\n              castShadow\r\n              receiveShadow\r\n              geometry={nodes.LaserBeam.geometry}\r\n              material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh> \r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0, 0, 0]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Beam Splitter\" description=\"Observation of second IM Path\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n              <Cylinder\r\n                position={[0, 0.68, -0.14]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group>  \r\n        }\r\n\r\n        {(props.showLED === 'none') &&\r\n        <mesh/>\r\n        }\r\n\r\n        {(props.showLED === 'white') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightWhite\"\r\n              geometry={nodes.LEDLightWhite.geometry}\r\n              material={materials.LEDWhite}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ffffff\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Beam Splitter\" description=\"Observation of second IM Path\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n          </group>\r\n        }\r\n\r\n        {(props.showLED === 'red') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightRed\"\r\n              geometry={nodes.LEDLightRed.geometry}\r\n              material={materials.LEDRed}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ff3900\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Beam Splitter\" description=\"Observation of second IM Path\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder> \r\n          </group>\r\n        }\r\n\r\n    \r\n          \r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.76, 0.62, 0.03]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"linear_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.8, 0]} title=\"Transtlate Mirror\" description=\"Linear Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"linear_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n                  \r\n        <mesh\r\n          name=\"TranslateMirrorBase\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.TranslateMirrorBase.geometry}\r\n          material={materials.BlackParts}\r\n          position={[-1.88, 0.11, -0.01]}\r\n        />\r\n\r\n        <group\r\n          name=\"ThermalMirror\"\r\n          position={[-2.7, 0.82, -0.91]}\r\n          rotation={[0, -Math.PI / 2, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"heater\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Heated Mirror\" description=\"Observation of Thermal Expansion\" />}\r\n          <mesh \r\n            name=\"Cylinder008\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008.geometry}\r\n            material={materials['Material.002']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#884422\" opacity={1.0}/>\r\n            )}\r\n          </mesh>\r\n          <mesh \r\n            name=\"Cylinder008_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_1.geometry}\r\n            material={materials['BlackParts.001']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"Cylinder008_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_2.geometry}\r\n            material={materials['ShinyParts.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_3\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_3.geometry}\r\n            material={materials['Alu.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_4\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_4.geometry}\r\n            material={materials['Mirror.002']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_5\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_5.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n        </group>\r\n\r\n        <group\r\n          name=\"TranslateMirrorBase\"\r\n          position={[-2.38, 0.11, -1.01]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('heater_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Measurement\" description=\"Choose betweene Translate Mirror and Heated Mirror\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004.geometry}\r\n            material={materials.BlackParts}\r\n          >  \r\n            {props.selected.has('heater_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        \r\n        <group\r\n          name=\"RotaryStage\"\r\n          position={[-0.12, 0, 0.51]}\r\n          rotation={[0, -1.57, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('plate_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Difraction Plates\" description=\"Measurement of Refractive Index\" />}\r\n          <mesh\r\n            name=\"PR01_M-Step001\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001'].geometry}\r\n            material={materials['BlackParts.004']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_1'].geometry}\r\n            material={materials['BlackParts.003']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_2'].geometry}\r\n            material={materials['ShinyParts.003']}\r\n          />\r\n        </group>\r\n\r\n        <mesh\r\n          name=\"BS_slimHolder001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder001.geometry}\r\n          material={materials.BlackParts}\r\n        />     \r\n\r\n        <mesh\r\n          name=\"BS_slimHolder\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder.geometry}\r\n          material={materials.BlackParts}\r\n          position={[0.64, 0, -0.66]}\r\n          rotation={[-Math.PI, 0.63, -Math.PI]}\r\n        />\r\n        \r\n        \r\n\r\n        <mesh\r\n          name=\"BaseMesh001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_1.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_2.geometry}\r\n          material={materials['BlackParts.004']}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_3.geometry}\r\n          material={materials['ShinyParts.004']}\r\n        />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/MI_230104.glb')\r\nexport default memo(Model, isEqual);","import MI_230201 from \"../../experiment/MichelsonInterferometer/MI_230201\";\r\nimport { OrbitControls, Environment } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: 'absolute',\r\n          background: 'linear-gradient(Teal, Black)',\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files='../hdri/autoshop.hdr' />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_230201\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n            showLED={appCtx.showLED}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Temp\":\"HeaterCtrl_Temp__8Du_1\",\"Heater\":\"HeaterCtrl_Heater__fmsIn\",\"Switch\":\"HeaterCtrl_Switch__3cXgO\",\"Canvas1\":\"HeaterCtrl_Canvas1__HF34-\",\"Canvas2\":\"HeaterCtrl_Canvas2__ZQFSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__26qIN\",\"chatMain\":\"Chat_chatMain__1zSUi\",\"msgForm\":\"Chat_msgForm__3zrhr\",\"chatHandler\":\"Chat_chatHandler__2wAbt\",\"openChat\":\"Chat_openChat__3kAnz\",\"closeChat\":\"Chat_closeChat__a-LQe\",\"buttonBlink\":\"Chat_buttonBlink__juA-h\"};"],"sourceRoot":""}