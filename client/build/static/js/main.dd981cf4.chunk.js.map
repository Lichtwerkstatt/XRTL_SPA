{"version":3,"sources":["components/Console/Console.module.css","components/UI/CSS/Window.module.css","components/UI/CSS/RotaryCtrl.module.css","components/UI/CSS/NavBar.module.css","components/Login/Login.module.css","components/UI/CSS/Settings.module.css","components/assembly/Stream.module.css","services/SocketContext.js","App.js","components/UI/experimentUI/NavBar.js","components/Console/Console.js","components/Chat/Chat.js","components/Login/Login.js","services/AppContext.js","services/PopUp.module.css","components/windows/InfoWindowContent.module.css","components/UI/experimentUI/Window.js","components/UI/templates/Switch.js","components/UI/CtrlUnits/LaserCtrl.js","components/assembly/LaserCtrl.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/CtrlUnits/HeaterCtrl.js","components/assembly/Heater.js","components/assembly/media/km100_outline.png","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/UI/templates/LeftRightCtrl.js","components/UI/templates/UpDownCtrl.js","components/UI/CtrlUnits/Settings.js","components/assembly/ESPCamStream.js","components/UI/CtrlUnits/BeamSplitterCtrl2.js","components/assembly/BeamSplitter.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/Chat/ViewCamStream.js","components/windows/CamWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_230104.js","components/UI/experimentUI/VirtualLayer.js","index.js","services/PopUpContext.js","components/UI/CSS/HeaterCtrl.module.css","components/Chat/CSS/Chat.module.css"],"names":["module","exports","manager","Manager","autoConnect","socket","SocketContext","createContext","jwt","require","useSocketContext","useContext","SocketContextProvider","children","useState","connected","setConnected","username","setUsername","URL","setURL","fontColor","setFontColor","appCtx","useAppContext","useEffect","Auth","color","emit","connect","e","addLog","disconnect","on","lastClosedComponent","controlId","userId","toogleLastComp","removeAllListeners","setNewURL","newURL","Provider","value","toggleConnection","close","payload","sub","component","iat","Date","now","exp","token","sign","auth","setNewFont","newFont","helperEmit","event","App","process","title","NavBar","socketCtx","connectionStatusColor","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showCam","showBeamColor","showBeam","showInfoWindowColor","showInfoWindow","id","className","styles","navbar","navMenuLaser","variant","popupId","popupState","bindTrigger","sx","borderRadius","bgcolor","bindMenu","mode","onClick","toggleShowLED","size","toggleShowBeam","navMenu","toggleLogin","toggleShowVirtualLayer","toggleAutoRotate","toggleShowTags","toggleCam","toggleShowInfoWindow","memo","isEqual","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","logs","map","index","consoleHandler","closeConsole","openConsole","Chat","showChat","setShowChat","message","setMessage","chat","setChat","chatContainer","chatMain","style","msgForm","onSubmit","preventDefault","type","name","placeholder","onChange","target","required","chatHandler","closeChat","openChat","Login","connection","setConnection","filter","createFilterOptions","theme","createTheme","palette","primary","light","main","dark","contrastText","spacing","handleLogin","String","error","showLogin","popupWindow","popupInner","fontSize","container","columnSpacing","md","item","xs","autoFocus","label","onKeyPress","key","marginLeft","width","helperText","m","freeSolo","renderInput","params","newValue","inputValue","filterOptions","options","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","endIcon","height","marginTop","AppContext","React","AppContextProvider","setLastClosedComponent","showVirtualLayer","setShowVirtualLayer","Set","selectedComps","setSelectedComps","setShowInfoWindow","setAutoRotate","setShowLogin","setShowBeam","setShowTags","setShowCam","showLED","setShowLED","setLogs","toggleSelectedComp","compId","has","prev","x","add","log","newVal","console","Window","handle","window","top","left","windowHeader","display","cursor","float","header","onReset","onClose","windowContent","background","undefined","footer","windowFooter","onInfo","windowInfo","SwiitchCtrl","switchValue","setSwitchValue","icon","switchStatus","Box","FormGroup","Stack","direction","alignItems","Typography","start","Switch","checked","led","status","inputProps","disabled","online","end","LaserCtrl","switchIsOn","setSwitch","onlineStatus","setOnlineStatus","isOn","newStatus","getFooter","getStatus","ThemeProvider","document","getElementById","vertical-align","setFooter","lastChange","setLastChange","alertType","setAlertType","alert","setAlert","popupCtx","usePopUpContext","handleChangeFooter","newFooter","time","getHours","getMinutes","getSeconds","getDay","getMonth","reset","difH","difMin","timeNow","difSec","toggleShowPopUp","LED","SliderCtrl","sliderValue","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","text","gutterBottom","mb","Slider","aria-label","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","FormControl","fullWidth","InputLabel","command","HeaterCtrl","powerSwitch","setPowerSwitch","powerValue","setPowerValue","setting","setSettings","temp","setTemp","hiddenSetting","pwm","data","string","toFixed","Temp","IconButton","Canvas1","Heater","gridTemplateColumns","mt","paddingLeft","Button","startIcon","Canvas2","componentT","controlIdThermistor","controlIdHeater","RotaryCtrl","enteredRotation","setEnteredRotation","rotation","setRotation","absolute","busy","rotCW_Handler","Number","move","rotaryCtrl","CtrlLeft","CtrlRight","KM100","KM100_Background","controlIdBottom","controlIdTop","rotationTop","rotationBottom","SM1ZP","SM1ZP_bg","control","LeftRightCtrl","handleCtrl","negativ","UpDownCtrl","Settings","setSwitchStatus","contrast","setContrast","brightness","setBrightness","gray","UpDown","LeftRight","ESPCamStream","uint8Arr","Uint8Array","binary","i","length","fromCharCode","base64String","btoa","img","Image","onload","canvas","getContext","drawImage","this","src","Canvas","BeamSplitterCtrl","switchRedIsOn","setSwitchRedStatus","switchWhiteIsOn","setSwitchWhiteStatus","mx","BeamSplitter","redLED","controlLED","whiteLED","controlLED2","MichelsonInterferometer","zero","innerHeight","innerWidth","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","selected","InfoWindowContent","mainWrapper","backgroundImage","bgTeam","href","InfoWindow","ViewCam","peerConnection","offer","peer","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","localDescription","ontrack","srcObject","streams","onicecandidate","candidate","addIceCandidate","RTCIceCandidate","catch","setAttribute","autoPlay","playsInline","RTCPeerConnection","iceServers","urls","ExperimentUILayer","CamWindow","toggleSelect","DescriptiveTag","Html","position","zIndexRange","borderLeft","description","Model","useRef","useGLTF","nodes","materials","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","Math","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","PlaneMesh","WhiteParts","PlaneMesh_1","LaserMesh","LaserMesh_1","SD5","LaserBeam","Laser","emissive","emissiveIntensity","Cylinder","Cylinder_1","LaserBeamBS","TranslateMirrorMesh005","TranslateMirrorMesh005_1","TranslateMirrorMesh005_2","TranslateMirrorBase","Cylinder008","Cylinder008_1","Cylinder008_2","Cylinder008_3","Cylinder008_4","Cylinder008_5","TranslateMirrorMesh004","TranslateMirrorMesh004_1","BS_slimHolder001","LEDLightWhite","LEDWhite","LEDLightRed","LEDRed","BS_slimHolder","Cylinder007","Cylinder007_1","BaseMesh001","BaseMesh001_1","BaseMesh001_2","BaseMesh001_3","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_230104","ReactDOM","render","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","setText","setType","errmsg","newText","newType","open","autoHideDuration","reason","popUp","severity"],"mappings":"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","file":"static/js/main.dd981cf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__1dDWk\",\"consoleMain\":\"Console_consoleMain__SxxQK\",\"consoleHandler\":\"Console_consoleHandler__2f7jk\",\"openConsole\":\"Console_openConsole__1E2CK\",\"closeConsole\":\"Console_closeConsole__1Gp8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__eoZ4W\",\"windowHeader\":\"Window_windowHeader__2vHd6\",\"windowFooter\":\"Window_windowFooter__3xtgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1dFJs\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__1Oq_0\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__RbI2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2NK8m\",\"navMenu\":\"NavBar_navMenu__DRNeT\",\"navMenuLaser\":\"NavBar_navMenuLaser__1OP1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1DZpm\",\"close\":\"Login_close__jc06k\",\"popupWindow\":\"Login_popupWindow__2XsJg\",\"popupInner\":\"Login_popupInner__1U9Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpDown\":\"Settings_UpDown__1XZ21\",\"LeftRight\":\"Settings_LeftRight__NUQR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Stream_Canvas__pCA10\",\"Settings\":\"Stream_Settings__2Zsif\"};","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const Auth = (color) => {\r\n      setFontColor(color);\r\n      socket.emit('newUserInfo', username)\r\n    }\r\n\r\n    const connect = (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    socket.on('Auth', Auth);\r\n\r\n    if (appCtx.lastClosedComponent === 'screen') {\r\n      socket.emit(\"leave stream room\", { controlId: 'screen', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'heater') {\r\n      socket.emit('leave stream room', { controlId: 'heater', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'Cam_1') {\r\n      socket.emit('watcher disconnect');\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('Auth', Auth)\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username) => {\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n        exp: Date.now() + 1800000,\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      //secure: true, rejectUnauthorized: false}\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import AutoAwesomeOutlinedIcon from '@mui/icons-material/AutoAwesomeOutlined';\r\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\r\nimport { MdOutlineScreenRotation, MdInfoOutline } from 'react-icons/md'\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { ImConnection } from 'react-icons/im'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa'\r\nimport { BsBox } from 'react-icons/bs'\r\nimport { isEqual } from 'lodash';\r\nimport { memo, Fragment } from 'react'\r\nimport Menu from '@mui/material/Menu';\r\n\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    // const theme = createTheme({\r\n    //     palette: {\r\n    //       mode: 'dark',\r\n    //       primary: {\r\n    //         light: '#01bd7d',\r\n    //         main: '#01bd7d',\r\n    //         dark: '#01bd7d',\r\n    //         contrastText: '#fff',\r\n    //       },\r\n    //     }\r\n    //   })\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let autoRotateColor = '';\r\n    if (appCtx.autoRotate) { autoRotateColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showBeamColor = '';\r\n    if (appCtx.showBeam) { showBeamColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n\r\n    return <div id='navbar' className={styles.navbar} >\r\n        <h1>XR TwinLab</h1>\r\n        <h3>Setup-laser:</h3>\r\n        <div className={styles.navMenuLaser}>\r\n            <ul>\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n                    {(popupState) => (\r\n                        <Fragment>\r\n                            <IconButton variant=\"contained\" {...bindTrigger(popupState)} sx={{\r\n                                borderRadius: 1,\r\n                                color: 'black',\r\n                                ':hover': {\r\n                                    bgcolor: 'darkgreen',\r\n                                    color: '#00ffa8',\r\n                                }\r\n                            }}>\r\n                                <AutoAwesomeOutlinedIcon />\r\n                            </IconButton>\r\n                            <Menu {...bindMenu(popupState)} sx={{ color: { mode: 'dark' } }} >\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('none');\r\n                                }} >None</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('white');\r\n                                }}>White</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('red');\r\n                                }}>Red</MenuItem>\r\n                            </Menu>\r\n                        </Fragment>\r\n                    )}\r\n                </PopupState>\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n                    {(popupState) => (\r\n                        <Fragment>\r\n                            <IconButton variant=\"contained\" size='20' sx={{\r\n\r\n                                borderRadius: 1,\r\n                                color: 'black',\r\n                                ':hover': {\r\n                                    bgcolor: 'darkgreen',\r\n                                    color: '#00ffa8',\r\n                                }\r\n                            }}  {...bindTrigger(popupState)}>\r\n                                <GiLaserWarning />\r\n                            </IconButton>\r\n                            <Menu {...bindMenu(popupState)}>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('on');\r\n                                }} >On</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('off');\r\n                                }}>Off</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('split');\r\n                                }}>Beamsplitter</MenuItem>\r\n                            </Menu>\r\n                        </Fragment>\r\n                    )}\r\n                </PopupState>\r\n            </ul>\r\n        </div>\r\n        <div className={styles.navMenu}>\r\n            <ul>\r\n                <Tooltip title='Connnection'>\r\n                    <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29} color={connectionStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='2D model'>\r\n                    <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Laser beam'>\r\n                    <li onClick={appCtx.toggleShowBeam}><GiLaserWarning size={29} color={showBeamColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Rotation'>\r\n                    <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Labels'>\r\n                    <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Webcam'>\r\n                    <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Information'>\r\n                    <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                </Tooltip>\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\nexport default memo(NavBar, isEqual)","import { useAppContext } from '../../services/AppContext'\r\nimport { RiTerminalBoxFill } from 'react-icons/ri'\r\nimport styles from './Console.module.css'\r\nimport { useState, memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Console = (props) => {\r\n  const [showConsole, setShowConsole] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + ' ' + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}>\r\n        <span>\r\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { useEffect, useState, memo } from 'react'\r\nimport styles from './CSS/Chat.module.css'\r\nimport { ImBubble } from 'react-icons/im'\r\nimport { MdSend } from 'react-icons/md'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Chat = () => {\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const message = (payload) => {\r\n      setChat([...chat, payload]);\r\n    }\r\n\r\n    socketCtx.socket.on('message', message);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('message', message);\r\n    }\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\r\n    setMessage('');\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\r\n    setShowChat(!showChat);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + ' ' + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm} onSubmit={sendMessage}>\r\n        <input\r\n          type='text'\r\n          name='message'\r\n          placeholder='Type message here...'\r\n          value={message}\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n          }}\r\n          required\r\n        />\r\n        <button type='submit'><MdSend size={25} /></button>\r\n      </form>\r\n      <div className={styles.chatHandler + ' ' + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);","import { Grid, Autocomplete, Box, TextField, createTheme, ThemeProvider, Button, IconButton } from '@mui/material';\r\nimport HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { useSocketContext } from '../../services/SocketContext'\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './Login.module.css'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:7000' }, { title: 'http://10.232.37.40:7000' }]\r\n    const [connection, setConnection] = useState(null);\r\n    const [username, setUsername] = useState('');\r\n    const filter = createFilterOptions();\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#fff',\r\n            },\r\n        },\r\n        spacing: 2,\r\n    })\r\n\r\n    const handleLogin = () => {\r\n        if (username !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection.title), String(username));\r\n                socketCtx.toggleConnection(String(username));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const autoCompleteHandle = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setConnection({ title: newValue, });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setConnection({ title: newValue.inputValue, });\r\n        } else {\r\n            setConnection(newValue);\r\n        }\r\n    }\r\n\r\n    const filterOption = (options, params) => {\r\n        const filtered = filter(options, params);\r\n        const { inputValue } = params;\r\n        const isExisting = options.some((option) => inputValue === option.title);\r\n        if (inputValue !== '' && !isExisting) {\r\n            filtered.push({ inputValue, title: `Add '${inputValue}'`, });\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    const getLabel = (option) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n        }\r\n        if (option.inputValue) {\r\n            return option.inputValue;\r\n        }\r\n        return option.title;\r\n    }\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Settings</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid container columnSpacing={{ md: 95 }}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                autoFocus\r\n                                variant='outlined'\r\n                                label='Username '\r\n                                value={username}\r\n                                onChange={handleChange}\r\n                                onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                                style={{ marginLeft: 17, width: 250 }}\r\n                                error={username === ''}\r\n                                helperText={username === '' ? 'Please enter your username!' : ' '}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{ m: 8, width: 250 }} >\r\n                        <Autocomplete\r\n                            value={connection}\r\n                            freeSolo\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label='Choose server address ' />)}\r\n                            onChange={autoCompleteHandle}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            filterOptions={filterOption}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            options={connectionOption}\r\n                            getOptionLabel={getLabel}\r\n                            renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: 90, height: 30, marginTop: -3, marginLeft: 270 }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [lastClosedComponent, setLastClosedComponent] = useState('');\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showBeam, setShowBeam] = useState(false);\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [showLED, setShowLED] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      setLastClosedComponent(compId);\r\n    }\r\n  };\r\n\r\n  const toogleLastComp = () => {\r\n    setLastClosedComponent('');\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('Cam_1')\r\n  }\r\n\r\n  const toggleShowLED = (newVal) => {\r\n    console.log(newVal)\r\n    setShowLED(newVal);\r\n  }\r\n\r\n  const toggleShowBeam = (newVal) => {\r\n    console.log(newVal)\r\n    setShowBeam(newVal);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin,\r\n        toggleCam,\r\n        showCam,\r\n        lastClosedComponent,\r\n        toogleLastComp,\r\n        showLED,\r\n        toggleShowLED\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__IolRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__345Fv\"};","import { IoReloadOutline, IoInformationCircleOutline } from 'react-icons/io5'\r\nimport { CgCloseO } from 'react-icons/cg'\r\nimport styles from '../CSS/Window.module.css'\r\nimport Draggable from 'react-draggable'\r\nimport { memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Window = (props) => {\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 50px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={props.onReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={props.onClose}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: 'url(' + props.background + ')',\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {props.footer !== undefined && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={props.onInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{props.footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);\r\n","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    try {\r\n        props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n    } catch (error) { }\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n\r\n        })\r\n        \r\n        if (props.led) {\r\n            socketCtx.socket.emit('command', {\r\n                controlId: props.led,\r\n                color: socketCtx.fontColor,\r\n            });\r\n        }\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 250, m: 2 }}>\r\n            <FormGroup>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;\r\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { GiLaserWarning } from \"react-icons/gi\"\r\nimport { Box } from '@mui/material';\r\nimport Switch from '../templates/Switch';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n      primary: {\r\n        light: '#01bd7d',\r\n        main: '#01bd7d',\r\n        dark: '#01bd7d',\r\n        contrastText: '#fff',\r\n      },\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n    const footer = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(payload.online)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    socketCtx.socket.on('footer', footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n      socketCtx.socket.removeAllListeners('footer', footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <div className=\"switchOnOff\">\r\n      <ThemeProvider theme={theme} >\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n          <Switch component={props.component} led={props.led} icon={document.getElementById(\"icon\")} online={onlineStatus} switchStatus={switchIsOn} start='Off' end='On' option=\"switch\" />\r\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\nexport default LaserCtrl\r\n","import { useState } from \"react\";\r\nimport Window from \"../UI/experimentUI/Window\"\r\nimport SwitchOnOff from \"../UI/CtrlUnits/LaserCtrl\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"200px\"\r\n      width=\"300px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <SwitchOnOff\r\n        component={props.controlId}\r\n        top=\"0\"\r\n        left=\"0\"\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default LaserCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderValue);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    setSliderPos(newValue)\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: newValue\r\n    })\r\n    \r\n    if (props.led) {\r\n      socketCtx.socket.emit('command', {\r\n        controlId: props.led,\r\n        color: socketCtx.fontColor,\r\n      });\r\n    }\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 300, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={90}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState('');\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue.props.value\r\n        })\r\n        if (props.led) {\r\n            socketCtx.socket.emit('command', {\r\n                controlId: props.led,\r\n                color: socketCtx.fontColor,\r\n            });\r\n        }\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set selected \" + props.component + \" with \" + selectValue)\r\n    }\r\n    if (props.title === 'Resolution') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={13}>UXGA (1600x1200)</MenuItem>\r\n                <MenuItem value={12}>SXGA (1280x1024)</MenuItem>\r\n                <MenuItem value={10}>XGA (1024x768)</MenuItem>\r\n                <MenuItem value={9}>SVGA (800x600)</MenuItem>\r\n                <MenuItem value={8}>VGA (640x480)</MenuItem>\r\n                <MenuItem value={6}>CIF (400x296)</MenuItem>\r\n                <MenuItem value={5}>QVGA (320x240)</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n    else if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={5000}>5</MenuItem>\r\n                <MenuItem value={10000}>10</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\r\nimport { FormControl, InputLabel, Box } from '@mui/material';\r\nimport SelectItem from './SelectItem'\r\n\r\nconst SelectCtrl = (props) => {\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >{props.title}</InputLabel>\r\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} />\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\nexport default SelectCtrl;","import { Box, createTheme, ThemeProvider, Button, IconButton, Typography } from '@mui/material';\r\nimport DeviceThermostatOutlinedIcon from '@mui/icons-material/DeviceThermostatOutlined';\r\nimport MicrowaveOutlinedIcon from '@mui/icons-material/MicrowaveOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport styles from \"../CSS/HeaterCtrl.module.css\";\r\nimport Slider from '../templates/SliderCtrl';\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from '../templates/Switch'\r\nimport Select from '../templates/Select'\r\n\r\nconst HeaterCtrl = (props) => {\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [powerSwitch, setPowerSwitch] = useState(false);\r\n    const [powerValue, setPowerValue] = useState(0);\r\n    const [setting, setSettings] = useState(true);\r\n    const [temp, setTemp] = useState('-°C');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    const hiddenSetting = () => {\r\n        setSettings(!setting);\r\n    }\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setPowerSwitch(payload.status.isOn)\r\n                setPowerValue(payload.status.pwm)\r\n            }\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(payload.online)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            var string = payload.data.data;\r\n            try { string = string.toFixed(2) + \" °C\" } catch (e) { string = '-°C' }\r\n            setTemp(string);\r\n\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on(\"status\", status);\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        socketCtx.socket.on(\"data\", data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    if (setting) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.Temp}>\r\n                    <Typography id='temp' variant=\"h2\" >{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.Canvas1}>\r\n                    <canvas id=\"Gauge\" />\r\n                </div>\r\n                <div className={styles.Heater} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', mt: -2 }}>\r\n                        <div style={{ paddingLeft: 10 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                            <Slider title=\"PowerSwitch\" component={props.component} led={props.led} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={styles.Switch} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)' }}>\r\n                        <Switch component={props.component} led={props.led} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option=\"switch\" />\r\n                    </Box>\r\n                </div>\r\n            </ThemeProvider>\r\n        )\r\n    } else {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.Temp}>\r\n                    <Typography id='temp' variant=\"h2\">{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.Canvas2}>\r\n                    <canvas id=\"Heater\" />\r\n                </div>\r\n                <div className={styles.Canvas1}>\r\n                    <canvas id=\"Gauge\" />\r\n                </div>\r\n                <div className={styles.Heater} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', mt: -2 }}>\r\n                        <div style={{ paddingLeft: 10 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                            <Slider title=\"PowerSwitch\" component={props.component} led={props.led} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n                        </div>\r\n                        <div style={{ paddingLeft: 20 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<DeviceThermostatOutlinedIcon />}>Gauge settings </Button>\r\n                            <Select title=\"Average time (ms)\" component={props.componentT} led={props.led} online={onlineStatus} option=\"averageTime\" />\r\n                            <Select title=\"Update time (s)\" component={props.componentT} led={props.led} online={onlineStatus} option=\"updateTime\" />\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={styles.Switch} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)' }}>\r\n                        <Switch component={props.component} led={props.led} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option=\"switch\" />\r\n                    </Box>\r\n                </div>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\nexport default HeaterCtrl;","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport HeaterCtrl from '../UI/CtrlUnits/HeaterCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst Heater = (props) => {\r\n    const [lastChange, setLastChange] = useState(['', '', '']);\r\n    const [alertType, setAlertType] = useState('info');\r\n    const [footer, setFooter] = useState(props.footer);\r\n    var [alert, setAlert] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n    const popupCtx = usePopUpContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCloseWindow = () => {\r\n        appCtx.toggleSelectedComp(props.id);    \r\n    };\r\n\r\n    const handleReset = () => {\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.controlIdHeater,\r\n            reset: true\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.controlIdThermistor,\r\n            reset: true\r\n        })\r\n    }\r\n\r\n    const handleInfo = () => {\r\n        var timeNow = new Date();\r\n        let difH, difMin, difSec = 0;\r\n        alert = '';\r\n\r\n        timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n        if (lastChange[0] === '') {\r\n            alert = 'No last change detected!'\r\n        } else if (timeNow[0] > lastChange[0]) {\r\n            difH = timeNow[0] - lastChange[0];\r\n            alert = 'Last change is more than ' + difH + ' h ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n            difSec = timeNow[2] - lastChange[2]\r\n            alert = 'Last change is ' + difSec + ' s ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n            difMin = timeNow[1] - lastChange[1]\r\n            alert = 'Last change is more than ' + difMin + ' min ago!'\r\n        } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n            alert = 'Last change is more than 24 h ago!'\r\n        } else {\r\n            alert = 'No last change detected!'\r\n        }\r\n\r\n        setAlert(alert);\r\n        setAlertType('info');\r\n        popupCtx.toggleShowPopUp(alert, alertType);\r\n    }\r\n\r\n    const handleChangeFooter = (newFooter) => {\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n        setFooter(newFooter);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [socketCtx.socket]);\r\n\r\n    useEffect(() => {\r\n        socketCtx.socket.emit('join stream room', { controlId: props.controlIdThermistor, userId: socketCtx.username });\r\n\r\n        return () => {\r\n\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <Window\r\n            header={props.title + ' (' + props.id + ')'}\r\n            top={props.top}\r\n            left={props.left}\r\n            height='340px'\r\n            width='623px'\r\n            onClose={handleCloseWindow}\r\n            onReset={handleReset}\r\n            onInfo={handleInfo}\r\n            footer={footer}\r\n        >\r\n            <HeaterCtrl\r\n                component={props.controlIdHeater}\r\n                componentT={props.controlIdThermistor}\r\n                newStatus={handleChangeFooter}\r\n                led={props.LED}\r\n                footer={footer}\r\n            />\r\n\r\n        </Window>\r\n    )\r\n}\r\n\r\nexport default Heater;","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    const footer = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(payload.online)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    socketCtx.socket.on('footer', footer);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n      socketCtx.socket.removeAllListeners('footer', footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.component,\r\n        move: direction\r\n      });\r\n\r\n      socketCtx.socket.emit('command', {\r\n        controlId: props.led,\r\n        color: socketCtx.fontColor,\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Last change by: ' + socketCtx.username,\r\n        controlId: props.component\r\n      });\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    setEnteredRotation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","import { useSocketContext } from '../../services/SocketContext'\r\nimport { usePopUpContext } from '../../services/PopUpContext'\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst KM100 = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  //wie handhaben wir das?\r\n  const handleReset = () => {\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlIdBottom,\r\n      reset: true\r\n    })\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlIdTop,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport SM1ZP_bg from './media/linear_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst SM1ZP = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      background={SM1ZP_bg}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        control='linear'\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import Right from '@mui/icons-material/ArrowCircleRightOutlined';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport Left from '@mui/icons-material/ArrowCircleLeftOutlined';\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst LeftRightCtrl = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCtrl = (direction, negativ) => (event) => {\r\n        event.preventDefault();\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: negativ ? 15 : -15\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User changed the position on \" + props.component)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", false)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n                <Left />\r\n            </IconButton>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", true)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n                <Right />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftRightCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Stack, IconButton } from '@mui/material';\r\nimport Up from '@mui/icons-material/ArrowCircleUpOutlined';\r\nimport Down from '@mui/icons-material/ArrowCircleDownOutlined';\r\n\r\nconst UpDownCtrl = (props) => {\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCtrl = (direction, negativ) => (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: negativ ? 15 : -15\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User changed the position on \" + props.component)\r\n  }\r\n\r\n  return (\r\n    <Stack >\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", true)} disabled={(socketCtx.connected && props.online) ? false : true} >\r\n        <Up />\r\n      </IconButton>\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", false)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n        <Down />\r\n      </IconButton>\r\n    </Stack>\r\n  )\r\n}\r\nexport default UpDownCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport LeftRightCtrl from \"../templates/LeftRightCtrl\";\r\nimport styles from \"../CSS/Settings.module.css\"\r\nimport UpDownCtrl from \"../templates/UpDownCtrl\"\r\nimport Slider from \"../templates/SliderCtrl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from \"../templates/Switch\"\r\nimport Select from \"../templates/Select\";\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Settings = (props) => {\r\n    const [switchIsOn, setSwitchStatus] = useState(false);\r\n    const [contrast, setContrast] = useState(0);\r\n    const [brightness, setBrightness] = useState(0);\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setSwitchStatus(payload.status.gray)\r\n                setBrightness(payload.status.brightness)\r\n                setContrast(payload.status.contrast)\r\n                console.log(\"Status of settings:   \", payload)\r\n            }\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on(\"status\", status);\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.UpDown}>\r\n                <UpDownCtrl component={props.component} online={onlineStatus} option='virtualTilt' />\r\n            </div>\r\n            <div className={styles.LeftRight}>\r\n                <LeftRightCtrl component={props.component} online={onlineStatus} option='virtualPan' />\r\n            </div>\r\n            <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n            <Select title=\"Resolution\" component={props.component} online={onlineStatus} option=\"frameSize\" />\r\n            <Switch component={props.component} switchStatus={switchIsOn} online={onlineStatus} start='Color' end='Gray' option=\"gray\" />\r\n            <Slider title=\"Contrast\" component={props.component} online={onlineStatus} sliderValue={contrast} min={-2} max={2} option=\"contrast\" />\r\n            <Slider title=\"Brightness\" component={props.component} online={onlineStatus} sliderValue={brightness} min={-2} max={2} option=\"brightness\" />\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Settings\r\n","import Window from \"../UI/experimentUI/Window\";\r\nimport Settings from \"../UI/CtrlUnits/Settings\";\r\nimport styles from \"./Stream.module.css\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\n\r\nconst ESPCamStream = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = (payload) => {\r\n      var uint8Arr = new Uint8Array(payload.data);\r\n      var binary = \"\";\r\n      for (var i = 0; i < uint8Arr.length; i++) {\r\n        binary += String.fromCharCode(uint8Arr[i]);\r\n      }\r\n      var base64String = window.btoa(binary);\r\n\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        var canvas = document.getElementById(\"ScreenCanvas\");\r\n        if (canvas != null) {\r\n          var ctx = canvas.getContext(\"2d\");\r\n          var x1 = 0,\r\n            y1 = 0,\r\n            x2 = 300,\r\n            y2 = 200;\r\n          ctx.drawImage(this, x1, y1, x2, y2);\r\n        }\r\n      };\r\n      img.src = \"data:image/jpg;base64,\" + base64String;\r\n    }\r\n\r\n    socketCtx.socket.on(\"data\", data);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('data', data)\r\n    }\r\n  }, [socketCtx.socket]);\r\n\r\n  useEffect(() => {\r\n    socketCtx.socket.emit(\"join stream room\", { controlId: props.controlId, userId: socketCtx.username });\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      top={props.top}\r\n      left={props.left}\r\n      width=\"1000px\"\r\n      height=\"430px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      footer={footer}\r\n      newStatus={handleChangeFooter}\r\n    >\r\n      <div className={styles.Canvas}>\r\n        <canvas id=\"ScreenCanvas\" />\r\n      </div>\r\n      <div className={styles.Settings}>\r\n        <Settings\r\n          component={props.controlId}\r\n          led={props.LED}\r\n          footer={footer}\r\n          newStatus={handleChangeFooter} />\r\n      </div>\r\n\r\n    </Window>\r\n  );\r\n};\r\nexport default ESPCamStream;\r\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Slider from \"../templates/SliderCtrl\";\r\nimport Switch from '../templates/Switch';\r\n\r\n\r\nconst BeamSplitterCtrl = (props) => {\r\n    const marks = [{ value: 0, label: 'None', }, { value: 90, label: 'Beam splitter', }, { value: 180, label: 'Pinhole', }, { value: 270, label: 'White LED', }, { value: 360, label: 'Red LED', },];\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n    const [switchRedIsOn, setSwitchRedStatus] = useState(false);\r\n    const [switchWhiteIsOn, setSwitchWhiteStatus] = useState(false);\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setSwitchWhiteStatus(payload.isOn);\r\n                setSwitchRedStatus(payload.isOn);\r\n                console.log(\"Status of settings:   \", payload)\r\n            }\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(payload.online)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on(\"status\", status);\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps      \r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ mx: 1 }}>\r\n                <Slider title=\"Experimental selection\" component={props.component} online={onlineStatus} led={props.led} min={0} max={360} text={marks} option=\"moveTo\" />\r\n                <Switch component={props.component} led={props.led} switchStatus={switchWhiteIsOn} online={onlineStatus} start='LED white Off' end='On' option='binaryCtrl' />\r\n                <Switch component={props.component} led={props.led} switchStatus={switchRedIsOn} online={onlineStatus} start='LED red Off' end='On' option='binaryCtrl' />\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default BeamSplitterCtrl\r\n","import BeamSplitterCtrl from \"../UI/CtrlUnits/BeamSplitterCtrl2\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport { useState } from \"react\";\r\n\r\nconst BeamSplitter = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setFooter(newFooter);\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"190px\"\r\n      width=\"360px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n\r\n    >\r\n      <BeamSplitterCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlId}\r\n        newStatus={handleChangeFooter}\r\n        redLED={props.controlLED}\r\n        whiteLED={props.controlLED2}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default BeamSplitter;\r\n","import LaserCtrl from \"../../assembly/LaserCtrl\";\r\nimport Heater from \"../../assembly/Heater\";\r\nimport KM100 from \"../../assembly/KM100\";\r\nimport SM1ZP from \"../../assembly/SM1ZP\";\r\nimport ESPCam from \"../../assembly/ESPCamStream\";\r\nimport BeamSplitter from \"../../assembly/BeamSplitter\"\r\n\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = \"Initializing...\"\r\n  var zero = \"0\"\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has('KM100_1') && (\r\n        <KM100\r\n          title=\"Mirror\"\r\n          id={'KM100_1'}\r\n          controlIdTop={'KM100_top_1'}\r\n          controlIdBottom={'KM100_bottom_1'}\r\n          LED={'led_KM100'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has('linear_1') && (\r\n        <SM1ZP\r\n          title=\"Mirror Stage\"\r\n          controlId={'linear_1'}\r\n          LED={'led_linear'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Rotary stage Prism*/}\r\n      {props.selected.has('roatary_1') && (\r\n        <SM1ZP\r\n          title=\"Prism Stage\"\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Rotary stage Measurement Mirror*/}\r\n      {props.selected.has('roatary_2') && (\r\n        <SM1ZP\r\n          title=\"Measure Stage\"\r\n          controlId={'heater_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topHighMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has('greenlaser_1') && (\r\n        <KM100\r\n          title=\"Laser\"\r\n          id={'greenlaser_1'}\r\n          controlIdTop={'greenlaser_top_1'}\r\n          controlIdBottom={'greenlaser_bottom_1'}\r\n          LED={'led_laser'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has('greenlaserPower_1') && (\r\n        <LaserCtrl\r\n          title=\"Power Supply\"\r\n          controlId={'greenlaser_1'}\r\n          LED={'led_linear'}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has('screen') && (\r\n        <ESPCam\r\n          title=\"Screen\"\r\n          controlId={'screen'}\r\n          LED={'led_screen'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n      {/* Heater */}\r\n      {props.selected.has('heater') && (\r\n        <Heater\r\n          title=\"Heater\"\r\n          id={'heater'}\r\n          controlIdHeater={'heater'}\r\n          controlIdThermistor={'thermistor'}\r\n          LED={'led_heater'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n\r\n      {/* Beam splitter */}\r\n      {props.selected.has('experimentSelection') && (\r\n        <BeamSplitter\r\n          title=\"Experimental selection\"\r\n          controlId={'experimentSelection'}\r\n          controlLED={'redLED'}\r\n          controlLED2={'whiteLED'}\r\n          LED={'led_selection'}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={halfWidth}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MichelsonInterferometer;","export default __webpack_public_path__ + \"static/media/xrtl_team.519a843e.png\";","import styles from \"./InfoWindowContent.module.css\"\r\nimport bgTeam from \"../media/images/xrtl_team.png\"\r\n\r\nconst InfoWindowContent = (props) => {\r\n  return (\r\n    <div className={styles.mainWrapper}\r\n      style={{ backgroundImage: \"url(\\\"\" + bgTeam + \"\\\")\" }}\r\n    >\r\n      Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\r\n      <p>\r\n        This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n      </p>\r\n      <p>\r\n        Best! Clara, Falko, Jari and Johannes\r\n      </p>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;","import { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCloseWindow = () => {\r\n        appCtx.toggleShowInfoWindow();\r\n    };\r\n\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            top=\"250\"\r\n            left=\"200\"\r\n\r\n            width=\"600px\"\r\n            onClose={handleCloseWindow}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import { useSocketContext } from '../../services/SocketContext'\r\nimport { useEffect } from 'react';\r\n\r\nconst ViewCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        socketCtx.socket.emit('viewer', props.component)\r\n        var peerConnection;\r\n        const offer = (payload) => {\r\n            peerConnection = props.peer;\r\n            peerConnection\r\n            .setRemoteDescription(payload.data)\r\n            .then(() => peerConnection.createAnswer())\r\n            .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n            .then(() => socketCtx.socket.emit('answer', { id: payload.id, data: peerConnection.localDescription }))\r\n            \r\n            peerConnection.ontrack = (event) => {\r\n                document.getElementById('video').srcObject = event.streams[0];\r\n            }\r\n            \r\n            peerConnection.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socketCtx.socket.emit('candidate', { id: payload.id, data: event.candidate })\r\n                }\r\n            }\r\n        }\r\n        \r\n        const candidate = (payload) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(payload.data))\r\n                .catch(e => console.error(e))\r\n        }\r\n\r\n        document.getElementById('video').setAttribute('style', 'display: true')\r\n\r\n        socketCtx.socket.emit('viewer', props.component)\r\n\r\n        socketCtx.socket.on('offer', offer)\r\n\r\n        socketCtx.socket.on('candidate', candidate)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('offer', offer)\r\n            socketCtx.socket.removeAllListeners('candidate', candidate)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <video className=\"video\" id='video' autoPlay playsInline width=\"640px\" height=\"480px\" ></video>\r\n        </div>\r\n    );\r\n};\r\nexport default ViewCam;","import { useAppContext } from \"../../services/AppContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport ViewCam from \"../Chat/ViewCamStream\";\r\nimport { useState } from \"react\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const [footer, setFooter] = useState(props.footer);\r\n    const [lastChange, setLastChange] = useState(['', '', '']);\r\n    const [alertType, setAlertType] = useState('info');\r\n    var [alert, setAlert] = useState(false);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n    const popupCtx = usePopUpContext();\r\n\r\n    const config = { iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }] } //stun:stun.stunprotocol.org\r\n    var peerConnection = new RTCPeerConnection(config);\r\n\r\n    const handleCloseWindow = () => {\r\n        //appCtx.toggleSelectedComp(props.id);\r\n        appCtx.toggleCam();\r\n        peerConnection.close();\r\n        socketCtx.socket.emit('watcher disconnect')\r\n    };\r\n    const handleChangeFooter = (newFooter) => {\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n        setFooter(newFooter);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        peerConnection.close();\r\n    }\r\n\r\n    const handleInfo = () => {\r\n        var timeNow = new Date();\r\n        let difH, difMin, difSec = 0;\r\n        alert = '';\r\n\r\n        timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n        if (lastChange[0] === '') {\r\n            alert = 'No last change detected!'\r\n        } else if (timeNow[0] > lastChange[0]) {\r\n            difH = timeNow[0] - lastChange[0];\r\n            alert = 'Last change is more than ' + difH + ' h ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n            difSec = timeNow[2] - lastChange[2]\r\n            alert = 'Last change is ' + difSec + ' s ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n            difMin = timeNow[1] - lastChange[1]\r\n            alert = 'Last change is more than ' + difMin + ' min ago!'\r\n        } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n            alert = 'Last change is more than 24 h ago!'\r\n        } else {\r\n            alert = 'No last change detected!'\r\n        }\r\n\r\n        setAlert(alert);\r\n        setAlertType('info');\r\n        popupCtx.toggleShowPopUp(alert, alertType);\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            header=\"Cam_1\"\r\n            top=\"200\"\r\n            left=\"250\"\r\n            title=\"Cam_1\"\r\n            id=\"Cam_1\"\r\n            footer={footer}\r\n            width=\"600px\"\r\n            onClose={handleCloseWindow}\r\n            onReset={handleReset}\r\n            onInfo={handleInfo}\r\n            newStatus={handleChangeFooter}\r\n        >\r\n            <ViewCam\r\n                title=\"Cam_1\"\r\n                id=\"Cam_1\"\r\n                footer={footer}\r\n                newStatus={handleChangeFooter}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;\r\n","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport CamWindow from \"../../windows/CamWindow\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\"\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.setNewFont(color);\r\n      setConnection(true);\r\n    }\r\n    socketCtx.socket.on('AuthFailed', () => {\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    })\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '30px',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '150px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from 'react';\r\nimport { useGLTF, Box, Cylinder} from '@react-three/drei';\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport {isEqual} from 'lodash';\r\n\r\nexport function Model(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF(\"/model/MI_230104.glb\");\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* Glass Materials need to be generated here*/}\r\n          {/* BeamSplitter */}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Prism1 */}\r\n          <Box\r\n            position={[-0.45, 0.55, 0.58]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Prism2 */}\r\n          <Box\r\n            position={[0.2, 0.55, 0.44]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* BeamSplitter slim */}\r\n          <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n          {/* Lens */}\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[0,0,0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"KM100_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 1.3, 0.9]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"KM100_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}          \r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"screen\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, -1.3]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n            material={materials.WhiteParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaser_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.6, 1.3, 0]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"greenlaser_1\") ? (\r\n                <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n              )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n       </group>\r\n\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaserPower_1\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.4, 1.1, -0.8]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"greenlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {props.showBeam &&\r\n          <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n          >\r\n            <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n          </mesh>\r\n          }\r\n     \r\n        <group\r\n          name=\"BS_slim\"\r\n          position={[0.64, 0, -0.52]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"experimentSelection\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Beam Splitter\" description=\"Observation of second IM Path\" />}\r\n          <mesh\r\n            name=\"Cylinder\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"experimentSelection\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"Cylinder_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        \r\n        {props.showBeam &&\r\n        <mesh\r\n          name=\"LaserBeamBS\"\r\n          geometry={nodes.LaserBeamBS.geometry}\r\n          material={materials.Laser}\r\n          position={[-0.53, 0.68, -0.13]}\r\n          rotation={[0, 0, -Math.PI / 2]}\r\n          scale={0.17}\r\n        >\r\n          <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n        </mesh>\r\n        }       \r\n          \r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.76, 0.62, 0.03]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"linear_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.8, 0]} title=\"Transtlate Mirror\" description=\"Linear Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"linear_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n                  \r\n        <mesh\r\n          name=\"TranslateMirrorBase\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.TranslateMirrorBase.geometry}\r\n          material={materials.BlackParts}\r\n          position={[-1.88, 0.11, -0.01]}\r\n        />\r\n\r\n        <group\r\n          name=\"ThermalMirror\"\r\n          position={[-2.7, 0.82, -0.91]}\r\n          rotation={[0, -Math.PI / 2, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"heater\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Heated Mirror\" description=\"Observation of Thermal Expansion\" />}\r\n          <mesh \r\n            name=\"Cylinder008\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008.geometry}\r\n            material={materials['Material.002']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#884422\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh \r\n            name=\"Cylinder008_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_1.geometry}\r\n            material={materials['BlackParts.001']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"Cylinder008_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_2.geometry}\r\n            material={materials['ShinyParts.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_3\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_3.geometry}\r\n            material={materials['Alu.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_4\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_4.geometry}\r\n            material={materials['Mirror.002']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_5\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_5.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n        </group>\r\n\r\n        <group\r\n          name=\"TranslateMirrorBase\"\r\n          position={[-2.38, 0.11, -1.01]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"roatary_2\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Measurement\" description=\"Choose betweene Translate Mirror and Heated Mirror\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004.geometry}\r\n            material={materials.BlackParts}\r\n          >  \r\n            {props.selected.has(\"roatary_2\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        \r\n        <group\r\n          name=\"RotaryStage\"\r\n          position={[-0.12, 0, 0.51]}\r\n          rotation={[0, -1.57, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"roatary_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Rotating Prisms\" description=\"Measurement of Refractive Index\" />}\r\n          <mesh\r\n            name=\"PR01_M-Step001\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001'].geometry}\r\n            material={materials['BlackParts.004']}\r\n          >\r\n            {props.selected.has(\"roatary_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_1'].geometry}\r\n            material={materials['BlackParts.003']}\r\n          >\r\n            {props.selected.has(\"roatary_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_2'].geometry}\r\n            material={materials['ShinyParts.003']}\r\n          />\r\n        </group>\r\n        \r\n\r\n{/* Bookmark */}\r\n\r\n\r\n        <mesh\r\n          name=\"BS_slimHolder001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder001.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"LEDLightWhite\"\r\n          geometry={nodes.LEDLightWhite.geometry}\r\n          material={materials.LEDWhite}\r\n          position={[-0.7, 0.67, -0.12]}\r\n          rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n          scale={0.17}\r\n        >\r\n          <meshStandardMaterial color=\"#ffffff\" transparent opacity={0} emissive emissiveIntensity={1}/>\r\n        </mesh>\r\n        \r\n        \r\n        <mesh\r\n          name=\"LEDLightRed\"\r\n          geometry={nodes.LEDLightRed.geometry}\r\n          material={materials.LEDRed}\r\n          position={[-0.7, 0.67, -0.12]}\r\n          rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n          scale={0.17}\r\n        >\r\n          <meshStandardMaterial color=\"#ff3900\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n        </mesh>\r\n        \r\n        <mesh\r\n          name=\"BS_slimHolder\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder.geometry}\r\n          material={materials.BlackParts}\r\n          position={[0.64, 0, -0.66]}\r\n          rotation={[-Math.PI, 0.63, -Math.PI]}\r\n        />\r\n        \r\n        <group\r\n          name=\"LED\"\r\n          position={[0, 0.45, -0.13]}\r\n          rotation={[Math.PI, -1.18, Math.PI]}\r\n          scale={0.05}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"experimentSelection\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n          <mesh\r\n            name=\"Cylinder007\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder007.geometry}\r\n            material={materials['ShinyParts.005']}\r\n          ></mesh>\r\n          <mesh\r\n            name=\"Cylinder007_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder007_1.geometry}\r\n            material={materials['BlackParts.005']}\r\n          >\r\n            {props.selected.has(\"experimentSelection\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n        </group>\r\n\r\n        <mesh\r\n          name=\"BaseMesh001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_1.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_2.geometry}\r\n          material={materials['BlackParts.004']}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_3.geometry}\r\n          material={materials['ShinyParts.004']}\r\n        />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/MI_230104.glb')\r\nexport default memo(Model, isEqual);","import MI_230104 from \"../../experiment/MichelsonInterferometer/MI_230104\";\r\nimport { OrbitControls, Environment } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: 'absolute',\r\n          background: 'linear-gradient(Teal, Black)',\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files='../hdri/autoshop.hdr' />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_230104\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Temp\":\"HeaterCtrl_Temp__8Du_1\",\"Heater\":\"HeaterCtrl_Heater__fmsIn\",\"Switch\":\"HeaterCtrl_Switch__3cXgO\",\"Canvas1\":\"HeaterCtrl_Canvas1__HF34-\",\"Canvas2\":\"HeaterCtrl_Canvas2__ZQFSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__26qIN\",\"chatMain\":\"Chat_chatMain__1zSUi\",\"msgForm\":\"Chat_msgForm__3zrhr\",\"chatHandler\":\"Chat_chatHandler__2wAbt\",\"openChat\":\"Chat_openChat__3kAnz\",\"closeChat\":\"Chat_closeChat__a-LQe\",\"buttonBlink\":\"Chat_buttonBlink__juA-h\"};"],"sourceRoot":""}