{"version":3,"sources":["components/Login/CSS/Login.module.css","components/UI/CSS/NavBar.module.css","services/SocketContext.js","services/AppContext.js","App.js","components/UI/CSS/Settings.module.css","components/windows/CSS/InfoWindowContent.module.css","components/experiment/ComponentDescription/CSS/ManualWindowContent.module.css","components/UI/experimentUI/NavBar.js","components/experiment/ComponentDescription/CSS/Description.module.css","components/Console/Console.js","components/Login/Login.js","components/Chat/Chat.js","components/experiment/ComponentDescription/Imprint.js","components/experiment/ComponentDescription/Telescope_1.js","components/experiment/ComponentDescription/Telescope_2.js","components/assembly/media/DM_outline_center.png","components/experiment/ComponentDescription/AdaptiveMirror.js","components/experiment/ComponentDescription/SHS.js","components/experiment/ComponentDescription/PowerSupply.js","components/experiment/ComponentDescription/LinearStage.js","components/experiment/ComponentDescription/RetractableScreen.js","components/experiment/ComponentDescription/BeamSplitter.js","components/experiment/ComponentDescription/Prism.js","components/experiment/ComponentDescription/DescriptionHandler.js","components/UI/experimentUI/Window.js","components/assembly/DescriptionOnly.js","components/assembly/media/id15_outline.png","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/Pinhole.js","components/assembly/media/PS_outline.png","components/UI/templates/Switch.js","components/UI/CtrlUnits/SwitchCtrl.js","components/assembly/Laser.js","components/assembly/media/rotary_outline.png","components/assembly/Rotary.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/XR50P_outline.png","components/assembly/XR50P.js","components/assembly/media/Eye_outline.png","components/assembly/Eye.js","components/assembly/media/BS_outline.png","components/UI/CtrlUnits/BeamSplitterCtrl.js","components/assembly/Screen.js","components/experiment/AdaptiveOptics/AdaptiveOptics.js","components/UI/templates/ESPCam.js","components/UI/CtrlUnits/ESPCamWithoutSettings.js","components/windows/OverviewCamWindow.js","components/media/images/xrtl_team.png","components/windows/Content/InfoWindowContent.js","components/windows/InfoWindow.js","components/UI/templates/Stepper.js","components/experiment/ComponentDescription/Manual.js","components/windows/ManualWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/AdaptiveOptics/materials/GlassMaterial.js","components/experiment/AdaptiveOptics/materials/LaserMaterial.js","components/experiment/AdaptiveOptics/AO_230803.js","components/experiment/AdaptiveOptics/MIS1_2D_control.js","components/UI/experimentUI/VirtualLayer.js","index.js","components/UI/templates/Theme.js","components/UI/CSS/Window.module.css","services/PopUpContext.js","components/Chat/CSS/Chat.module.css","components/Console/CSS/Console.module.css","components/UI/CSS/RotaryCtrl.module.css"],"names":["module","exports","manager","Manager","autoConnect","SocketContext","createContext","jwt","require","socket","useSocketContext","useContext","SocketContextProvider","children","fontColor","setFontColor","useState","connected","setConnected","username","setUsername","URL","setURL","appCtx","useAppContext","useEffect","connect","e","addLog","setSocket","disconnect","on","removeAllListeners","setNewURL","newURL","Provider","value","toggleConnection","key","close","payload","sub","token","sign","header","kid","auth","emit","helperEmit","event","AppContext","React","AppContextProvider","underConstruction","setUnderConstruction","showVirtualLayer","setShowVirtualLayer","roomComponent","setRoomComponent","Set","selectedComps","setSelectedComps","showInfoWindow","setShowInfoWindow","showManualWindow","setShowManual","showWelcomeWindow","setShowWelcome","autoRotate","setAutoRotate","showLogin","setShowLogin","manualPage","setManualPage","showBeam","setShowBeam","showTags","setShowTags","showCam","setShowCam","logs","setLogs","toggleSelectedComp","compId","has","prev","filter","x","toogleRoomComp","add","val","controlId","userId","toggleAutoRotate","toggleShowVirtualLayer","log","toggleShowTags","toggleShowBeam","toggleLogin","toggleShowInfoWindow","toggleCam","toggleShowManualWindow","toggleShowWelcomeWindow","toggleunderConstruction","newVal","toggleSetManualPage","App","process","title","NavBar","socketCtx","connectionStatusColor","showTagsColor","cameraStatusColor","showInfoWindowColor","showBeamColor","showVirtualLayerColor","showManualWindowColor","id","className","styles","navbar","theme","navMenu","onClick","size","color","memo","isEqual","Console","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","map","index","consoleHandler","closeConsole","openConsole","Login","connectionOption","connection","setConnection","accessCode","setAccessCode","handleLogin","String","error","handleChange","target","handleAccessCode","themeLogin","popupWindow","popupInner","fontSize","container","direction","justifyContent","alignItems","autoFocus","variant","label","onChange","onKeyPress","style","marginLeft","width","paddingRight","helperText","type","endIcon","height","Chat","showChat","setShowChat","message","setMessage","chat","setChat","sendMessage","async","preventDefault","at","user","i","length","slice","controlIds","reset","frameSize","exposure","contrast","replace","chatContainer","chatMain","msgForm","sx","paddingTop","htmlFor","endAdornment","position","edge","chatHandler","closeChat","openChat","Imprint","props","mainWrapper","ThemeProvider","Box","mr","ml","Button","window","open","DescriptionTelescope1","DescriptionTelescope2","DescriptionAdaptiveMirror","background","DM","DescriptionSHS","DescriptionPowerSupply","DescriptionLinearStage","DescriptionRetractableScreen","DescriptionBeamSplitter","DescriptionPrism","DescriptionHandler","renderOption","info","telescope_1","telescope_2","mirror_1","AdaptiveMirror","sensor_1","SHS","relay_laser","PowerSupply","stepper_linear1","LinearStage","servo_screen","RetractableScreen","beamSplitter","BeamSplitter","prism","Prism","component","Window","lastChange","setLastChange","footer","setFooter","setInfo","popupCtx","usePopUpContext","topper","setTopper","para","icon","iconClose","setting","none","undefined","Footer","componentList","includes","status","time","Date","getHours","getMinutes","getSeconds","getDay","getMonth","getFooter","handle","top","left","windowHeader","display","cursor","float","smallSetting","smallSettings","windowContent","windowFooter","timeNow","difH","difMin","difSec","alert","toggleShowPopUp","identify","windowInfo","Description","RotaryCtrl","enteredRotation","setEnteredRotation","onlineStatus","setOnlineStatus","rotation","setRotation","absolute","busy","getStatus","rotCW_Handler","name","Number","move","substring","rotaryCtrl","min","max","CtrlLeft","disabled","CtrlRight","Pinhole","PH_Background","SwitchCtrl","switchValue","setSwitchValue","FormGroup","Stack","Typography","Switch","checked","switchStatus","newValue","option","inputProps","online","right","switchIsOn","setSwitch","isOn","border","borderRadius","textAlign","Laser","PS_Background","Rotary","Rotary_bg","KM100","controlIdBottom","controlIdTop","KM100_Background","XR50P","XR50P_bg","Eye","Eye_Background","BeamSplitterCtrl","setSwitchStatus","Screen","Screen_Background","AdaptiveOptics","selected","DescriptionOnly","ESPCam","ctx","data","uint8Arr","Uint8Array","binary","fromCharCode","base64String","btoa","img","Image","onload","canvas","document","getElementById","getContext","drawImage","this","src","Canvas","ESPCamWithoutSettings","transform","backgroundSize","CamWindow","innerWidth","InfoWindowContent","backgroundImage","bgTeam","href","InfoWindow","StepperCtrl","useTheme","activeStep","setActiveStep","buttonValue","setButtonValue","MobileStepper","steps","flexGrow","nextButton","prevActiveStep","backButton","ManualWindowContent","Stepper","ManualWindow","Manual","ExperimentUILayer","authFailed","DescriptiveTag","wrapperStyle","y","Html","zIndexRange","borderLeft","description","GlassMaterial","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","LaserMaterial","transparent","opacity","emissive","emissiveIntensity","Model","nodes","materials","useGLTF","dispose","scale","castShadow","receiveShadow","geometry","Beam_eye","Beam_screen","material","Laser_red","onPointerDown","stopPropagation","toggleSelect","Netzteil","BlackParts","Cube","Cube_1","Glass","Cube_2","ShinyParts","Cylinder069","Cylinder069_1","Cylinder069_2","Cylinder069_3","Cylinder002","Cylinder002_1","Cylinder002_2","KM100mesh_1","KM100mesh_2","KM100mesh_3","KM100mesh002_1","KM100mesh002_2","KM100mesh002_3","KM100mesh003_1","KM100mesh003_2","KM100mesh003_3","KM100mesh004_1","KM100mesh004_2","KM100mesh004_3","KM100mesh005_1","KM100mesh005_2","KM100mesh005_3","KM100mesh006_1","KM100mesh006_2","KM100mesh006_3","Cube005","Cube005_1","Cube005_2","Cylinder036","Cylinder036_1","Cube008","Cube008_1","Cube008_2","Cylinder","Cylinder_1","Thorlabs_Servo_Mount_Loose_V1_Stand_1","Thorlabs_Servo_Mount_Loose_V1_Stand_2","Thorlabs_Servo_Mount_Loose_V1_Stand_3","Thorlabs_Servo_Mount_Loose_V1_Stand_4","Servo","Thorlabs_Servo_Mount_Loose_V1_Stand_5","Thorlabs_Servo_Mount_Loose_V1_Adapter_1","Thorlabs_Servo_Mount_Loose_V1_Adapter_2","WhiteParts","Plane004","Plane004_1","preload","Model2d","group","useRef","ref","args","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","Billboard","ReactDOM","render","createTheme","palette","mode","primary","light","main","dark","contrastText","spacing","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","text","setText","setType","errmsg","newText","newType","autoHideDuration","onClose","reason","severity"],"mappings":"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","file":"static/js/main.ad9d0379.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2plgY\",\"close\":\"Login_close__39P7D\",\"popupWindow\":\"Login_popupWindow__29wfX\",\"popupInner\":\"Login_popupInner__2psTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__kQPlq\",\"navMenu\":\"NavBar_navMenu__16QaL\",\"navMenuLaser\":\"NavBar_navMenuLaser__3n9Gj\",\"navRow\":\"NavBar_navRow__1qmGD\",\"mobile\":\"NavBar_mobile__eglhI\"};","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\nvar socket = manager.socket(\"/\");\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const connect = (e) => {\r\n      setConnected(true);\r\n\r\n      appCtx.addLog(\"Server : Client connected to \" + URL);\r\n      appCtx.setSocket(socket);\r\n      appCtx.setUsername(username);\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n\r\n    if (username && username === 'admin') {\r\n      setUsername('Supervisor')\r\n    } else {\r\n      setUsername(username);\r\n    }\r\n  }\r\n\r\n  const toggleConnection = (username, key) => {\r\n    if (!connected) {\r\n      var payload = { sub: username }\r\n      var token = jwt.sign(payload, key, { header: { kid: username === 'admin' ? 'admin' : 'client' } });\r\n\r\n      socket.auth = { token: token }\r\n      socket.connect();\r\n      socket.emit('userId', username)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, setConnected, toggleConnection, setNewURL, setFontColor, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [underConstruction, setUnderConstruction] = useState(false);\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [roomComponent, setRoomComponent] = useState(new Set());\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [showManualWindow, setShowManual] = useState(false);\r\n  const [showWelcomeWindow, setShowWelcome] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const [manualPage, setManualPage] = useState(1);\r\n  const [showBeam, setShowBeam] = useState(false);\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [socket, setSocket] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  const toggleSelectedComp = (compId) => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      toogleRoomComp(compId);\r\n    }\r\n  };\r\n\r\n  const toogleRoomComp = (compId, val = false) => {\r\n    try {\r\n      if (!roomComponent.has(compId) && val !== false) {\r\n        setRoomComponent(prev => new Set(prev.add(compId)));\r\n\r\n        socket.emit('join stream room', {\r\n          controlId: compId,\r\n          userId: username\r\n        });\r\n      } else if (roomComponent.has(compId)) {\r\n        setRoomComponent(prev => new Set([...prev].filter(x => x !== compId)));\r\n\r\n        socket.emit(\"leave stream room\", {\r\n          controlId: compId,\r\n          userId: username\r\n        });\r\n      }\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowBeam = () => {\r\n    setShowBeam(!showBeam)\r\n  }\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleShowManualWindow = () => {\r\n    setShowManual(!showManualWindow);\r\n  }\r\n\r\n  const toggleShowWelcomeWindow = () => {\r\n    setShowWelcome(!showWelcomeWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('overview')\r\n  }\r\n\r\n  const toggleunderConstruction = (newVal) => {\r\n    setUnderConstruction(newVal)\r\n  }\r\n\r\n  const toggleSetManualPage = (newVal) => {\r\n    setManualPage(newVal)\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        toggleLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        showCam,\r\n        toggleCam,\r\n        setRoomComponent,\r\n        toogleRoomComp,\r\n        showManualWindow,\r\n        toggleShowManualWindow,\r\n        showWelcomeWindow,\r\n        toggleShowWelcomeWindow,\r\n        underConstruction,\r\n        toggleunderConstruction,\r\n        manualPage,\r\n        toggleSetManualPage,\r\n        username,\r\n        setUsername,\r\n        socket,\r\n        setSocket\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Chat from \"./components/Chat/Chat\";\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Settings_Canvas__2HER9\",\"Settings\":\"Settings_Settings__19Ahs\",\"Cam\":\"Settings_Cam__Eq-1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__5S0Vi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"ManualWindowContent_mainWrapper__29Sga\"};","import { useSocketContext } from '../../../services/SocketContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport { ThemeProvider, Tooltip } from '@mui/material';\r\nimport { BsCamera, BsBox } from 'react-icons/bs';\r\nimport { ImEnter, ImExit } from 'react-icons/im';\r\nimport { GiLaserWarning } from 'react-icons/gi';\r\nimport { MdInfoOutline, MdOutlineMenuBook } from 'react-icons/md';\r\nimport styles from '../CSS/NavBar.module.css';\r\nimport { theme } from './../templates/Theme';\r\nimport { FaTags } from 'react-icons/fa';\r\nimport { memo } from 'react';\r\nimport { isEqual } from 'lodash';\r\n\r\n/**\r\n * Navigation bar component \r\n * \r\n * @description React components returns the styling and functionality of the navigation bar. Within this file all onclick events \r\n * on the buttons in the bar and their color changes are also handled.\r\n * \r\n * @returns {React.ReactElement} Navigation bar component  \r\n */\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    // Icon colors intialization and change of these, if condition is fulfilled\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n    let showBeamColor = '';\r\n    if (appCtx.showBeam) { showBeamColor = 'white' }\r\n    let showVirtualLayerColor = '';\r\n    if (!appCtx.showVirtualLayer) { showVirtualLayerColor = 'white' }\r\n    let showManualWindowColor = '';\r\n    if (appCtx.showManualWindow) { showManualWindowColor = 'white' }\r\n\r\n    return (\r\n        <div id='navbar' className={styles.navbar} >\r\n            <ThemeProvider theme={theme} >\r\n                <h1>XR TwinLab - Adaptive Optics</h1>\r\n                {/* If underConstruction, then the following is displayed */}\r\n                {appCtx.underConstruction && <h2>Experiment under construction! Some functions may not work!</h2>}\r\n\r\n                {/* Icons of the navigation bar, their underlying function calls and the tooltips for the description of the icon functionality. */}\r\n                <div className={styles.navMenu}>\r\n                    <ul>\r\n                        <Tooltip title={(socketCtx.connected) ? 'Disconnect' : 'Connect'}>\r\n                            <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}> {(socketCtx.connected) ? <ImExit size={25} color={connectionStatusColor} /> : <ImEnter size={25} color={connectionStatusColor} />} </li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Labels'>\r\n                            <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Cam'>\r\n                            <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Model'>\r\n                            <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} color={showVirtualLayerColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Beam Path'>\r\n                            <li onClick={appCtx.toggleShowBeam}><GiLaserWarning size={25} color={showBeamColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Manual'>\r\n                            <li onClick={appCtx.toggleShowManualWindow}><MdOutlineMenuBook size={26} color={showManualWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Info'>\r\n                            <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                        </Tooltip>\r\n                    </ul>\r\n                </div>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\nexport default memo(NavBar, isEqual)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"Description_mainWrapper__1Wfx9\"};","import { useAppContext } from '../../services/AppContext';\r\nimport { RiTerminalBoxFill } from 'react-icons/ri';\r\nimport styles from './CSS/Console.module.css';\r\nimport { useState, memo } from 'react';\r\nimport { isEqual } from 'lodash';\r\n\r\n/**\r\n * Console component \r\n * \r\n * @description This React component contains the console, the handling of collapsing/expanding it and the display of the log, i.e. the content of this component.\r\n * \r\n * @returns {React.ReactElement} Console component  \r\n */\r\nconst Console = () => {\r\n  const [showConsole, setShowConsole] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n\r\n  const appCtx = useAppContext();\r\n\r\n  //Function handles the folding/unfolding of the console\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + ' ' + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {/* Log representation */}\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}>\r\n        <span>\r\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import { TextField, ThemeProvider, Button, IconButton, Grid } from '@mui/material';\r\nimport HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { themeLogin } from '../../components/UI/templates/Theme';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './CSS/Login.module.css';\r\nimport { isEqual } from 'lodash';\r\n\r\n/**\r\n * Login component \r\n * \r\n * @description This React component contains the login overlay, which prevents the navigation bar and components from being clicked. \r\n * Furthermore, this component handles the forwarding of the entered access code and user name to the SocketContext. \r\n * \r\n * @returns {React.ReactElement} Login component  \r\n */\r\nconst Login = () => {\r\n    // List of addresses to which a connection can be established, for quick change if work is to be done locally.\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'https://xrtl-ao.uni-jena.de' }]\r\n    const [connection, setConnection] = useState('');\r\n    const [accessCode, setAccessCode] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    //Forwarding the entered user name and access code to the SocketContext\r\n    const handleLogin = () => {\r\n        if (username !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection), String(username));\r\n                socketCtx.toggleConnection(String(username), String(accessCode));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    // Handling the entry of the user name\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n        setConnection(connectionOption[1].title)\r\n    };\r\n\r\n    // Handling of the access code entry\r\n    const handleAccessCode = (event) => {\r\n        setAccessCode(event.target.value);\r\n    };\r\n\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={themeLogin}>\r\n                {/* Overlay so that NavBar and components cannot be clicked on */}\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                {/* Login window with input fields */}\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Login</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <TextField\r\n                            autoFocus\r\n                            variant='outlined'\r\n                            label='Username '\r\n                            value={username}\r\n                            onChange={handleChange}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{ marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={username === ''}\r\n                            helperText={username === '' ? 'Enter your username!' : ' '}\r\n                        />\r\n\r\n                        <TextField\r\n                            variant='outlined'\r\n                            label='Access code '\r\n                            value={accessCode}\r\n                            onChange={handleAccessCode}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{ marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={accessCode === ''}\r\n                            helperText={accessCode === '' ? 'Enter the access code!' : ' '}\r\n                        />\r\n                    </Grid>\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: '20%', height: '15%' }}\r\n                    >Login</Button>\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);","import { ThemeProvider, InputAdornment, IconButton, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { theme } from '../../components/UI/templates/Theme';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport { useEffect, useState, memo } from 'react';\r\nimport styles from './CSS/Chat.module.css';\r\nimport { ImBubble } from 'react-icons/im';\r\nimport { MdSend } from 'react-icons/md';\r\nimport { isEqual } from 'lodash';\r\n\r\n/**\r\n * Chat component \r\n * \r\n * @description This React component contains the chat, the collapse/expand handling, the sending of the messages to the other web application clients \r\n * via the server and finally the display of the messages.\r\n * \r\n * @returns {React.ReactElement} Chat component  \r\n */\r\nconst Chat = () => {\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    //When new messages are received, the chat is simply extended to include them.\r\n    const message = (payload) => {\r\n      setChat([...chat, payload]);\r\n    }\r\n\r\n    socketCtx.socket.on('message', message);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('message', message);\r\n    }\r\n  }, [socketCtx, chat])\r\n\r\n  //Handling of sending chat messages\r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Case 1: A command has been entered\r\n    if (message.at(0) === '!') {\r\n\r\n      // De-/activate the ambient rotation of the experiment \r\n      if (message === '!rotate' || message === '!r') {\r\n        appCtx.toggleAutoRotate();\r\n        setChat([...chat, { userId: 'XRTL', message: 'Rotation command was sent ... ', color: '#FF7373' }]);\r\n      }\r\n      // De-/activation of the \"under construction\" message\r\n      else if (message === '!construction' || message === '!c') {\r\n        appCtx.toggleunderConstruction(!appCtx.underConstruction);\r\n        // Forward the change to the server, which sends it to the other web clients.\r\n        socketCtx.socket.emit('underConstruction', !appCtx.underConstruction)\r\n        setChat([...chat, { userId: 'XRTL', message: 'Under construction is now set to ' + !appCtx.underConstruction, color: '#FF7373' }]);\r\n      }\r\n      //Display all user names that are connected to the server via the web application\r\n      else if (message === '!user' || message === '!users') {\r\n        //Request to the server \r\n        socketCtx.socket.emit('updateUser')\r\n\r\n        //Response from the server and formatting of the message, which then finally appears as a chat message within the chat.\r\n        socketCtx.socket.on('updateUser', (payload) => {\r\n          var user = ''\r\n          for (var i = 2; i < payload.length; i += 3) {\r\n            user += payload[i] + ','\r\n          }\r\n          user = user.slice(0, -1)\r\n          setChat([...chat, { userId: 'XRTL', message: 'List of all the active user/s: ' + user, color: '#FF7373' }]);\r\n        })\r\n      }\r\n      // Resetting selected components to their \"factory settings\"\r\n      else if (message === '!reset') {\r\n        socketCtx.socket.emit('message', { userId: 'XRTL', message: 'Attention the reset command was emited!', color: '#FF7373' });\r\n\r\n        const controlIds = ['KM100_top_1', 'KM100_bottom_1', 'linear_1', 'greenlaser_top_1', 'greenlaser_bottom_1', 'beamSplitter']\r\n\r\n        for (var i = 0; i < controlIds.length; i++) {\r\n          socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: controlIds[i],\r\n            reset: true\r\n          })\r\n        }\r\n      }\r\n      // Adjusting the settings of the Overview camera to the optimal settings\r\n      else if (message === '!cam') {\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          frameSize: 10\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          exposure: 800,\r\n          color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          contrast: 1,\r\n          color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          exposure: 1200,\r\n          color: socketCtx.fontColor,\r\n        })\r\n\r\n        setChat([...chat, { userId: 'XRTL', message: 'The highest camera settings have been made!', color: '#FF7373' }]);\r\n      }\r\n      // Output of an error message if command does not exist or is written incorrectly \r\n      else {\r\n        setChat([...chat, { userId: 'XRTL', message: \"Command doesn't exists\", color: '#FF7373' }]);\r\n      }\r\n\r\n    }\r\n    // Case 2: Sending a chat message to all web clients\r\n    else if (message.length > 0 && message.replace(/\\s/g, '').length !== 0) {\r\n      socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\r\n    }\r\n    setMessage('');\r\n  }\r\n\r\n  // Handling of the folding in/out of the chat\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\r\n    setShowChat(!showChat);\r\n  }\r\n\r\n  // Handling of the message\r\n  const handleChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    // Chat container\r\n    <div className={styles.chatContainer + ' ' + animation}>\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              {/* Formatting of the received message from the server to username: message */}\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm}>\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl sx={{ marginLeft: -4, width: 3 / 3, paddingTop: 1 }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">Message  </InputLabel>\r\n            <OutlinedInput\r\n              onKeyPress={(e) => { if (e.key === 'Enter') { sendMessage(e); } }}\r\n              onChange={handleChange}\r\n              value={message}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={sendMessage} edge=\"end\" > <MdSend /> </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Message\"\r\n            />\r\n          </FormControl>\r\n        </ThemeProvider>\r\n      </form>\r\n\r\n      {/* Chat icon */}\r\n      <div className={styles.chatHandler + ' ' + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);","import { themeLogin } from '../../UI/templates/Theme';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport styles from './CSS/Description.module.css';\r\nimport { Button, Box } from '@mui/material';\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Imprint text\r\n * \r\n * @description Within this file is the text for the imprint, which can be found within the information window under the § symbol.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} Imprint text and buttons for redirection to websites.  \r\n */\r\nconst Imprint = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    The editorial responsibility for this application lies with the Executive Office of the Abbe Center of Photonics and it's representative/s.\r\n                </p>\r\n                <p>\r\n                    For further information please follow the links:\r\n                </p>\r\n                <ThemeProvider theme={themeLogin}>\r\n\r\n                    <Box sx={{ '& button': { mr: 5, ml: 3 } }}>\r\n\r\n                        <Button type='submit' variant='contained' onClick={() => { window.open(\"https://www.asp.uni-jena.de/legal-notice\", 'resizable=yes') }}> Legal Notice </Button>\r\n                        <Button type='submit' variant='contained' onClick={() => { window.open(\"https://www.uni-jena.de/en/privacy-statement\", 'resizable=yes') }}> Privacy Statement </Button>\r\n                    </Box>\r\n                </ThemeProvider>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nImprint.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n}\r\n\r\nexport default Imprint;\r\n","import styles from './CSS/Description.module.css'\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Telescope 1 window content \r\n * \r\n * @description This file contains the text for the window of the first telescope, which can be seen within the component window when clicking on telescope 1.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} Content for the telescope 1 component window .  \r\n */\r\nconst DescriptionTelescope1 = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    This telescope with its image size-changing effect is used to fully utilize the area of the adaptive mirror.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nDescriptionTelescope1.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n};\r\nexport default DescriptionTelescope1;","import styles from './CSS/Description.module.css'\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Telescope 2 window content \r\n * \r\n * @description This file contains the text for the window of the second telescope, which can be seen within the component window when clicking on telescope 2.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} Content for the telescope 2 component window .  \r\n */\r\nconst DescriptionTelescope2 = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    This telescope with its image size-changing effect is used to fully utilize the area of the wavefront sensor.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nDescriptionTelescope2.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n}\r\nexport default DescriptionTelescope2;","export default __webpack_public_path__ + \"static/media/DM_outline_center.bb966f1e.png\";","import styles from \"./CSS/Description.module.css\";\r\nimport propTypes from \"prop-types\";\r\nimport DM from \"../../assembly/media/DM_outline_center.png\"\r\n\r\n/**\r\n * Adaptive mirror window content\r\n *\r\n * @description This file contains the text for the window of the adaptive Mirror, which can be seen within the component window when clicking on adaptive mirror.\r\n *\r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n *\r\n * @returns {React.ReactElement} Content for the Adaptive mirror component window .\r\n */\r\nconst DescriptionAdaptiveMirror = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height, background: 'url(' + DM + ')' }} >\r\n                <p>\r\n                    \r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nDescriptionAdaptiveMirror.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n};\r\nexport default DescriptionAdaptiveMirror;\r\n","import styles from \"./CSS/Description.module.css\";\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Shack-Hartmann-Sensor window content\r\n *\r\n * @description This file contains the text for the window of the Shack-Hartmann-Sensor, which can be seen within the component window when clicking on Shack-Hartmann-Sensor.\r\n *\r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n *\r\n * @returns {React.ReactElement} Content for the Shack-Hartmann-Sensor component window .\r\n */\r\nconst DescriptionSHS = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }}>\r\n                <p>\r\n                    Shack-Hartmann-Sensor Description\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nDescriptionSHS.propTypes = {\r\n  height: propTypes.string.isRequired,\r\n};\r\nexport default DescriptionSHS;\r\n","import styles from './CSS/Description.module.css'\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Power Supply window content \r\n * \r\n * @description This file contains the descriptive text for the window of the power supply, which can be seen within the component window on the information icon.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} descriptive text of the power supply \r\n */\r\nconst DescriptionPowerSupply = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    The laser power supply provides the electrical energy necessary to excite the laser medium and generate the coherent beam of light.\r\n                    The laser module here is a class 3 laser, which requires a protective eyewear.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nDescriptionPowerSupply.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n};\r\nexport default DescriptionPowerSupply;","import styles from './CSS/Description.module.css'\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Linear Stage window content \r\n * \r\n * @description This file contains the descriptive text for the window of the linear stage, which can be seen within the component window on the information icon.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} descriptive text of the linear stage\r\n */\r\nconst DescriptionLinearStage = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    This retroreflector mounted on the linear translation stage together with the prism forms an optical delay line.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nDescriptionLinearStage.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n};\r\nexport default DescriptionLinearStage;","import styles from './CSS/Description.module.css'\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Retractable Screen window content \r\n * \r\n * @description This file contains the descriptive text for the window of the retractable screen, which can be seen within the component window on the information icon.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} descriptive text of the retractable screen \r\n */\r\nconst DescriptionRetractableScreen = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    This screen is used to visualize the resulting image after the delay line.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nDescriptionRetractableScreen.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n};\r\nexport default DescriptionRetractableScreen;","import styles from './CSS/Description.module.css'\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Beam Splitter window content \r\n * \r\n * @description This file contains the descriptive text for the window of the beam splitter, which can be seen within the component window on the information icon.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} descriptive text of the beam splitter\r\n */\r\nconst DescriptionBeamSplitter = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    The beam splitter is a partially reflective surface that splits the incoming beam of light into two separate beams.\r\n                    This plate beam splitter transmits about 90 percent of the incident laser light and reflects the other 10 percent.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nDescriptionBeamSplitter.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n};\r\nexport default DescriptionBeamSplitter;","import styles from './CSS/Description.module.css'\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Prism window content \r\n * \r\n * @description This file contains the descriptive text for the window of the prism, which can be seen within the component window on the information icon.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} descriptive text of the prism\r\n */\r\nconst DescriptionPrism = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    This prism together with the retroreflector mounted on the linear translation stage forms an optical delay line.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nDescriptionPrism.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n};\r\nexport default DescriptionPrism;","import Imprint from './Imprint';\r\nimport Telescope1 from './Telescope_1';\r\nimport Telescope2 from './Telescope_2';\r\nimport AdaptiveMirror from './AdaptiveMirror';\r\nimport SHS from './SHS';\r\nimport PowerSupply from './PowerSupply';\r\nimport LinearStage from './LinearStage';\r\nimport RetractableScreen from './RetractableScreen';\r\nimport BeamSplitter from './BeamSplitter';\r\nimport Prism from './Prism';\r\nimport propTypes from \"prop-types\";\r\n\r\n\r\n/**\r\n * Description handler\r\n * \r\n * @description This component handles the display and rendering of the descriptions of the components and the imprint. For this, the descriptions must be imported and defined within the \r\n * variable renderOption as a component with the controlId as the key. This component must then be given the height of the window. The corresponding description is then returned within return. \r\n * \r\n * @param {string} component - controlId \r\n * @param {string} height - Passes the size of the window to scale the content (is specified in pixels).\r\n * \r\n * @returns {React.ReactElement} Component description to be displayed in the window\r\n * \r\n * Examples are for the variable renderOption within return nothing is changed!\r\n * @example   linear_1: <SM1ZP height={props.height} />\r\n * @example   KM100_1: <KM100 height={props.height} />\r\n * @example   screen: <ESPCam height={props.height} />\r\n */\r\nconst DescriptionHandler = (props) => {\r\n\r\n    const renderOption = {\r\n        info: <Imprint height={props.height} />,\r\n        telescope_1: <Telescope1 height={props.height} />,\r\n        telescope_2: <Telescope2 height={props.height} />,\r\n        mirror_1: <AdaptiveMirror height={props.height} />,\r\n        sensor_1: <SHS height={props.height} />,\r\n        relay_laser: <PowerSupply height={props.height} />,\r\n        stepper_linear1: <LinearStage height={props.height} />,\r\n        servo_screen: <RetractableScreen height={props.height} />,\r\n        beamSplitter: <BeamSplitter height={props.height} />,\r\n        prism: <Prism height={props.height} />,\r\n    }\r\n\r\n    return (\r\n        <div>{renderOption[props.component]}</div>\r\n    )\r\n}\r\n\r\nDescriptionHandler.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n    height: propTypes.string.isRequired,\r\n}\r\n\r\nexport default DescriptionHandler;\r\n","import { IoInformationCircleOutline, IoCloseCircleOutline, IoSettingsOutline } from 'react-icons/io5' //IoReloadOutline\r\nimport DescriptionHandler from '../../experiment/ComponentDescription/DescriptionHandler'\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { usePopUpContext } from '../../../services/PopUpContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport { MdOutlineUpdate } from 'react-icons/md'; //MdOutlineCircle\r\nimport styles from '../CSS/Window.module.css';\r\nimport { ImSection } from 'react-icons/im';\r\nimport Draggable from 'react-draggable';\r\nimport { memo, useEffect } from 'react';\r\nimport { isEqual } from 'lodash';\r\nimport { useState } from 'react';\r\n\r\nconst Window = (props) => {\r\n  const [lastChange, setLastChange] = useState(props.lastChange);\r\n  const [footer, setFooter] = useState('Initializing... ');\r\n  const [info, setInfo] = useState(props.info === false ? false : true);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const [topper, setTopper] = useState('')\r\n\r\n  const renderOption = {\r\n    para: <ImSection className={styles.icon} size={24} />,\r\n    info: <IoInformationCircleOutline className={styles.iconClose} size={30} />,\r\n    setting: <IoSettingsOutline className={styles.iconClose} size={30} />,\r\n    none: <IoSettingsOutline className={styles.icon} size={25} color={'#01bd7d'} />,\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.topper === 'none') {\r\n      setTopper('none')\r\n    } else if (props.topper === 'para') {\r\n      setTopper('para')\r\n    } else if (props.topper === undefined) {\r\n      setTopper('info')\r\n    }\r\n\r\n    const Footer = (payload) => {\r\n      if (props.footer !== 'none' && props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (props.footer !== 'none' && props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.on('footer', Footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('footer', Footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n\r\n    if (props.id === \"overview\") {\r\n      appCtx.toggleCam();\r\n    }\r\n\r\n    if (props.id === \"info\") {\r\n      appCtx.toggleShowInfoWindow();\r\n    }\r\n\r\n    if (props.id === \"welcome\") {\r\n      appCtx.toggleShowWelcomeWindow();\r\n    }\r\n\r\n    if (props.id === \"manual\") {\r\n      appCtx.toggleShowManualWindow();\r\n    }\r\n  }\r\n\r\n  const handleInformation = () => {\r\n    setInfo(!info)\r\n\r\n    if (props.id === 'screen' && appCtx.smallSetting === true) {\r\n      appCtx.smallSettings()\r\n    }\r\n\r\n    if (props.id === 'info') {\r\n      topper === 'para' ? setTopper('info') : setTopper('para');\r\n    } else {\r\n      topper === 'info' ? setTopper('setting') : setTopper('info')\r\n    }\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    var alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    popupCtx.toggleShowPopUp(alert, 'info');\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      controlId: props.componentList[0],\r\n      identify: 3000,\r\n      color: socketCtx.fontColor,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px', width: props.height + 'px', height: props.height + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 70px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n\r\n          <p>\r\n            <span onClick={handleInformation}>\r\n              {renderOption[topper]}\r\n            </span>\r\n            <span onClick={handleCloseWindow}><IoCloseCircleOutline className={styles.iconClose} size={30} /></span>\r\n          </p>\r\n        </div>\r\n        {info ?\r\n          <div\r\n            className={styles.windowContent}\r\n            style={{\r\n              height: props.height,\r\n              width: props.width,\r\n              background: 'url(' + props.background + ')',\r\n            }}\r\n          >\r\n            {props.children}\r\n          </div>\r\n\r\n          :\r\n\r\n          <div\r\n            className={styles.windowContent}\r\n            style={{\r\n              height: props.height,\r\n              width: props.width,\r\n            }}\r\n          >\r\n            <DescriptionHandler height={props.height} component={props.id} />\r\n          </div>\r\n        }\r\n\r\n        {props.footer !== 'none' ?\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={handleInfo}> <MdOutlineUpdate size={25} /></span>\r\n            <label>{footer}</label>\r\n          </div>\r\n          :\r\n          <div />\r\n        }\r\n\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);","import Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Description Component window \r\n * \r\n * @description This React component returns a window with the description of a component. \r\n * Inside the DescriptionHandler.js file, the controlId and the class containing the description must \r\n * be added to the dictionary.  \r\n * \r\n * @param {string} id - controlId\r\n * @param {string} header - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * @param {string} height - Defines the height of the window\r\n * @param {string} width - Defines the width of the window\r\n * @param {string} footer - If set to 'none', then the window has no footer.\r\n * @param {string} topper - If set to 'none', then no other button will be displayed in the tooper.\r\n * @param {boolean} info - If set to 'false', then the window does not need any content defined below \r\n * <Winow/> based on the controlId, but gets it from the DescriptionHandler.\r\n * \r\n * @returns {React.ReactElement} Telescope description window\r\n */\r\nconst Description = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      footer={'none'}\r\n      topper={'none'}\r\n      info={false}\r\n    />\r\n  )\r\n}\r\nexport default Description;","export default __webpack_public_path__ + \"static/media/id15_outline.9b250e31.png\";","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * RotaryCtrl component\r\n * \r\n * @description This React component returns the control RotaryCtrl, which consists of two buttons. The class must be given the controlId of the component, \r\n * as well as top and left for the positioning of the entire element.\r\n * \r\n * @param {string} component - controlId \r\n * @param {string} top - Height positioning of the component inside the window \r\n * @param {string} left - Positioning from the left edge of the component\r\n * \r\n * @returns {React.ReactElement} RotaryCtrl control element\r\n */\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const popupCtx = usePopUpContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    // Differentiation whether left or right button was clicked and therefore a negative or positive number must be sent to the server\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    // Prevents sending 0 to the server and displays a popup message instead\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.component,\r\n        move: direction,\r\n        color: socketCtx.fontColor,\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n        controlId: props.component\r\n      });\r\n    } else {\r\n      popupCtx.toggleShowPopUp('Only values greater than 0 can be entered!', 'warning');\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  // Handles the entered number\r\n  const changeRotationHandler = (event) => {\r\n    // Prevents the input of negative numbers\r\n    if (event.target.value > -1) {\r\n      setEnteredRotation(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nRotaryCtrl.propTypes = {\r\n  component: propTypes.string.isRequired,\r\n  top: propTypes.string.isRequired,\r\n  left: propTypes.string.isRequired,\r\n}\r\n\r\nexport default RotaryCtrl;","import PH_Background from \"./media/id15_outline.png\";\r\nimport RotaryCtrl from \"../UI/CtrlUnits/RotaryCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\n/**\r\n * Pinhole component window\r\n * \r\n * @description This react component returns a window with the content for the pinhole component window.\r\n *  \r\n * @param {string} controlId - controlId\r\n * @param {string} controlIdTop - controlId for the stepper motor \r\n * @param {number} rotation - Initialisation value for the control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} Pinhole component window\r\n */\r\nconst Pinhole = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"240px\"\r\n      width=\"250px\"\r\n      background={PH_Background}\r\n    >\r\n      <RotaryCtrl\r\n        component={props.controlId}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default Pinhole;\r\n","export default __webpack_public_path__ + \"static/media/PS_outline.a7b7cf84.png\";","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport propTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\n/**\r\n * Switch Component\r\n * \r\n * @description This component returns a styled switch. The left/beginning and right/end text of the switch can be set. In addition, the controlId, the status \r\n * (of the component and the online status), and the command for the server must be specified.\r\n * \r\n * @param {string} component - controlId \r\n * @param {string} left -  text at the left/beginning\r\n * @param {string} right -text at the right/end\r\n * @param {boolean} switchStatus - Status of the switch from the status request \r\n * @param {boolean} online - connection status to the component\r\n * @param {string} option - command for the server\r\n * \r\n * @returns {React.ReactElement} styled switch with the specified props \r\n * \r\n * @example <Switch component={'TestSwitch'} online={true} switchStatus={false} option=\"switch\" />\r\n * @example <Switch component={'TestSwitch2'} online={true} switchStatus={false} left='Off' right='On' option=\"switch\" />\r\n * @example <Switch component={'TestSwitch3'} online={false} switchStatus={true} left='Front' right='Back' option=\"status\" />\r\n */\r\n\r\nconst SwitchCtrl = (props) => {\r\n    /**\r\n     * @param {bool} switchValue - Indicates the status of the switch\r\n     * @function setSwitchValue - Assigning a new value\r\n     */\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    /**\r\n     * Handles the onclick event on the switch\r\n     * \r\n     * @description Clicking on the button overwrites it with the new value. This is then sent to the server with a \"command\" command. Emitting footer \r\n     * then updates the footer of the window \r\n     * \r\n     * @param {*} event - Clicking event\r\n     * @param {boolean} newValue - Value with which switchValue is to be overwritten\r\n     */\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n    }\r\n\r\n    return (\r\n        <Box >\r\n            <FormGroup>\r\n                <Stack direction=\"row\" alignItems=\"center\" sx={{ ml: 2 }}>\r\n                    <Typography>{props.left}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.right}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nSwitchCtrl.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n    left: propTypes.string,\r\n    right: propTypes.string,\r\n    switchStatus: propTypes.bool.isRequired,\r\n    online: propTypes.bool.isRequired,\r\n    option: propTypes.string.isRequired\r\n}\r\n\r\nexport default SwitchCtrl;\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { useState, useEffect } from \"react\";\r\nimport { theme } from '../templates/Theme.js';\r\nimport Switch from '../templates/Switch';\r\nimport { Box } from '@mui/material';\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * SwitchCtrl component\r\n * \r\n * @description This React component returns a switch with Off on the left and On on the right. This component only needs the contorlId.\r\n * \r\n * @param {string} component - controlId \r\n * \r\n * @returns {React.ReactElement} SwitchCtrl control element\r\n */\r\nconst SwitchCtrl = (props) => {\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  \r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme} >\r\n      <div style={{\r\n        position: 'absolute',\r\n        width: '120px',\r\n        height: '40px',\r\n        border: '2px solid #00ffa8',\r\n        borderRadius: '50px',\r\n        textAlign: 'center',\r\n        top: '40px',\r\n        left: '10px'\r\n      }}>\r\n        <Box sx={{ ml: '-4px' }} >\r\n          <Switch component={props.component} online={onlineStatus} switchStatus={switchIsOn} left='Off' right='On' option=\"switch\" />\r\n        </Box>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nSwitchCtrl.propTypes = {\r\n  component: propTypes.string.isRequired,\r\n}\r\n\r\nexport default SwitchCtrl\r\n","import PS_Background from './media/PS_outline.png';\r\nimport LaserCtrl from '../UI/CtrlUnits/SwitchCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Laser power supply component window\r\n * \r\n * @description  This React component returns a window with the content for the Laser power supply component window.\r\n *  \r\n * @param {string} id - controlId of the entire component (same as for the laser alignment)\r\n * @param {string} controlId - controlId for the relais\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} Laser power supply component window\r\n */\r\nconst Laser = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={PS_Background}\r\n\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","export default __webpack_public_path__ + \"static/media/rotary_outline.51530536.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Rotary_bg from './media/rotary_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Rotary component window\r\n * \r\n * @description This react component returns a window with the content for the rotary component window.\r\n *  \r\n * @param {string} controlId - controlId\r\n * @param {string} controlIdTop - controlId for the stepper motor \r\n * @param {number} rotation - Initialisation value for the control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} Rotary component window\r\n */\r\nconst Rotary = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={Rotary_bg}\r\n    >\r\n      <RotaryCtrl\r\n        component={props.controlId}\r\n        top='10'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default Rotary;\r\n","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * KM100 component window\r\n * \r\n * @description  This React component returns a window with the content for the KM100 component window.\r\n *  \r\n * @param {string} id - controlId of the entire component\r\n * @param {string} controlIdTop - controlId for the upper stepper motor \r\n * @param {string} controlIdBottom - controlId for the lower stepper motor\r\n * @param {number} rotationTop - Initialisation value for upper control element\r\n * @param {number} rotationBottom - Initialisation value for lower control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} KM100 component window\r\n */\r\nconst KM100 = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlIdBottom, props.controlIdTop]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n    >\r\n      <RotaryCtrl\r\n        component={props.controlIdTop}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      <RotaryCtrl\r\n        component={props.controlIdBottom}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/XR50P_outline.84994168.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport XR50P_bg from './media/XR50P_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * XR50P component window\r\n * \r\n * @description This react component returns a window with the content for the XR50P component window.\r\n *  \r\n * @param {string} controlId - controlId\r\n * @param {number} rotation - Initialisation value for the control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} XR50P component window\r\n */\r\nconst XR50P = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={XR50P_bg}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        component={props.controlId}\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default XR50P;\r\n","export default __webpack_public_path__ + \"static/media/Eye_outline.b689eaec.png\";","import Eye_Background from \"./media/Eye_outline.png\";\r\nimport RotaryCtrl from \"../UI/CtrlUnits/RotaryCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\n/**\r\n * Eye component window\r\n *\r\n * @description  This React component returns a window with the content for the eye component window.\r\n *\r\n * @param {string} id - controlId of the entire component\r\n * @param {string} controlIdTop - controlId for the upper stepper motor\r\n * @param {string} controlIdBottom - controlId for the lower stepper motor\r\n * @param {number} rotationTop - Initialisation value for upper control element\r\n * @param {number} rotationBottom - Initialisation value for lower control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window\r\n * @param {number} left - For the positioning of the window\r\n *\r\n * @returns {React.ReactElement} Eye component window\r\n */\r\nconst Eye = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlIdBottom, props.controlIdTop]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"240px\"\r\n      width=\"250px\"\r\n      background={Eye_Background}\r\n    >\r\n      <RotaryCtrl\r\n        component={props.controlIdTop}\r\n        top=\"15\"\r\n        left=\"170\"\r\n      />\r\n      <RotaryCtrl\r\n        component={props.controlIdBottom}\r\n        top=\"35\"\r\n        left=\"170\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default Eye;\r\n","export default __webpack_public_path__ + \"static/media/BS_outline.1d0dd4bd.png\";","import { useSocketContext } from '../../../services/SocketContext';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { theme } from '../templates/Theme.js';\r\nimport { useState, useEffect } from 'react';\r\nimport Switch from '../templates/Switch';\r\nimport Box from '@mui/material/Box';\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * BeamSplitterCtrl component\r\n * \r\n * @description This React component returns a switch with Off on the left and On on the right. This component only needs the contorlId.\r\n * \r\n * @param {string} component - controlId \r\n * \r\n * @returns {React.ReactElement} BeamSplitterCtrl control element\r\n */\r\nconst BeamSplitterCtrl = (props) => {\r\n    const [switchStatus, setSwitchStatus] = useState(false);\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                // Convert the number coming from the server (0 or 90) and convert it to boolean value.\r\n                payload.status.absolute === 90 ? setSwitchStatus(true) : setSwitchStatus(false)\r\n                // console.log(\"Status  \", payload)\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div style={{\r\n                position: 'absolute',\r\n                width: '120px',\r\n                height: '40px',\r\n                border: '2px solid #00ffa8',\r\n                borderRadius: '50px',\r\n                textAlign: 'center',\r\n                top: '200px',\r\n                left: '10px'\r\n            }}>\r\n                <Box sx={{ ml: '-4px' }} >\r\n                    <Switch component={props.component} switchStatus={switchStatus} online={onlineStatus} left='Off' right='On' option='binaryCtrl' />\r\n                </Box>\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nBeamSplitterCtrl.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n}\r\n\r\nexport default BeamSplitterCtrl","import Screen_Background from './media/BS_outline.png';\r\nimport BeamSplitterCtrl from '../UI/CtrlUnits/BeamSplitterCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Beamsplitter component window\r\n * \r\n * @description This react component returns a window with the content for the beamsplitter component window.\r\n *  \r\n * @param {string} controlId - controlId\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} Beamsplitter component window\r\n */\r\nconst Screen = (props) => {\r\n\r\n    return (\r\n        <Window\r\n            id={props.controlId}\r\n            componentList={[props.controlId]}\r\n            header={props.title}\r\n            top={props.top}\r\n            left={props.left}\r\n            height='240px'\r\n            width='250px'\r\n            background={Screen_Background}\r\n        >\r\n            <BeamSplitterCtrl\r\n                component={props.controlId}\r\n            />\r\n\r\n        </Window>\r\n    )\r\n};\r\nexport default Screen;\r\n","import DescriptionOnlyComponent from \"../../assembly/DescriptionOnly\";\r\nimport Pinhole from \"../../assembly/Pinhole\";\r\nimport LaserCtrl from \"../../assembly/Laser\";\r\nimport Rotary from \"../../assembly/Rotary\";\r\nimport KM100 from \"../../assembly/KM100\";\r\nimport XR50P from \"../../assembly/XR50P\";\r\nimport Eye from \"../../assembly/Eye\";\r\nimport Screen from \"../../assembly/Screen\";\r\n\r\n/**\r\n * Experiment setup component\r\n *\r\n * @description Within this React component, all experiment components are intialised and the renderings of their windows, if selected, are handled.\r\n * In addition, important variables are passed to the individual components.\r\n *\r\n * @param {Set} selected - Set contains the controlIds of the component windows that are currently opened/rendered\r\n *\r\n * @returns {React.ReactElement} Experiment setup component\r\n */\r\nconst AdaptiveOptics = (props) => {\r\n  let footer = \"Initializing...\";\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has(\"KM100B_1\") && (\r\n        <KM100\r\n          title=\"Prism Mount\"\r\n          id={\"KM100B_1\"}\r\n          controlIdTop={\"KM100B_top_1\"}\r\n          controlIdBottom={\"KM100B_bottom_1\"}\r\n          footer={footer}\r\n          top={600}\r\n          left={920}\r\n        />\r\n      )}\r\n\r\n      {/* Linear stage */}\r\n      {props.selected.has(\"stepper_linear1\") && (\r\n        <XR50P\r\n          title=\"Linear Stage\"\r\n          controlId={\"stepper_linear1\"}\r\n          footer={footer}\r\n          top={600}\r\n          left={100}\r\n        />\r\n      )}\r\n\r\n      {/* Laser ctrl */}\r\n      {props.selected.has(\"redlaser_1\") && (\r\n        <KM100\r\n          title=\"Laser Alignment\"\r\n          id={\"redlaser_1\"}\r\n          controlIdTop={\"redlaser_top_1\"}\r\n          controlIdBottom={\"redlaser_bottom_1\"}\r\n          footer={footer}\r\n          top={450}\r\n          left={1600}\r\n        />\r\n      )}\r\n\r\n      {/* Laser power */}\r\n      {props.selected.has(\"relay_laser\") && (\r\n        <LaserCtrl\r\n          title=\"Power Supply\"\r\n          id={\"relay_laser\"}\r\n          controlId={\"relay_laser\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={1600}\r\n        />\r\n      )}\r\n\r\n      {/* Pinhole */}\r\n      {props.selected.has(\"stepper_pinhole\") && (\r\n        <Pinhole\r\n          title=\"Pinhole\"\r\n          controlId={\"stepper_pinhole\"}\r\n          footer={footer}\r\n          top={100}\r\n          left={1100}\r\n        />\r\n      )}\r\n\r\n      {/* Phantom eye*/}\r\n      {props.selected.has(\"eye_1\") && (\r\n        <Eye\r\n          title=\"Artificial Eye\"\r\n          id={\"eye_1\"}\r\n          controlIdTop={\"stepper_eye_diop\"}\r\n          controlIdBottom={\"stepper_eye_pupil\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n\r\n      {/* Rotary stage of the eye*/}\r\n      {props.selected.has(\"stepper_rotation\") && (\r\n        <Rotary\r\n          title=\"Target Changing Stage\"\r\n          controlId={\"stepper_rotation\"}\r\n          footer={footer}\r\n          top={550}\r\n          left={150}\r\n        />\r\n      )}\r\n      {/* Beam Splitter*/}\r\n      {props.selected.has(\"beamSplitter\") && (\r\n        <DescriptionOnlyComponent\r\n          title=\"Beam Splitter\"\r\n          controlId={\"beamSplitter\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n      {/* Prism*/}\r\n      {props.selected.has(\"prism\") && (\r\n        <DescriptionOnlyComponent\r\n          title=\"Prism\"\r\n          controlId={\"prism\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n      {/* Telescope in front of the Adaptive Mirror */}\r\n      {props.selected.has(\"telescope_1\") && (\r\n        <DescriptionOnlyComponent\r\n          title=\"Telescope 1\"\r\n          controlId={\"telescope_1\"}\r\n          footer={footer}\r\n          top={550}\r\n          left={900}\r\n        />\r\n      )}\r\n\r\n      {/* Telescope in front of the Wavefront Sensor*/}\r\n      {props.selected.has(\"telescope_2\") && (\r\n        <KM100\r\n          title=\"Telescope 2\"\r\n          id={\"telescope_2\"}\r\n          controlIdTop={\"stepper_tele_x\"}\r\n          controlIdBottom={\"stepper_tele_y\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n      {/* Screen*/}\r\n      {props.selected.has(\"servo_screen\") && (\r\n        <Screen\r\n          title=\"Retractable Screen\"\r\n          controlId={\"servo_screen\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n      {/* Adaptive Mirror*/}\r\n      {props.selected.has(\"mirror_1\") && (\r\n        <DescriptionOnlyComponent\r\n          title=\"Adaptive Mirror\"\r\n          controlId={\"mirror_1\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n      {/* Shack-Hartmann-Sensor*/}\r\n      {props.selected.has(\"wavesensor_1\") && (\r\n        <KM100\r\n          title=\"Wavefront Sensor\"\r\n          id={\"wavesensor_1\"}\r\n          controlIdTop={\"stepper_sensor_a\"}\r\n          controlIdBottom={\"stepper_sensor_b\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default AdaptiveOptics;\r\n","import { useSocketContext } from '../../../services/SocketContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/Settings.module.css'\r\nimport propTypes from \"prop-types\";\r\nimport { useEffect } from 'react';\r\n\r\n/**\r\n * ESPCam canvas component\r\n * \r\n * @description This component returns a canvas with the camera stream of an ESPCam. For this, the height and width \r\n * must be specified. In addition, changes to the styling can be transferred.\r\n * \r\n * @param {string} component - controlId \r\n * @param {string} width - Sets the width of the canvas in pixels\r\n * @param {string} height - Sets the height of the canvas in pixels\r\n * @param {string} style - additional styling of the canvas\r\n * \r\n * @returns {React.ReactElement} styled canvas with ESPCam stream\r\n */\r\nconst ESPCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    useEffect(() => {\r\n        var x1, x2, y1, y2;\r\n        var ctx;\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                var uint8Arr = new Uint8Array(payload.data);\r\n                var binary = '';\r\n                for (var i = 0; i < uint8Arr.length; i++) {\r\n                    binary += String.fromCharCode(uint8Arr[i]);\r\n                }\r\n                var base64String = window.btoa(binary);\r\n\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    var canvas = document.getElementById(props.component);\r\n\r\n                    ctx = canvas.getContext('2d');\r\n                    x1 = 0;\r\n                    y1 = 0;\r\n                    x2 = 600;\r\n                    y2 = 400;\r\n                    ctx.drawImage(this, x1, y1, x2, y2);\r\n                };\r\n                img.src = 'data:image/jpg;base64,' + base64String;\r\n            }\r\n        }\r\n        // A room is created for the component, into which the clients are then added when they open the corresponding window. By creating the room, the traffic caused by sending the \r\n        // stream should be reduced, as only the clients who really need the stream receive it.\r\n        appCtx.toogleRoomComp(props.component, true);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <div className={styles.Canvas}>\r\n            <canvas id={props.component} width={props.width} height={props.height} style={props.style} />\r\n        </div>\r\n    )\r\n}\r\n\r\nESPCam.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n    width: propTypes.string.isRequired,\r\n    height: propTypes.string.isRequired,\r\n    style: propTypes.object\r\n}\r\n\r\nexport default ESPCam;\r\n\r\n","import { useSocketContext } from '../../../services/SocketContext';\r\nimport ESPCam from '../templates/ESPCam';\r\nimport propTypes from \"prop-types\";\r\nimport { useEffect } from 'react';\r\n\r\n/**\r\n * ESPCam component without settings\r\n * \r\n * @description This component returns a canvas with the camera stream of an ESPCam. For this, the height and width of the window must be transferred \r\n * and the controlId with which the ESP is to be addressed.\r\n * \r\n * @param {string} component - controlId \r\n * @param {string} width - Transfers the width to ESPCam class \r\n * @param {string} height - Transfer the height to ESPCam class \r\n * \r\n * @returns {React.ReactElement} styled canvas with ESPCam stream\r\n */\r\nconst ESPCamWithoutSettings = (props) => {\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        document.getElementById(props.component).style.transform = 'rotate(180deg)'\r\n\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                //console.log('Status of settings:   ', payload)\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ESPCam component={props.component} width={props.width} height={props.height} style={{ borderRadius: '5px', backgroundSize: 'cover', top: 30 }} />\r\n    )\r\n}\r\n\r\nESPCamWithoutSettings.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n    width: propTypes.string.isRequired,\r\n    height: propTypes.string.isRequired,\r\n}\r\n\r\nexport default ESPCamWithoutSettings;","import ESPCam from '../UI/CtrlUnits/ESPCamWithoutSettings';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Overview camera window\r\n * \r\n * @description This react component returns a window with the content for the Overview Camera window. \r\n *  \r\n * @returns {React.ReactElement} Overview camera window\r\n */\r\nconst CamWindow = () => {\r\n    var width = window.innerWidth\r\n    var height = 0;\r\n\r\n    if (0 < width && width < 576) {\r\n        width = '350px'\r\n        height = '260px'\r\n    }\r\n    else if (576 < width && width < 768) {\r\n        width = '510px'\r\n        height = '340px'\r\n    } else {\r\n        width = '600px'\r\n        height = '400px'\r\n    }\r\n\r\n\r\n    return (\r\n        <Window\r\n            header={'Top View of Experiment'}\r\n            top={'200'}\r\n            left={'650'}\r\n            id={'overview'}\r\n            componentList={['overview']}\r\n            width={width}\r\n            height={height}\r\n            footer={'none'}\r\n            topper={'none'}\r\n        >\r\n            <ESPCam\r\n                component={'overview'}\r\n                width={width}\r\n                height={height}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default CamWindow;","export default __webpack_public_path__ + \"static/media/xrtl_team.9c8d8d7c.png\";","import styles from \"../CSS/InfoWindowContent.module.css\";\r\nimport bgTeam from \"../../media/images/xrtl_team.png\";\r\n\r\n/**\r\n * Information text\r\n * \r\n * @description This file contains the content and text for the information window.\r\n *  \r\n * @returns {React.ReactElement} Content and Text for the information window\r\n */\r\nconst InfoWindowContent = () => {\r\n  return (\r\n\r\n    <div className={styles.mainWrapper} style={{ backgroundImage: \"url(\\\"\" + bgTeam + \"\\\")\" }}\r\n    >\r\n      Remote labs represent a groundbreaking approach to science education and collaboration, facilitating communication and experimentation from afar. However, creating remote access capabilities can be prohibitively expensive or technically challenging, particularly for non-IT and non-engineering disciplines. To make remote labs accessible across all fields, we need a user-friendly platform that enables researchers, assistants, and technical staff to implement them independently. To that end, we are proud to present XR TwinLab (XRTL), an open-source toolbox designed specifically for the field of Photonics. With its modular structure XRTL offers a flexible, web-based application for controlling optical experimental setups. This exciting project is currently being developed by the esteemed Abbe School of Photonics and the Open Makerspace Lichtwerkstatt Jena.\r\n\r\n      Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n\r\n      <p>\r\n        Best! Clara, Fabian, Falko, Jari and Johannes\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;","import InfoWindowContent from \"./Content/InfoWindowContent\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\n/**\r\n * Information window\r\n * \r\n * @description This react component returns a window with the content for the information window.\r\n *  \r\n * @returns {React.ReactElement} Information window\r\n */\r\nconst InfoWindow = () => {\r\n    var width = window.innerWidth\r\n    var height = 0;\r\n\r\n    if (0 < width && width < 576) {\r\n        width = '350px'\r\n        height = '650px'\r\n    }\r\n    else {\r\n        width = '600px'\r\n        height = '517px'\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            id='info'\r\n            top=\"200\"\r\n            left=\"200\"\r\n            width={width}\r\n            height={height}\r\n            footer={'none'}\r\n            topper={'para'}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useEffect, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Stepper component\r\n * \r\n * @description This component returns a styled stepper. For this, the controlId, the length of the stepper and the beginning of the \r\n * Id of the paragraphs must be specified. Optionally, the text on the right and left can be defined. \r\n * \r\n * @param {string} component - controlId \r\n * @param {number} length - Specifies the length of the stepper\r\n * @param {string} left -  text at the left/beginning\r\n * @param {string} right -text at the right/end\r\n * @param {number} buttonValue - indicates the beginning of the Ids of the paragraphs of the text (these should be set once at 1, 10, 20, ...,\r\n *  because otherwise, when opening several windows, all elements with the same ID will be changed).)\r\n * \r\n * @returns {React.ReactElement} styled stepper with the specified props \r\n * \r\n * @example <Stepper left={'Back'} right={'Next'} buttonValue={10} length={9} component={'manual'} />\r\n * @example <Stepper left={'Back'} right={'Next'} buttonValue={20} length={6} component={'help'} />\r\n * @example <Stepper buttonValue={30} length={3} component={'manual2'} />\r\n */\r\n\r\nconst StepperCtrl = (props) => {\r\n    const theme = useTheme();\r\n    const appCtx = useAppContext();\r\n\r\n    /**\r\n     * @param {number} activeStep - Indicates the position where the stepper is located.\r\n     * @function setActiveStep - Assigning a new value\r\n     */\r\n    const [activeStep, setActiveStep] = useState(1 === appCtx.manualPage ? 1 : appCtx.manualPage)\r\n\r\n    /**\r\n     * @param {number} buttonValue - Indicates the Id of the first paragraph of the first page of the stepper\r\n     * @function setButtonValue - Assigning a new value\r\n     */\r\n    const [buttonValue, setButtonValue] = useState(1 === appCtx.manualPage ? props.buttonValue : appCtx.manualPage + props.buttonValue - 1)\r\n\r\n    /**\r\n     * If the manualPage is not equal to 1, which means that you are not on the first page (e.g. after reopening the window), \r\n     * then this function handles this. By setting the paragraph defined by the buttonValue to not show and the appCtx.manualPage to show.\r\n     */\r\n    useEffect(() => {\r\n        if (1 !== appCtx.manualPage) {\r\n            document.getElementById(String(props.buttonValue)).style.display = 'none'\r\n            document.getElementById(String(appCtx.manualPage + props.buttonValue - 1)).style.display = 'block'\r\n        }\r\n        //Comment needed to prevent a warning\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    /**\r\n     * Function handles the clicking on the next page and the associated re-rendering of the selected text.\r\n     */\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        setButtonValue((buttonValue) => buttonValue + 1);\r\n\r\n        document.getElementById(String(buttonValue)).style.display = 'none'\r\n        document.getElementById(String(buttonValue + 1)).style.display = 'block'\r\n\r\n        if (props.component) {\r\n            appCtx.toggleSetManualPage(activeStep + 1)\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Function handles clicking back to the previous page and the associated re-rendering of the selected text.\r\n     */\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n        setButtonValue((buttonValue) => buttonValue - 1);\r\n\r\n        document.getElementById(String(buttonValue)).style.display = 'none'\r\n        document.getElementById(String(buttonValue - 1)).style.display = 'block'\r\n\r\n        if (props.component) {\r\n            appCtx.toggleSetManualPage(activeStep - 1)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MobileStepper\r\n            variant=\"progress\"\r\n            steps={props.length + 1}\r\n            position=\"static\"\r\n            activeStep={activeStep}\r\n            sx={{ width: '97%', flexGrow: 1, top: '90%', position: 'absolute', background: 'transparent' }}\r\n            nextButton={\r\n                <Button size=\"small\" onClick={handleNext} disabled={activeStep === props.length}>\r\n                    {props.right}\r\n                    {theme.direction === 'rtl' ? (\r\n                        <KeyboardArrowLeft />\r\n                    ) : (\r\n                        <KeyboardArrowRight />\r\n                    )}\r\n                </Button>\r\n            }\r\n\r\n            backButton={\r\n                <Button size=\"small\" onClick={handleBack} disabled={activeStep === 1}>\r\n                    {theme.direction === 'rtl' ? (\r\n                        <KeyboardArrowRight />\r\n                    ) : (\r\n                        <KeyboardArrowLeft />\r\n                    )}\r\n                    {props.left}\r\n                </Button>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nStepperCtrl.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n    length: propTypes.number.isRequired,\r\n    left: propTypes.string,\r\n    right: propTypes.string,\r\n    buttonValue: propTypes.number.isRequired,\r\n}\r\n\r\nexport default StepperCtrl;","import styles from \"./CSS/ManualWindowContent.module.css\";\r\nimport Stepper from \"../../UI//templates/Stepper\";\r\nimport { theme } from '../../UI//templates/Theme';\r\nimport { ThemeProvider } from '@mui/material/';\r\n\r\n\r\nconst ManualWindowContent = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper}      >\r\n                <div id={'10'}>\r\n                    <b>1. &nbsp; Introduction</b><br /><br />\r\n                    <ul>\r\n                        <li>Welcome to our remote-controlled <b>Michelson&nbsp;Interferometer</b>! Today, we'll explore various physical effects and phenomena. Remember, this manual serves as a guide, and users can follow their own exploration path based on their interests and objectives. Enjoy your journey through the fascinating world of Michelson interferometry!\r\n                        </li><br />\r\n                        <li>Discover who is currently engaged in experimentation with you at the <b>XRTL&nbsp;Showcase</b>. Simply type <i>\"!users\"</i> in the chat (pinned on the left edge) to unveil the answer. You can communicate with them via the chat.\r\n                        </li><br />\r\n                        <li>Discover who is currently engaged in experimentation with you at the <b>XRTL&nbsp;Showcase</b>. You can simply communicate with them via the chat (pinned on the left edge).\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div id={'11'} style={{ display: 'none' }}>\r\n                    <b>2. &nbsp; Overview</b><br /><br />\r\n                    <ul>\r\n                        <li>Initiate your experiment by gaining an overview. Begin by accessing the live camera feed through the menu located at the top right corner. From there, you can observe the current state of the experimental setup in our showcase at the <b>Abbe&nbsp;School&nbsp;of&nbsp;Photonics</b>. Take note of the visible components and compare them with those displayed in the 3D model.\r\n                            <br /> Can you identify all of them?\r\n                        </li><br />\r\n                        <li>Familiarize yourself with the user interface, including the power supply, mirror controls and beam splitter options. Simply tap on the individual components to display the respective control window.\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div id={'12'} style={{ display: 'none' }}>\r\n                    <b>3.a &nbsp; Laser</b><br /><br />\r\n                    <ul>\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <ThemeProvider theme={theme}>\r\n                <Stepper left={'Back'} right={'Next'} buttonValue={10} length={3} component={'manual'} />\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\nexport default ManualWindowContent;","import ManualWindowContent from \"../experiment/ComponentDescription/Manual\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\nconst ManualWindow = (props) => {\r\n    var width = window.innerWidth\r\n    var height = 0;\r\n\r\n    if (0 < width && width < 576) {\r\n        width = '350px'\r\n        height = '480px'\r\n    } else {\r\n        width = '510px'\r\n        height = '440px'\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            header=\"XR TwinLab - Adaptive Optic\"\r\n            id='manual'\r\n            top=\"100\"\r\n            left=\"1000\"\r\n            width={width}\r\n            height={height}\r\n            footer={'none'}\r\n            topper={'none'}\r\n        >\r\n            <ManualWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default ManualWindow;","import AdaptiveOptics from \"../../experiment/AdaptiveOptics/AdaptiveOptics\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport CamWindow from \"../../windows/OverviewCamWindow\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport ManualWindow from \"../../windows/ManualWindow\";\r\nimport { useEffect, Fragment } from \"react\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\";\r\n\r\n/**\r\n *  Fragment component \r\n * \r\n * @description This React component returns several components, on one hand the information window, the overview camera window and on the other hand the \r\n * experiment class that handles the rendering of the component windows. Furthermore, within this component, the auth/authfail command is handled and the \r\n * associated pop-up windows. The underConstruction command is processed within this React component.\r\n * \r\n * @returns {React.Fragment} Information window, the overview camera and experiment component  \r\n */\r\nconst ExperimentUILayer = () => {\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    // If authentication was successful on the server side, then auth command is received with the colour assigned by the server.\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.socket.emit('userId', socketCtx.username);\r\n      socketCtx.setConnected(true);\r\n      socketCtx.setFontColor(color);\r\n    }\r\n\r\n    // When underConstruction command is received\r\n    const underConstruction = (payload) => {\r\n      appCtx.toggleunderConstruction(payload);\r\n    }\r\n\r\n    // If authentication fails on the server side because too many users are connected to the server, the authfailed command is sent to the client.\r\n    const authFailed = () => {\r\n      socketCtx.setConnected(false);\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    }\r\n\r\n    socketCtx.socket.on('AuthFailed', authFailed)\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    socketCtx.socket.on('underConstruction', underConstruction)\r\n\r\n    // Prevents the rendering of the pop-up message when the web page is opened.\r\n    if (!socketCtx.socket.connected) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('underConstruction', underConstruction)\r\n      socketCtx.socket.removeAllListeners('AuthFailed', authFailed)\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      {appCtx.showManualWindow && <ManualWindow />}\r\n      <AdaptiveOptics\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport propTypes from \"prop-types\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\n/**\r\n * Descriptive tag component\r\n * \r\n * @description The Recat component returns the tag of a component for the 3D model. For this, the title, the description and the position within the 3D space must be specified.\r\n * \r\n * @param {string} title - title of a component\r\n * @param {string} description - Short description of the components\r\n * @param {string} position  - Positioning of the tag\r\n * \r\n * \r\n * @returns {React.ReactElement} styled tag\r\n */\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '50px',\r\n    position: 'absolute',\r\n    left: props.position.x + 'px',\r\n    top: props.position.y + 'px',\r\n    transform: 'translateY(-100px)',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '100px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nDescriptiveTag.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  description: propTypes.string.isRequired,\r\n  position: propTypes.array.isRequired\r\n}\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","\r\nconst GlassMaterial = () => {\r\n  return (\r\n    <meshPhysicalMaterial\r\n      thickness={1}\r\n      roughness={0.1}\r\n      transmission={1}\r\n      clearcoat={0.5}\r\n      clearcoatRoughness={0}\r\n      ior={1.1}\r\n      envMapIntensity={25}\r\n      color={\"#ffffff\"}\r\n      attenuationColor={\"#00ffff\"}\r\n      attenuationDistance={5}\r\n    />\r\n  );\r\n};\r\nexport default GlassMaterial;\r\n","const LaserMaterial = () => {\r\n    return (\r\n        <meshStandardMaterial\r\n        color=\"#ff0000\"\r\n        transparent\r\n        opacity={0.8}\r\n        emissive\r\n        emissiveIntensity={1}\r\n      />\r\n    );\r\n  };\r\n  export default LaserMaterial;\r\n  ","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\nCommand: npx gltfjsx@6.1.2 AO_230803.glb -k -s\r\n*/\r\n\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport React, { memo } from \"react\";\r\nimport { isEqual } from \"lodash\";\r\nimport GlassMaterial from \"./materials/GlassMaterial\";\r\nimport LaserMaterial from \"./materials/LaserMaterial\";\r\n\r\nfunction Model(props) {\r\n  const { nodes, materials } = useGLTF(\"/model/AO_230803.glb\");\r\n\r\n  return (\r\n    <group {...props} dispose={null} scale={[5, 5, 5]}>\r\n      {/* Beam Overlay */}\r\n\r\n      {props.showBeam && (\r\n        <group>\r\n          <mesh\r\n            name=\"Beam_eye\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Beam_eye.geometry}\r\n          >\r\n            <LaserMaterial />\r\n          </mesh>\r\n          <mesh\r\n            name=\"Beam_screen\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Beam_screen.geometry}\r\n            material={materials.Laser_red}\r\n          >\r\n            <LaserMaterial />\r\n          </mesh>\r\n        </group>\r\n      )}\r\n\r\n      <group\r\n        name=\"LaserPower\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"relay_laser\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0.15, 0.05, 0.45]}\r\n            title=\"Power Supply\"\r\n            description=\"5V Laser Power Supply\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"LaserPower\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Netzteil.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"relay_laser\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n      </group>\r\n      <group\r\n        name=\"AM\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"mirror_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, -0.42]}\r\n            title=\"Adaptive Mirror\"\r\n            description=\"DMH40-P01 Piezoelectric Deformable Mirror\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Cube\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"mirror_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cube_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube_1.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cube_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <group\r\n        name=\"Eye\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"eye_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, 0.43]}\r\n            title=\"Artificial Eye\"\r\n            description=\"Adjustable Diopter and Pupil Size\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Cylinder069\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder069.geometry}\r\n          material={materials[\"BlackParts.001\"]}\r\n        >\r\n          {props.selected.has(\"eye_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder069_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder069_1.geometry}\r\n          material={materials[\"Glass.001\"]}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder069_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder069_2.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"eye_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder069_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder069_3.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n      <group\r\n        name=\"Beamsplitter\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"beamSplitter\");\r\n        }}\r\n      >\r\n        <mesh\r\n          name=\"Cylinder002\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder002.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, 0.305]}\r\n            title=\"Beam Splitter\"\r\n            description=\"10:90 Plate Beam Splitter\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Cylinder002_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder002_1.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder002_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder002_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <mesh\r\n        name=\"KM100mesh_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh_1.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"KM100mesh_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh_2.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n      <mesh\r\n        name=\"KM100mesh_3\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh_3.geometry}\r\n        material={materials.Glass}\r\n      >\r\n        <GlassMaterial />\r\n      </mesh>\r\n\r\n      <mesh\r\n        name=\"KM100mesh002_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh002_1.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"KM100mesh002_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh002_2.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n      <mesh\r\n        name=\"KM100mesh002_3\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh002_3.geometry}\r\n        material={materials.Glass}\r\n      >\r\n        <GlassMaterial />\r\n      </mesh>\r\n\r\n      <group\r\n        name=\"Telescope_1\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"telescope_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, -0.13]}\r\n            title=\"Telescope 1\"\r\n            description=\"Composition of two Lenses\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"KM100mesh003_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh003_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"telescope_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh003_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh003_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n\r\n        <mesh\r\n          name=\"KM100mesh003_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh003_3.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh004_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh004_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"telescope_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh004_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh004_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"KM100mesh004_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh004_3.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n      </group>\r\n\r\n      <group\r\n        name=\"Telescope_2\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"telescope_2\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.02, 0.1, -0.24]}\r\n            title=\"Telescope 2\"\r\n            description=\"Composition of two Lenses\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"KM100mesh005_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh005_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"telescope_2\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh005_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh005_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"KM100mesh005_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh005_3.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh006_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh006_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"telescope_2\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh006_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh006_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"KM100mesh006_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh006_3.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n      </group>\r\n\r\n      <group\r\n        name=\"Wavefront Sensor\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"wavesensor_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0.05, 0.1, -0.11]}\r\n            title=\"Wavefront Sensor\"\r\n            description=\"WFS20-5C/M Shack-Hartmann Sensor\"\r\n          />\r\n        )}\r\n\r\n        <mesh\r\n          name=\"Cube005\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube005.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"wavesensor_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cube005_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube005_1.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cube005_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube005_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <group\r\n        name=\"Pinhole\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"stepper_pinhole\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.01, 0.1, 0.3]}\r\n            title=\"Pinhole\"\r\n            description=\"ID12/M Post-Mounted Iris Diaphragm\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Pinhole\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder036.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"stepper_pinhole\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder036_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder036_1.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <group\r\n        name=\"LinearStage\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"stepper_linear1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0.1, 0.1, 0.15]}\r\n            title=\"Linear Stage\"\r\n            description=\"XR50P/M Linear Translation Platform\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"XR50P_M-Stepbr_(LeftHanded)001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes[\"XR50P_M-Stepbr_(LeftHanded)001\"].geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"stepper_linear1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"XR50P_M-Stepbr_(LeftHanded)001_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes[\"XR50P_M-Stepbr_(LeftHanded)001_1\"].geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"XR50P_M-Stepbr_(LeftHanded)001_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes[\"XR50P_M-Stepbr_(LeftHanded)001_2\"].geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n      </group>\r\n      <group\r\n        name=\"LinearStage\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"prism\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, 0.15]}\r\n            title=\"Prism\"\r\n            description=\"Right-Angle Prism Mirror\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Cube008\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube008.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cube008_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube008_1.geometry}\r\n          material={materials.BlackParts}\r\n        ></mesh>\r\n        <mesh\r\n          name=\"Cube008_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube008_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <group>\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0.12, 0.1, 0.3]}\r\n            title=\"Light Source\"\r\n            description=\"635 nm Laser Diode Module\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Laser\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"Laser_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder_1.geometry}\r\n          material={materials.BlackParts}\r\n        ></mesh>\r\n      </group>\r\n\r\n      <group\r\n        name=\"SelectableScreen\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"servo_screen\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, -0.02]}\r\n            title=\"Retractable Screen\"\r\n            description=\"Simple Retractable Plate\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_1.geometry}\r\n          material={materials[\"BlackParts.002\"]}\r\n        >\r\n          {props.selected.has(\"servo_screen\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_3.geometry}\r\n          material={materials[\"ShinyParts.001\"]}\r\n        />\r\n        <mesh\r\n          name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_4\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_4.geometry}\r\n          material={materials.Servo}\r\n        />\r\n        <mesh\r\n          name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_5.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"screen_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Thorlabs_Servo_Mount_Loose_V1_Adapter_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Adapter_1.geometry}\r\n          material={materials[\"BlackParts.002\"]}\r\n        >\r\n          {props.selected.has(\"screen_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Thorlabs_Servo_Mount_Loose_V1_Adapter_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Adapter_2.geometry}\r\n          material={materials.WhiteParts}\r\n        />\r\n      </group>\r\n\r\n      <group\r\n        name=\"RotaryStage\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"stepper_rotation\");\r\n        }}\r\n      >\r\n          {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.025, 0.46]}\r\n            title=\"Target Changing Stage\"\r\n            description=\"PR01/M Rotation Stage\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"PR01_M-Step_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes[\"PR01_M-Step_1\"].geometry}\r\n          material={materials[\"BlackParts.003\"]}\r\n        >\r\n          {props.selected.has(\"stepper_rotation\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"PR01_M-Step_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes[\"PR01_M-Step_2\"].geometry}\r\n          material={materials[\"ShinyParts.002\"]}\r\n        />\r\n      </group>\r\n\r\n      <mesh\r\n        name=\"Plane004\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane004.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"Plane004_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane004_1.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"/AO_230803.glb\");\r\nexport default memo(Model, isEqual);\r\n","import DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport React, { useRef, memo, useEffect } from \"react\";\r\nimport { Box } from \"@react-three/drei\";\r\nimport { isEqual } from \"lodash\";\r\n\r\nfunction Model2d({ ...props }) {\r\n  const group = useRef();\r\n\r\n  const socket = props.socket;\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === \"beamSplitter\") {\r\n\r\n        // console.log(\"Status  \", payload)\r\n      } else if (payload.controlId === \"OtherComponent\") {\r\n        //Normal case of assignment\r\n        //setRotation(payload.status.absolute);\r\n      }\r\n    };\r\n\r\n    socket.on(\"status\", status);\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"status\", status);\r\n    };\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socket]);\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group\r\n        name=\"BSslim\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"pinhole\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Pinhole\"\r\n            description=\"DESCRIPTION\"\r\n          />\r\n        )}\r\n        <Box\r\n          position={[0, 0, 0]}\r\n          args={[2, 2, 0.01]}\r\n          scale={[0.25, 0.25, 0.25]}\r\n        >\r\n          {props.selected.has(\"pinhole\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"Mirror1\"\r\n        position={[-1, -1, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"KM100B_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Reference Mirror\"\r\n            description=\"KM100 B Double Rotary Control\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"KM100B_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"TranslateMirror\"\r\n        position={[-2, 0, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"linear_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Linear Movable Mirror\"\r\n            description=\"SM1ZP/M Translation Mount\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"linear_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"Schirm\"\r\n        position={[-1, 1, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"rotaryStage_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Rotary Stage\"\r\n            description=\"PR01/M Rotation Stage\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"rotaryStage_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n\r\n\r\n\r\n\r\n      <group\r\n        name=\"Laser\"\r\n        position={[2, 0, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"redlaser_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Laser Alignment\"\r\n            description=\"KM100 Double Rotary Control\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"redlaser_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"SD5\"\r\n        position={[2, 1, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"redlaserPower_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Power Supply\"\r\n            description=\"5V Laser Power Supply\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"redlaserPower_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default memo(Model2d, isEqual);\r\n","import Model3d from \"../../experiment/AdaptiveOptics/AO_230803\";\r\nimport Model2d from \"../../experiment/AdaptiveOptics/MIS1_2D_control\";\r\nimport { OrbitControls, Environment, Billboard } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\n\r\n/**\r\n * 3D Experiment Visualization and Overview Camera Stream\r\n * \r\n * @description Within this recat component, the visualisation of the 3D model or the overview camera stream of the experiment is handled as the background of the React app.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} Navigation bar component  \r\n */\r\nconst VirtualLayer = (...props) => {\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: \"absolute\",\r\n          background: \"linear-gradient(Teal, Black)\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [5, 4, 5], fov: 30 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files=\"../hdri/autoshop.hdr\" />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <Model3d\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n            socket={socketCtx.socket}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    // socketCtx.socket.emit(\"command\", {\r\n    //   userId: socketCtx.username,\r\n    //   controlId: props.component,\r\n    //   getStatus: true,\r\n    // });\r\n\r\n    // appCtx.toogleRoomComp(props.component, true);\r\n\r\n    // socketCtx.socket.on(\"data\", Settings.data);\r\n\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: \"absolute\",\r\n          background: \"linear-gradient(Teal, Black)\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n        colorManagement\r\n        camera={{ position: [0, 0, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          {/* <canvas\r\n            id=\"Canvas\"\r\n            width={props.width}\r\n            height={props.height}\r\n            style={{ borderRadius: \"5px\", backgroundSize: \"cover\" }}\r\n          /> */}\r\n\r\n          <Environment files=\"../hdri/autoshop.hdr\" />\r\n\r\n          {/* <pointLight /> */}\r\n          <Billboard>\r\n            <Model2d\r\n              toggleSelect={appCtx.toggleSelectedComp}\r\n              selected={appCtx.selectedComps}\r\n              showTags={appCtx.showTags}\r\n              socket={socketCtx.socket}\r\n            />\r\n          </Billboard>\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { createTheme } from '@mui/material/styles';\r\n\r\n/**\r\n * Standard theme\r\n * \r\n * @description This theme is the default theme used.\r\n * \r\n * @returns theme\r\n */\r\nexport const theme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#01bd7d',\r\n        },\r\n    }\r\n})\r\n\r\n/**\r\n * Login theme\r\n * \r\n * @description This theme is used in the login window. The special feature here is that the contrast text is white and spaceing is set to two.\r\n * \r\n * @returns login theme\r\n */\r\n\r\nexport const themeLogin = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n    spacing: 2,\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__3Tl7P\",\"windowHeader\":\"Window_windowHeader__3sdoy\",\"windowFooter\":\"Window_windowFooter__2UqYD\",\"icon\":\"Window_icon__1XLwI\",\"iconClose\":\"Window_iconClose__2xmrX\"};","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div  style={{ position: 'fixed', top: '5.25%', right: '0.5%' }}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n} ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__1-A5c\",\"chatMain\":\"Chat_chatMain__2MKlm\",\"msgForm\":\"Chat_msgForm__Lzuye\",\"chatHandler\":\"Chat_chatHandler__2PpcP\",\"openChat\":\"Chat_openChat__1uPdw\",\"closeChat\":\"Chat_closeChat__2CVMW\",\"buttonBlink\":\"Chat_buttonBlink__2OdHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__3bbjP\",\"consoleMain\":\"Console_consoleMain__3VuoB\",\"consoleHandler\":\"Console_consoleHandler__1f5Pp\",\"openConsole\":\"Console_openConsole__2rHs7\",\"closeConsole\":\"Console_closeConsole__3Ij_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1CVNa\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__LL-dY\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__2CpC6\"};"],"sourceRoot":""}