{"version":3,"sources":["services/PopUpContext.js","components/Console/CSS/Console.module.css","components/UI/CSS/Settings.module.css","components/UI/CSS/NavBar.module.css","components/UI/CSS/RotaryCtrl.module.css","components/Login/CSS/Login.module.css","App.js","components/UI/experimentUI/NavBar.js","services/SocketContext.js","components/Console/Console.js","services/AppContext.js","components/Chat/Chat.js","components/Login/Login.js","components/windows/CSS/InfoWindowContent.module.css","components/UI/templates/RadioButton.js","components/UI/templates/Switch.js","components/UI/CtrlUnits/BeamSplitterCtrl.js","components/UI/ComponentDescription/Content/Description_Impressum.js","components/UI/ComponentDescription/DescriptionHandler.js","components/UI/experimentUI/Window.js","components/assembly/BeamSplitter.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/templates/ESPCamSettings.js","components/UI/CtrlUnits/ESPCamStream.js","components/assembly/ESPCam.js","components/UI/templates/HeaterSettings.js","components/UI/CtrlUnits/HeaterCtrl.js","components/assembly/Heater.js","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/media/rotary_outline.png","components/assembly/Rotary.js","components/assembly/media/PS_outline.png","components/UI/CtrlUnits/LaserCtrl.js","components/assembly/Laser.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/UI/CtrlUnits/OverviewCam.js","components/windows/OverviewCamWindow.js","components/media/images/xrtl_team.png","components/windows/Content/InfoWindowContent.js","components/windows/InfoWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_230201.js","components/UI/experimentUI/VirtualLayer.js","index.js","components/UI/templates/Theme.js","components/UI/CSS/Window.module.css","components/UI/CSS/HeaterCtrl.module.css","components/Chat/CSS/Chat.module.css"],"names":["PopUpContext","createContext","usePopUpContext","useContext","PopUpContextProvider","children","useState","showPopUp","setShowPopUp","text","setText","type","setType","socketCtx","useSocketContext","socket","on","error","errmsg","payload","toggleShowPopUp","newText","newType","Provider","value","open","autoHideDuration","onClose","event","reason","style","position","top","right","variant","severity","module","exports","App","process","title","NavBar","appCtx","useAppContext","connectionStatusColor","connected","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showCam","mobileVersion","setMobileVersion","openMobileVersion","Boolean","led","setLED","openLED","laserBeam","setLaserBeam","openLaserBeam","closeMobileVersion","handleLED","closeLaserBeam","id","className","styles","navbar","theme","navMenuLaser","onClick","currentTarget","sx","borderRadius","height","width","color","bgcolor","icon","MenuListProps","anchorEl","toggleShowLED","disableRipple","toggleShowBeam","navMenu","toggleConnection","toggleLogin","size","toggleAutoRotate","toggleShowTags","toggleCam","toggleShowInfoWindow","mobile","paddingRight","memo","isEqual","manager","Manager","autoConnect","SocketContext","jwt","require","SocketContextProvider","setConnected","username","setUsername","URL","setURL","fontColor","setFontColor","useEffect","connect","e","addLog","setSocket","disconnect","removeAllListeners","setNewURL","newURL","accessCode","close","sub","code","component","iat","Date","now","token","sign","auth","setNewFont","newFont","helperEmit","emit","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","logs","map","index","consoleHandler","closeConsole","openConsole","AppContext","React","AppContextProvider","roomComponent","setRoomComponent","Set","showVirtualLayer","setShowVirtualLayer","selectedComps","setSelectedComps","showInfoWindow","setShowInfoWindow","setAutoRotate","showLogin","setShowLogin","showBeam","setShowBeam","setShowTags","setShowCam","showLED","setShowLED","setLogs","toggleSelectedComp","compId","has","prev","filter","x","toogleRoomComp","add","val","controlId","userId","toggleShowVirtualLayer","log","newVal","Chat","showChat","setShowChat","message","setMessage","chat","setChat","sendMessage","preventDefault","at","toggleunderConstruction","underConstruction","user","i","length","slice","controlIds","reset","a","switch","move","Promise","resolve","setTimeout","showCase","frameSize","exposure","contrast","chatContainer","chatMain","msgForm","marginLeft","paddingTop","htmlFor","onChange","target","onKeyPress","key","endAdornment","edge","label","chatHandler","closeChat","openChat","Login","connectionOption","connection","setConnection","setAccessCode","handleLogin","String","handleChange","handleAccessCode","themeLogin","popupWindow","popupInner","fontSize","container","direction","justifyContent","alignItems","autoFocus","helperText","endIcon","RadioButton","radioButton","setRadioButton","option","status","FormControl","FormLabel","RadioGroup","row","aria-labelledby","name","FormControlLabel","disabled","online","control","Radio","SwiitchCtrl","switchValue","setSwitchValue","switchStatus","Box","FormGroup","Stack","ml","Typography","start","Switch","checked","newValue","substring","inputProps","end","BeamSplitterCtrl","switchWhiteIsOn","setSwitchWhiteStatus","switchRedIsOn","setSwitchRedStatus","selectionStatus","setSelectionStatus","onlineStatus","setOnlineStatus","redLED","isOn","whiteLED","busy","state","getStatus","ThemeProvider","mx","component2","pinhole","DescriptionESPCam","padding","overflowY","mr","Button","window","DescriptionHandler","renderOption","info","Window","lastChange","setLastChange","alertType","setAlertType","footer","setFooter","alert","setAlert","setInfo","popupCtx","topper","setTopper","para","iconClose","info2","setting","none","undefined","Footer","componentList","includes","time","getHours","getMinutes","getSeconds","getDay","getMonth","getFooter","handle","left","windowHeader","display","cursor","float","header","smallSetting","smallSettings","windowContent","background","windowFooter","difH","difMin","timeNow","difSec","identify","windowInfo","BeamSplitter","controlId2","controlLED","controlLED2","rotation","rotationTop","SliderCtrl","sliderValue","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","m","gutterBottom","spacing","mb","Slider","aria-label","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","fullWidth","InputLabel","command","ESPCamSettings","Settings","switchIsOn","ESPCamStream","setSwitchStatus","setFrameSize","setContrast","setExposure","ctx","document","getElementById","gray","data","uint8Arr","Uint8Array","binary","fromCharCode","base64String","btoa","img","Image","onload","canvas","getContext","drawImage","this","src","IconButton","setSetting","Canvas","ESPCam","innerWidth","HeaterSettings","Temp","Canvas2","marginTop","marginBottom","startIcon","zIndex","averageTime","updateTime","HeaterCtrl","powerSwitch","setPowerSwitch","setAverageTime","setUpdateTime","powerValue","setPowerValue","temp","setTemp","hiddenSetting","pwm","componentT","string","toFixed","Canvas1","TempSmall","SwitchTemp","Heater","controlIdHeater","controlIdThermistor","RotaryCtrl","enteredRotation","setEnteredRotation","setRotation","absolute","rotCW_Handler","Number","rotaryCtrl","CtrlLeft","CtrlRight","Rotary","Rotary_bg","LaserCtrl","setSwitch","border","textAlign","Laser","PS_Background","KM100","controlIdBottom","controlIdTop","KM100_Background","rotationBottom","SM1ZP","SM1ZP_bg","MichelsonInterferometer","zero","settingHeater","setSettingHeater","innerHeight","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","selected","OverviewCam","x2","y2","transform","backgroundSize","CamWindow","InfoWindowContent","mainWrapper","backgroundImage","bgTeam","href","InfoWindow","ExperimentUILayer","toggleSelect","DescriptiveTag","wrapperStyle","y","Html","zIndexRange","borderLeft","description","Model","useRef","nodes","materials","useGLTF","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","Math","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","PlaneMesh","WhiteParts","PlaneMesh_1","LaserMesh","LaserMesh_1","SD5","Cylinder","Cylinder_1","LaserBeam","emissive","emissiveIntensity","Cylinder007","Cylinder007_1","LaserBeamBS","LEDLightWhite","LEDWhite","LEDLightRed","LEDRed","TranslateMirrorMesh005","TranslateMirrorMesh005_1","TranslateMirrorMesh005_2","TranslateMirrorBase","Cylinder008","Cylinder008_1","Cylinder008_2","Cylinder008_3","Cylinder008_4","Cylinder008_5","TranslateMirrorMesh004","TranslateMirrorMesh004_1","BS_slimHolder001","BS_slimHolder","BaseMesh001","BaseMesh001_1","BaseMesh001_2","BaseMesh001_3","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_230201","ReactDOM","render","createTheme","palette","mode","primary","light","main","dark","contrastText"],"mappings":"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","file":"static/js/main.400bc68d.chunk.js","sourcesContent":["import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div style={{ position: 'fixed', top: '5.25%', right: '0.5%' }}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__36s7p\",\"consoleMain\":\"Console_consoleMain__1WTYq\",\"consoleHandler\":\"Console_consoleHandler__1cLkH\",\"openConsole\":\"Console_openConsole__2HPtm\",\"closeConsole\":\"Console_closeConsole__2OG3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Settings_Canvas__3PUPd\",\"Settings\":\"Settings_Settings__vSiuu\",\"Cam\":\"Settings_Cam__1Pqxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__3PxRA\",\"navMenu\":\"NavBar_navMenu__pAShU\",\"navMenuLaser\":\"NavBar_navMenuLaser__2I-gB\",\"navRow\":\"NavBar_navRow__3fRgQ\",\"mobile\":\"NavBar_mobile__2AMvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__5PhHk\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__22lvT\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__3xHkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__34vH2\",\"close\":\"Login_close__2BLw6\",\"popupWindow\":\"Login_popupWindow__1PvlF\",\"popupInner\":\"Login_popupInner__378L2\"};","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import { MdOutlineScreenRotation, MdInfoOutline } from 'react-icons/md';\r\nimport { MenuItem, Menu, ThemeProvider, IconButton, Tooltip } from '@mui/material';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport { ImEnter, ImExit } from 'react-icons/im'\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport { theme } from './../templates/Theme'\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa';\r\nimport { memo, useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let autoRotateColor = '';\r\n    if (appCtx.autoRotate) { autoRotateColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n\r\n    const [mobileVersion, setMobileVersion] = useState(null);\r\n    const openMobileVersion = Boolean(mobileVersion);\r\n\r\n    const [led, setLED] = useState(null);\r\n    const openLED = Boolean(led)\r\n\r\n    const [laserBeam, setLaserBeam] = useState(null);\r\n    const openLaserBeam = Boolean(laserBeam)\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setMobileVersion(event.currentTarget);\r\n    };\r\n\r\n    const handleClick2 = (event) => {\r\n        setLED(event.currentTarget);\r\n    };\r\n\r\n    const handleLaserBeam = (event) => {\r\n        setLaserBeam(event.currentTarget);\r\n    };\r\n\r\n    const closeMobileVersion = () => {\r\n        setMobileVersion(null);\r\n    };\r\n\r\n    const handleLED = () => {\r\n        setLED(null);\r\n    };\r\n\r\n    const closeLaserBeam = () => {\r\n        setLaserBeam(null);\r\n    };\r\n\r\n    return (\r\n        <div id='navbar' className={styles.navbar} >\r\n            <ThemeProvider theme={theme} >\r\n                <h1>XR TwinLab</h1>\r\n                <div className={styles.navMenuLaser}>\r\n                    <h3>Overlay:</h3>\r\n\r\n                    <IconButton onClick={handleClick2} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <Icon icon=\"mdi:led-off\" width=\"70\" height=\"70\" />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={led}\r\n                        open={openLED}\r\n                        onClose={handleLED}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowLED('none');\r\n                        }} disableRipple >None</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowLED('white');\r\n                        }} disableRipple>White</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowLED('red');\r\n                        }} disableRipple>Red</MenuItem>\r\n                    </Menu>\r\n\r\n                    <IconButton onClick={handleLaserBeam} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <GiLaserWarning />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={laserBeam}\r\n                        open={openLaserBeam}\r\n                        onClose={closeLaserBeam}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('on');\r\n                        }} disableRipple >On</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('off');\r\n                        }} disableRipple>Off</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('split');\r\n                        }} disableRipple>Beamsplitter</MenuItem>\r\n                    </Menu>\r\n\r\n\r\n                </div>\r\n                <div className={styles.navMenu}>\r\n                    <ul>\r\n                        <Tooltip title={(socketCtx.connected) ? 'Disconnect' : 'Connect'}>\r\n                            <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}> {(socketCtx.connected) ? <ImExit size={25} color={connectionStatusColor} /> : <ImEnter size={25} color={connectionStatusColor} />} </li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Rotation'>\r\n                            <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Labels'>\r\n                            <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Webcam'>\r\n                            <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                        </Tooltip>\r\n                        <Tooltip title='Information'>\r\n                            <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className={styles.mobile}>\r\n                    <IconButton onClick={handleClick} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <KeyboardArrowDownIcon color={'white'} />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={mobileVersion}\r\n                        open={openMobileVersion}\r\n                        onClose={closeMobileVersion}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            closeMobileVersion();\r\n                            (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin();\r\n                        }} disableRipple>\r\n                            {(socketCtx.connected) ? <ImExit size={25} color={connectionStatusColor} style={{ paddingRight: '20px' }} /> : <ImEnter size={25} color={connectionStatusColor} style={{ paddingRight: '20px' }} />}\r\n                            {(socketCtx.connected) ? 'Disconnect' : 'Connect'}\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeMobileVersion();\r\n                            appCtx.toggleShowTags();\r\n                        }} disableRipple>\r\n                            <FaTags size={25} style={{ paddingRight: '20px' }} />\r\n                            Labels\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeMobileVersion();\r\n                            appCtx.toggleCam();\r\n                        }} disableRipple>\r\n                            <BsCamera size={26} style={{ paddingRight: '20px' }} />\r\n                            Cam\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeMobileVersion();\r\n                            appCtx.toggleShowInfoWindow();\r\n                        }} disableRipple>\r\n                            <MdInfoOutline size={26} style={{ paddingRight: '20px' }} />\r\n                            Info\r\n                        </MenuItem>\r\n\r\n\r\n                    </Menu>\r\n                </div>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\nexport default memo(NavBar, isEqual)\r\n","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const connect = (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n      appCtx.setSocket(socket);\r\n      appCtx.setUsername(username);\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    /*  if (appCtx.lastClosedComponent === 'screen' || appCtx.lastClosedComponent === 'heater') {\r\n       socket.emit(\"leave stream room\", { controlId: appCtx.lastClosedComponent , userId: username });\r\n       appCtx.toogleLastComp();\r\n     } */\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username, accessCode) => {\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        code: accessCode,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import { useAppContext } from '../../services/AppContext'\r\nimport { RiTerminalBoxFill } from 'react-icons/ri'\r\nimport styles from './CSS/Console.module.css'\r\nimport { useState, memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Console = (props) => {\r\n  const [showConsole, setShowConsole] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + ' ' + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}>\r\n        <span>\r\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [roomComponent, setRoomComponent] = useState(new Set());\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showBeam, setShowBeam] = useState('off');\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [showLED, setShowLED] = useState('none');\r\n  const [logs, setLogs] = useState([]);\r\n  const [socket, setSocket] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n\r\n  const toggleSelectedComp = (compId) => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      toogleRoomComp(compId);\r\n    }\r\n  };\r\n\r\n  const toogleRoomComp = (compId, val = false) => {\r\n    if (!roomComponent.has(compId) && val !== false) {\r\n      setRoomComponent(prev => new Set(prev.add(compId)));\r\n      if (socket) {\r\n        socket.emit('join stream room', {\r\n          controlId: compId,\r\n          userId: username\r\n        });\r\n      }\r\n    } else if (roomComponent.has(compId)) {\r\n      setRoomComponent(prev => new Set([...prev].filter(x => x !== compId)));\r\n      if (socket) {\r\n        socket.emit(\"leave stream room\", {\r\n          controlId: compId,\r\n          userId: username\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('Overview')\r\n  }\r\n\r\n  const toggleShowLED = (newVal) => {\r\n    setShowLED(newVal);\r\n  }\r\n\r\n  const toggleShowBeam = (newVal) => {\r\n    setShowBeam(newVal);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin,\r\n        toggleCam,\r\n        showCam,\r\n        roomComponent,\r\n        setRoomComponent,\r\n        toogleRoomComp,\r\n        showLED,\r\n        toggleShowLED,\r\n        socket,\r\n        setSocket,\r\n        username,\r\n        setUsername\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import { ThemeProvider, InputAdornment, IconButton, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { theme } from '../../components/UI/templates/Theme';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport { useEffect, useState, memo } from 'react';\r\nimport styles from './CSS/Chat.module.css';\r\nimport { ImBubble } from 'react-icons/im';\r\nimport { MdSend } from 'react-icons/md';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Chat = () => {\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  var [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const message = (payload) => {\r\n      setChat([...chat, payload]);\r\n    }\r\n\r\n    socketCtx.socket.on('message', message);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('message', message);\r\n    }\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message.at(0) === '!') {\r\n\r\n      // console.log('message', message)\r\n\r\n      if (message === '!rotate' || message === '!r') {\r\n        appCtx.toggleAutoRotate();\r\n        setChat([...chat, { userId: 'XRTL', message: 'Rotation command was sent ... ', color: '#FF7373' }]);\r\n      } else if (message === '!constructiom' || message === '!c') {\r\n        appCtx.toggleunderConstruction(!appCtx.underConstruction);\r\n        socketCtx.socket.emit('underConstruction', !appCtx.underConstruction)\r\n        setChat([...chat, { userId: 'XRTL', message: 'Under construction is now set to ' + !appCtx.underConstruction, color: '#FF7373' }]);\r\n      }\r\n      else if (message === '!user' || message === '!users') {\r\n\r\n        socketCtx.socket.emit('updateUser')\r\n\r\n        socketCtx.socket.on('updateUser', (payload) => {\r\n          var user = ''\r\n          for (var i = 2; i < payload.length; i += 3) {\r\n            user += payload[i] + ', '\r\n          }\r\n          user = user.slice(0, -2)\r\n          setChat([...chat, { userId: 'XRTL', message: 'List of all the active user/s: ' + user, color: '#FF7373' }]);\r\n        })\r\n      }\r\n      else if (message === '!reset') {\r\n        socketCtx.socket.emit('message', { userId: 'XRTL', message: 'Attention the reset command was emited!', color: '#FF7373' });\r\n\r\n        const controlIds = ['KM100_top_1', 'KM100_bottom_1', 'linear_1', 'greenlaser_top_1', 'greenlaser_bottom_1', 'beamSplitter']\r\n\r\n        for (var i = 0; i < controlIds.length; i++) {\r\n          socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: controlIds[i],\r\n            reset: true\r\n          })\r\n        }\r\n      }\r\n      else if (message === '!showcase' || message === '!s') {\r\n        const showCase = async () => {\r\n          //Turning on the laser\r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'greenlaser_1',\r\n            switch: true,\r\n            color: '#00ffa8'\r\n          })\r\n\r\n          //Adjustment of the linear stage by 200 steps in clockwise direction \r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'linear_1',\r\n            move: 200,\r\n            color: '#00ffa8'\r\n          })\r\n          //Waits 8 s\r\n\r\n          //this line guarantees that the following code is executed only after 8 s\r\n          //please note that some commands may take longer or less time to complete  \r\n          await new Promise(resolve => setTimeout(resolve, 8000));\r\n\r\n          //Adjustment of the linear stage by 200 steps counterclockwise \r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'linear_1',\r\n            move: -200,\r\n            color: '#00ffa8'\r\n          })\r\n        }\r\n\r\n        showCase()\r\n\r\n      }\r\n      else if (message === '!cam') {\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          frameSize: 9\r\n        }) \r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          frameSize: 10\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          exposure: 1000,\r\n          color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          contrast: 1,\r\n          color: socketCtx.fontColor,\r\n        })\r\n\r\n        setChat([...chat, { userId: 'XRTL', message: 'The highest camera settings have been made!', color: '#FF7373' }]);\r\n      }\r\n      else {\r\n        setChat([...chat, { userId: 'XRTL', message: \"Command doesn't exists\", color: '#FF7373' }]);\r\n      }\r\n    } else {\r\n      socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\r\n    }\r\n    setMessage('');\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\r\n    setShowChat(!showChat);\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + ' ' + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm}>\r\n        <ThemeProvider theme={theme}>\r\n\r\n          <FormControl sx={{ marginLeft: -4, width: 3 / 3, paddingTop: 1 }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">Message  </InputLabel>\r\n            <OutlinedInput\r\n              onChange={handleChange}\r\n              onKeyPress={(e) => { if (e.key === 'Enter') { sendMessage(e); } }}\r\n              value={message}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={sendMessage}\r\n                    edge=\"end\"\r\n                  >\r\n                    <MdSend />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Message\"\r\n            />\r\n          </FormControl>\r\n        </ThemeProvider>\r\n      </form>\r\n      <div className={styles.chatHandler + ' ' + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);","import HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { TextField, ThemeProvider, Button, IconButton, Grid } from '@mui/material';\r\nimport { themeLogin } from '../../components/UI/templates/Theme';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './CSS/Login.module.css';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'https://xrtl-mi.uni-jena.de' }]\r\n    const [connection, setConnection] = useState(null);\r\n    const [accessCode, setAccessCode] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleLogin = () => {\r\n        if (username !== '' && accessCode !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection), String(username));\r\n                socketCtx.toggleConnection(String(username), String(accessCode));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n        setConnection(connectionOption[1].title);\r\n    };\r\n\r\n    const handleAccessCode = (event) => {\r\n        setAccessCode(event.target.value);\r\n    };\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={themeLogin}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Login</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <TextField\r\n                            autoFocus\r\n                            variant='outlined'\r\n                            label='Username '\r\n                            value={username}\r\n                            onChange={handleChange}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{ marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={username === ''}\r\n                            helperText={username === '' ? 'Enter your username!' : ' '}\r\n                        />\r\n\r\n                        <TextField\r\n                            variant='outlined'\r\n                            label='Access code '\r\n                            value={accessCode}\r\n                            onChange={handleAccessCode}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{  marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={accessCode === ''}\r\n                            helperText={accessCode === '' ? 'Enter the access code!' : ' '}\r\n                        />\r\n                    </Grid>\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: '20%', height: '15%' }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__1KSQz\"};","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { FormControl, RadioGroup, FormControlLabel, Radio, FormLabel } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst RadioButton = (props) => {\r\n    const [radioButton, setRadioButton] = useState(props.val);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    const handleChange = async (event) => {\r\n        setRadioButton(event.target.value)\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: event.target.value,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set position on \" + props.component + \" to \" + radioButton)\r\n    }\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">{props.title}</FormLabel>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                value={props.val}\r\n                onChange={handleChange}\r\n            >\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'none'} control={<Radio />} label=\"None\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'splitter'} control={<Radio />} label=\"Beam splitter\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'pinhole'} control={<Radio />} label=\"Pinhole\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'rled'} control={<Radio />} label=\"Red LED\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'wled'} control={<Radio />} label=\"White LED\" />\r\n\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default RadioButton;","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    try {\r\n        props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n    } catch (error) { }\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box >\r\n            <FormGroup>\r\n                <Stack direction=\"row\" alignItems=\"center\" sx={{ ml: 2 }}>\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { theme } from '../templates/Theme.js'\r\nimport RadioButton from '../templates/RadioButton';\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from '../templates/Switch';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst BeamSplitterCtrl = (props) => {\r\n    const [switchWhiteIsOn, setSwitchWhiteStatus] = useState(false);\r\n    const [switchRedIsOn, setSwitchRedStatus] = useState(false);\r\n    const [selectionStatus, setSelectionStatus] = useState(80);\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.redLED) {\r\n                setSwitchRedStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.whiteLED) {\r\n                setSwitchWhiteStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.component) {\r\n                (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n                setSelectionStatus(payload.status.state)\r\n            }\r\n            //console.log(\"Status of settings:   \", payload)\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.redLED,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.whiteLED,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps      \r\n    }, [socketCtx.socket]);\r\n    \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ mx: 1 }}>\r\n                <RadioButton component={props.component} component2={props.pinhole} online={onlineStatus} val={selectionStatus} option=\"state\" />\r\n                <Switch component={props.whiteLED} switchStatus={switchWhiteIsOn} online={onlineStatus} start='LED white Off' end='On' option='switch' />\r\n                <Switch component={props.redLED} switchStatus={switchRedIsOn} online={onlineStatus} start='LED red Off' end='On' option='switch' />\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default BeamSplitterCtrl\r\n","import { Button, Box } from '@mui/material';\r\n\r\nimport { themeLogin } from '../../templates/Theme'\r\nimport { ThemeProvider } from '@mui/material/styles';\r\n\r\n\r\nconst DescriptionESPCam = (props) => {\r\n    return (\r\n        <div>\r\n            <div style={{ height: props.height, padding: '0px 5px 5px 7px', overflowY: 'auto' }} >\r\n                <p>\r\n                    The editorial responsibility for this application lies with the Executive Office of the Abbe Center of Photonics and it's representative/s.\r\n                </p>\r\n                <p>\r\n                    For further information please follow the links:\r\n                </p>\r\n                <ThemeProvider theme={themeLogin}>\r\n\r\n                    <Box sx={{ '& button': { mr: 5, ml: 3 } }}>\r\n\r\n                        <Button type='submit' variant='contained' onClick={() => { window.open(\"https://www.asp.uni-jena.de/legal-notice\", 'resizable=yes') }}> Legal Notice </Button>\r\n                        <Button type='submit' variant='contained' onClick={() => { window.open(\"https://www.uni-jena.de/en/privacy-statement\", 'resizable=yes') }}> Privacy Statement </Button>\r\n                    </Box>\r\n                </ThemeProvider>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default DescriptionESPCam;\r\n","import Impressum from './Content/Description_Impressum'\r\n\r\nconst DescriptionHandler = (props) => {\r\n\r\n    const renderOption = {\r\n        info: <Impressum height={props.height} />\r\n    }\r\n\r\n    return (\r\n        <div>{renderOption[props.component]}</div>\r\n    )\r\n}\r\nexport default DescriptionHandler;\r\n","import { IoInformationCircleOutline, IoCloseCircleOutline, IoSettingsOutline, IoReloadOutline } from 'react-icons/io5' //IoReloadOutline\r\nimport { MdOutlineUpdate } from 'react-icons/md'; //MdOutlineCircle\r\nimport { ImSection } from 'react-icons/im';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { usePopUpContext } from '../../../services/PopUpContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/Window.module.css';\r\n//import { CgCloseO } from 'react-icons/cg';\r\nimport { memo, useEffect } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { isEqual } from 'lodash';\r\nimport { useState } from 'react';\r\nimport DescriptionHandler from '../ComponentDescription/DescriptionHandler';\r\n\r\nconst Window = (props) => {\r\n  const [lastChange, setLastChange] = useState(props.lastChange);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState('Initializing... ');\r\n  var [alert, setAlert] = useState(false);\r\n  const [info, setInfo] = useState(true);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const [topper, setTopper] = useState('')\r\n\r\n  const renderOption = {\r\n    para: <ImSection className={styles.icon} size={24} />,\r\n    info: <IoReloadOutline className={styles.iconClose} size={28} />,\r\n    info2: <IoInformationCircleOutline className={styles.iconClose} size={30} />,\r\n    setting: <IoSettingsOutline className={styles.iconClose} size={30} />,\r\n    none: <IoSettingsOutline className={styles.icon} size={25} color={'#01bd7d'} />,\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.topper === 'none') {\r\n      setTopper('none')\r\n    } else if (props.topper === 'para') {\r\n      setTopper('para')\r\n    } else if (props.topper === undefined) {\r\n      setTopper('info')\r\n    }\r\n\r\n    const Footer = (payload) => {\r\n      if (props.footer !== 'empty' && props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (props.footer !== 'empty' && props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.on('footer', Footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('footer', Footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n\r\n    if (props.id === \"overview\") {\r\n      appCtx.toggleCam();\r\n    }\r\n\r\n    if (props.id === \"info\") {\r\n      appCtx.toggleShowInfoWindow();\r\n    }\r\n  }\r\n\r\n  const handleInformation = () => {\r\n\r\n    if (props.id === 'screen' && appCtx.smallSetting === true) {\r\n      appCtx.smallSettings()\r\n    }\r\n\r\n    if (props.id === 'info') {\r\n      setInfo(!info)\r\n      topper === 'para' ? setTopper('info2') : setTopper('para');\r\n    } else {\r\n\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.componentList[0],\r\n        reset: true\r\n      })\r\n\r\n      if (props.componentList[1]) {\r\n        socketCtx.socket.emit('command', {\r\n          userId: socketCtx.username,\r\n          controlId: props.componentList[1],\r\n          reset: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      controlId: props.componentList[0],\r\n      identify: 3000,\r\n      color: socketCtx.fontColor,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px', width: props.height + 'px', height: props.height + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 70px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n\r\n          <p>\r\n            <span onClick={handleInformation}>\r\n              {renderOption[topper]}\r\n            </span>\r\n            <span onClick={handleCloseWindow}><IoCloseCircleOutline className={styles.iconClose} size={30} /></span>\r\n          </p>\r\n        </div>\r\n        {info ?\r\n          <div\r\n            className={styles.windowContent}\r\n            style={{\r\n              height: props.height,\r\n              width: props.width,\r\n              background: 'url(' + props.background + ')',\r\n            }}\r\n          >\r\n            {props.children}\r\n          </div>\r\n\r\n          :\r\n          <div\r\n            className={styles.windowContent}\r\n            style={{\r\n              height: props.height,\r\n              width: props.width,\r\n            }}\r\n          >\r\n            <DescriptionHandler height={props.height} component={props.id} />\r\n          </div>\r\n        }\r\n\r\n        {props.footer !== 'empty' ?\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={handleInfo}> <MdOutlineUpdate size={25} /></span>\r\n            <label>{footer}</label>\r\n          </div>\r\n          :\r\n          <div />\r\n        }\r\n\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);","import BeamSplitterCtrl from \"../UI/CtrlUnits/BeamSplitterCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\nconst BeamSplitter = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId, props.controlId2, props.controlLED, props.controlLED2]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"190px\"\r\n      width=\"360px\"\r\n\r\n    >\r\n      <BeamSplitterCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlId}\r\n        pinhole={props.controlId2}\r\n        redLED={props.controlLED}\r\n        whiteLED={props.controlLED2}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default BeamSplitter;\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderValue);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    setSliderPos(newValue)\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: newValue,\r\n      color: socketCtx.fontColor,\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState(props.selectValue);\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue.props.value,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set selected \" + props.component + \" with \" + selectValue)\r\n    }\r\n    if (props.title === 'Resolution') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={10}>XGA (1024x768)</MenuItem>\r\n                <MenuItem value={9}>SVGA (800x600)</MenuItem>\r\n                <MenuItem value={8}>VGA (640x480)</MenuItem>\r\n                <MenuItem value={5}>QVGA (320x240)</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n    else if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={5000}>5</MenuItem>\r\n                <MenuItem value={10000}>10</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\r\nimport { FormControl, InputLabel, Box } from '@mui/material';\r\nimport SelectItem from './SelectItem';\r\n\r\nconst SelectCtrl = (props) => {\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >{props.title}</InputLabel>\r\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} selectValue={props.selectValue} />\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\nexport default SelectCtrl;","import { ThemeProvider } from '@mui/material/styles';\r\nimport styles from '../CSS/Settings.module.css';\r\nimport { theme } from '../templates/Theme.js';\r\nimport Slider from '../templates/SliderCtrl';\r\nimport Switch from '../templates/Switch';\r\nimport Select from '../templates/Select';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst ESPCamSettings = (props) => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Settings}>\r\n                <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n                <Select title='Resolution' component={props.component} online={props.online} option='frameSize' selectValue={props.frameSize}/>\r\n                <Switch component={props.component} switchStatus={props.switchIsOn} online={props.online} start='Color' end='Gray' option='gray' />\r\n                <Slider title='Contrast' component={props.component} online={props.online} sliderValue={props.contrast} min={-2} max={2} option='contrast' />\r\n                <Slider title='Exposure' component={props.component} online={props.online} sliderValue={props.exposure} min={0} max={1200} option='exposure' />\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default ESPCamSettings;","import SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport ESPCamSettings from '../templates/ESPCamSettings';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport styles from '../CSS/Settings.module.css'\r\nimport { theme } from '../templates/Theme.js';\r\nimport { useState, useEffect } from 'react';\r\nimport { IconButton } from '@mui/material';\r\n\r\nconst ESPCamStream = (props) => {\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [switchIsOn, setSwitchStatus] = useState(false);\r\n    const [frameSize, setFrameSize] = useState(0);\r\n    const [contrast, setContrast] = useState(0);\r\n    const [exposure, setExposure] = useState(0);\r\n    \r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const hiddenSetting = () => {\r\n        props.setSetting(!props.setting)\r\n\r\n        if (props.setting) {\r\n            document.getElementById('ScreenCanvas').style.left = '-325px'\r\n        } else {\r\n            document.getElementById('ScreenCanvas').style.left = '-655px'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        var x1, x2, y1, y2;\r\n        var ctx;\r\n\r\n        if (!props.setting && !props.mobile) {\r\n            document.getElementById('ScreenCanvas').style.left = '-325px'\r\n        } else if (!props.mobile) {\r\n            document.getElementById('ScreenCanvas').style.left = '-655px'\r\n        }\r\n\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                setSwitchStatus(payload.status.gray)\r\n                setExposure(payload.status.exposure)\r\n                setContrast(payload.status.contrast)\r\n                setFrameSize(payload.status.frameSize)\r\n                //console.log('Status of settings:   ', payload)\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                var uint8Arr = new Uint8Array(payload.data);\r\n                var binary = '';\r\n                for (var i = 0; i < uint8Arr.length; i++) {\r\n                    binary += String.fromCharCode(uint8Arr[i]);\r\n                }\r\n                var base64String = window.btoa(binary);\r\n\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    var canvas = document.getElementById('ScreenCanvas');\r\n\r\n                    ctx = canvas.getContext('2d');\r\n                    x1 = 0;\r\n                    y1 = 0;\r\n                    x2 = 600;\r\n                    y2 = 400;\r\n                    ctx.drawImage(this, x1, y1, x2, y2);\r\n                };\r\n                img.src = 'data:image/jpg;base64,' + base64String;\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        appCtx.toogleRoomComp(props.component, true);\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Settings}>\r\n                <IconButton onClick={hiddenSetting}  >\r\n                    <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                </IconButton>\r\n                <div className={styles.Canvas}>\r\n                    <canvas id='ScreenCanvas' width={'600px'} height={'400px'} />\r\n                </div>\r\n                {props.setting && <ESPCamSettings component={props.component} online={onlineStatus} contrast={contrast} exposure={exposure} switchIsOn={switchIsOn} frameSize={frameSize} />}\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default ESPCamStream;","import ESPCamStream from '../UI/CtrlUnits/ESPCamStream';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst ESPCam = (props) => {\r\n  var width = window.innerWidth\r\n  var height = 0;\r\n  var mobile = true;\r\n\r\n  if (0 < width && width < 576) {\r\n    width = '350px'\r\n    height = '260px'\r\n  }\r\n  else if (576 < width && width < 768) {\r\n    width = '510px'\r\n    height = '340px'\r\n  }\r\n  else if (768 < width && width < 1000) {\r\n    width = '650px'\r\n    height = '430px'\r\n  } else {\r\n    width = '1000px'\r\n    height = '430px'\r\n  }\r\n\r\n  if (props.setting && width === '1000px') {\r\n    width = '1000px';\r\n    mobile = false\r\n  } else if (!props.setting && width === '1000px') {\r\n    width = '670px';\r\n    mobile = false;\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <ESPCamStream\r\n        component={props.controlId}\r\n        width={width}\r\n        setting={props.setting}\r\n        setSetting={props.setSetting}\r\n        mobile={mobile}\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default ESPCam;","import DeviceThermostatOutlinedIcon from '@mui/icons-material/DeviceThermostatOutlined';\r\nimport { Button } from '@mui/material';\r\nimport styles from '../CSS/HeaterCtrl.module.css';\r\nimport Select from './Select'\r\n\r\nconst HeaterSettings = (props) => {\r\n\r\n    return (\r\n        <div className={styles.Temp}>\r\n            <div className={styles.Canvas2}>\r\n                <Button sx={{ fontSize: 17, marginLeft: -34, marginTop: -4, marginBottom: 10 }} startIcon={<DeviceThermostatOutlinedIcon />}>Gauge settings </Button>\r\n                <div className={styles.Select}>\r\n                    <Select sx={{ zIndex: 1500, marginBottom: -10 }} title='Average time (ms)' component={props.component} online={props.online} option='averageTime' selectValue={props.averageTime} />\r\n                    <Select title='Update time (s)' component={props.component} online={props.online} option='updateTime' selectValue={props.updateTime} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default HeaterSettings;","import { ThemeProvider, Button, IconButton, Typography } from '@mui/material';\r\nimport MicrowaveOutlinedIcon from '@mui/icons-material/MicrowaveOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport HeaterSettings from '../templates/HeaterSettings'\r\nimport styles from '../CSS/HeaterCtrl.module.css';\r\nimport { theme } from '../templates/Theme.js';\r\nimport Slider from '../templates/SliderCtrl';\r\nimport { useState, useEffect } from 'react';\r\nimport Switch from '../templates/Switch'\r\n\r\nconst HeaterCtrl = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [powerSwitch, setPowerSwitch] = useState(false);\r\n    const [averageTime, setAverageTime] = useState(0);\r\n    const [updateTime, setUpdateTime] = useState(0);\r\n    const [powerValue, setPowerValue] = useState(0);\r\n    const [temp, setTemp] = useState('-°C');\r\n\r\n    const hiddenSetting = () => {\r\n        props.setSetting(!props.setting)\r\n\r\n        if (props.setting) {\r\n            document.getElementById('smallTemp').style.display = 'block'\r\n            document.getElementById('temp').style.display = 'none'\r\n        } else {\r\n            document.getElementById('smallTemp').style.display = 'none'\r\n            document.getElementById('temp').style.display = 'block'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.setting) {\r\n            document.getElementById('smallTemp').style.display = 'none'\r\n            document.getElementById('temp').style.display = 'block'\r\n        } else {\r\n            document.getElementById('smallTemp').style.display = 'block'\r\n            document.getElementById('temp').style.display = 'none'\r\n        }\r\n\r\n      \r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                setPowerSwitch(payload.status.isOn)\r\n                setPowerValue(payload.status.pwm)\r\n\r\n                // console.log(\"Status  \", payload)\r\n            }\r\n\r\n            if (payload.controlId === props.componentT) {\r\n                setAverageTime(payload.status.averageTime);\r\n                setUpdateTime(payload.status.updateTime);\r\n                // console.log(\"Status  Thermistor\", payload)\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.componentT) {\r\n                var string = payload.data.data;\r\n                try { string = string.toFixed(1) + \" °C\" } catch (e) { string = '-°C' }\r\n                setTemp(string);\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.componentT,\r\n            getStatus: true\r\n        })\r\n\r\n        appCtx.toogleRoomComp(props.component, true);\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n\r\n            <div id={'temp'} style={{ display: 'none' }}>\r\n                <div className={styles.Temp}>\r\n                    <Typography id='temp' variant='h2'>{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.Canvas1}>\r\n                    <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                    <Slider title='PowerSwitch' component={props.component} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n\r\n                </div>\r\n                <div className={styles.Switch} >\r\n                    <Switch component={props.component} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option='switch' />\r\n                </div>\r\n                <HeaterSettings online={true} component={props.componentT} updateTime={updateTime} averageTime={averageTime} />\r\n            </div>\r\n\r\n\r\n            <div id={'smallTemp'} >\r\n                <div className={styles.TempSmall}>\r\n                    <Typography id='temp' variant='h2'>{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className={styles.Canvas1}>\r\n                    <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                    <Slider title='PowerSwitch' component={props.component} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n\r\n                </div>\r\n                <div className={styles.SwitchTemp} >\r\n                    <Switch component={props.component} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option='switch' />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </ThemeProvider>\r\n    )\r\n\r\n}\r\nexport default HeaterCtrl;\r\n","import HeaterCtrl from '../UI/CtrlUnits/HeaterCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Heater = (props) => {\r\n    var width = window.innerWidth\r\n\r\n    if (props.setting) {\r\n        width = '673px'\r\n    } else if (!props.setting) {\r\n        width = '350px'\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            id={props.id}\r\n            componentList={[props.controlIdHeater, props.controlIdThermistor]}\r\n            header={props.title}\r\n            top={props.top}\r\n            left={props.left}\r\n            height='340px'\r\n            width={width}\r\n        >\r\n            <HeaterCtrl\r\n                component={props.controlIdHeater}\r\n                componentT={props.controlIdThermistor}\r\n                setting={props.setting}\r\n                setSetting={props.setSetting}\r\n            />\r\n        </Window>\r\n    )\r\n}\r\nexport default Heater;","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.component,\r\n        move: direction,\r\n        color: socketCtx.fontColor,\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n        controlId: props.component\r\n      });\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    if (event.target.value > -1) {\r\n      setEnteredRotation(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","export default __webpack_public_path__ + \"static/media/rotary_outline.c6f9b7e7.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Rotary_bg from './media/rotary_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Rotary = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={Rotary_bg}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top='10'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default Rotary;\r\n","export default __webpack_public_path__ + \"static/media/PS_outline.8e83270a.png\";","import { ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { theme } from '../templates/Theme.js';\r\nimport Switch from '../templates/Switch';\r\nimport { Box } from '@mui/material';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme} >\r\n      <div style={{\r\n        position: 'absolute',\r\n        width: '120px',\r\n        height: '40px',\r\n        border: '2px solid #00ffa8',\r\n        borderRadius: '50px',\r\n        textAlign: 'center',\r\n        top: '40px',\r\n        left: '10px'\r\n      }}>\r\n        <Box sx={{ ml: '-4px' }} >\r\n          <Switch component={props.component} online={onlineStatus} switchStatus={switchIsOn} start='Off' end='On' option=\"switch\" />\r\n        </Box>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\nexport default LaserCtrl","import PS_Background from './media/PS_outline.png';\r\nimport LaserCtrl from '../UI/CtrlUnits/LaserCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Laser = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={PS_Background}\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst KM100 = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlIdBottom, props.controlIdTop]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      \r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport SM1ZP_bg from './media/linear_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst SM1ZP = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={SM1ZP_bg}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import BeamSplitter from '../../assembly/BeamSplitter';\r\nimport ESPCam from '../../assembly/ESPCam';\r\nimport Heater from '../../assembly/Heater';\r\nimport Rotary from '../../assembly/Rotary';\r\nimport Laser from '../../assembly/Laser';\r\nimport KM100 from '../../assembly/KM100';\r\nimport SM1ZP from '../../assembly/SM1ZP';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = 'Initializing...'\r\n  var zero = '0'\r\n  const [setting, setSetting] = useState(false)\r\n  const [settingHeater, setSettingHeater] = useState(false)\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has('KM100_1') && (\r\n        <KM100\r\n          title='Reference Mirror'\r\n          id={'KM100_1'}\r\n          controlIdTop={'KM100_top_1'}\r\n          controlIdBottom={'KM100_bottom_1'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has('linear_1') && (\r\n        <SM1ZP\r\n          title='Linear Movable Mirror'\r\n          controlId={'linear_1'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Rotary stage plate*/}\r\n      {props.selected.has('plate_rotation') && (\r\n        <Rotary\r\n          title='Glass Plate Rotation Stage'\r\n          controlId={'plate_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Rotary stage Measurement Mirror*/}\r\n      {props.selected.has('heater_rotation') && (\r\n        <Rotary\r\n          title='Mirror Changing Stage'\r\n          controlId={'heater_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topHighMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has('greenlaser_1') && (\r\n        <KM100\r\n          title='Laser Alignment'\r\n          id={'greenlaser_1'}\r\n          controlIdTop={'greenlaser_top_1'}\r\n          controlIdBottom={'greenlaser_bottom_1'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has('greenlaserPower_1') && (\r\n        <Laser\r\n          title='Power Supply'\r\n          id={'greenlaserPower_1'}\r\n          controlId={'greenlaser_1'}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has('screen') && (\r\n        <ESPCam\r\n          title='Screen'\r\n          controlId={'screen'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n          setting={setting}\r\n          setSetting= {setSetting}\r\n        />\r\n      )}\r\n      {/* Heater */}\r\n      {props.selected.has('heater') && (\r\n        <Heater\r\n          title='Heatable Mirror Stage'\r\n          id={'heater'}\r\n          controlIdHeater={'heater'}\r\n          controlIdThermistor={'thermistor'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n          setting={settingHeater}\r\n          setSetting= {setSettingHeater}\r\n        />\r\n      )}\r\n\r\n      {/* Beam splitter */}\r\n      {props.selected.has('experimentSelection') && (\r\n        <BeamSplitter\r\n          title='Multi Component Selection'\r\n          controlId={'experimentSelection'}\r\n          controlId2={'pinhole'}\r\n          controlLED={'redLED'}\r\n          controlLED2={'whiteLED'}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={halfWidth}\r\n        />\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default MichelsonInterferometer;","import { useSocketContext } from '../../../services/SocketContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport { useEffect } from 'react';\r\n\r\nconst OverviewCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    useEffect(() => {\r\n        var x1, x2, y1, y2;\r\n        var ctx;\r\n        var height = Number(props.height.slice(0, -2))\r\n        var width = Number(props.width.slice(0, -2))\r\n\r\n        document.getElementById('Canvas').style.transform = 'rotate(180deg)'\r\n\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                //console.log('Status of settings:   ', payload)\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                var uint8Arr = new Uint8Array(payload.data);\r\n                var binary = '';\r\n                for (var i = 0; i < uint8Arr.length; i++) {\r\n                    binary += String.fromCharCode(uint8Arr[i]);\r\n                }\r\n                var base64String = window.btoa(binary);\r\n\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    var canvas = document.getElementById('Canvas');\r\n\r\n                    ctx = canvas.getContext('2d');\r\n                    x1 = 0;\r\n                    y1 = 0;\r\n                    x2 = width;\r\n                    y2 = height;\r\n                    ctx.drawImage(this, x1, y1, x2, y2);\r\n                };\r\n                img.src = 'data:image/jpg;base64,' + base64String;\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        appCtx.toogleRoomComp(props.component, true);\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <canvas id='Canvas' width={props.width} height={props.height} style={{ borderRadius: '5px', backgroundSize: 'cover' }} />\r\n    )\r\n}\r\nexport default OverviewCam;","import Settings from '../UI/CtrlUnits/OverviewCam';\nimport Window from '../UI/experimentUI/Window';\n\nconst CamWindow = (props) => {\n    var width = window.innerWidth\n    var height = 0;\n\n    if (0 < width && width < 576) {\n        width = '350px'\n        height = '260px'\n    }\n    else if (576 < width && width < 768) {\n        width = '510px'\n        height = '340px'\n    } else {\n        width = '600px'\n        height = '400px'\n    }\n\n\n    return (\n        <Window\n            header={'Top View of Experiment'}\n            top={'200'}\n            left={'650'}\n            id={'overview'}\n            componentList={['overview']}\n            width={width}\n            height={height}\n            footer={'empty'}\n            topper={'none'}\n        >\n            <Settings\n                component={'overview'}\n                width={width}\n                height={height}\n            />\n        </Window>\n    );\n};\nexport default CamWindow;","export default __webpack_public_path__ + \"static/media/xrtl_team.9c8d8d7c.png\";","import styles from \"../CSS/InfoWindowContent.module.css\";\nimport bgTeam from \"../../media/images/xrtl_team.png\";\n\nconst InfoWindowContent = (props) => {\n  return (\n\n    <div className={styles.mainWrapper}\n      style={{ backgroundImage: \"url(\\\"\" + bgTeam + \"\\\")\" }}\n    >\n      Remote labs represent a groundbreaking approach to science education and collaboration, facilitating communication and experimentation from afar. However, creating remote access capabilities can be prohibitively expensive or technically challenging, particularly for non-IT and non-engineering disciplines. To make remote labs accessible across all fields, we need a user-friendly platform that enables researchers, assistants, and technical staff to implement them independently. To that end, we are proud to present XR TwinLab (XRTL), an open-source toolbox designed specifically for the field of Photonics. With its modular structure XRTL offers a flexible, web-based application for controlling optical experimental setups. This exciting project is currently being developed by the esteemed Abbe School of Photonics and the Open Makerspace Lichtwerkstatt Jena.\n\n      Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\n\n      <p>\n        Best! Clara, Fabian, Falko, Jari and Johannes\n      </p>\n\n    </div>\n\n  )\n}\nexport default InfoWindowContent;","import InfoWindowContent from \"./Content/InfoWindowContent\";\nimport Window from \"../UI/experimentUI/Window\";\n\nconst InfoWindow = (props) => {\n    var width = window.innerWidth\n    var height = 0;\n\n    if (0 < width && width < 576) {\n        width = '350px'\n        height = '650px'\n    }\n    else {\n        width = '600px'\n        height = '517px'\n    }\n\n    return (\n        <Window\n            header=\"About XR TwinLab\"\n            id='info'\n            top=\"200\"\n            left=\"200\"\n            width={width}\n            height={height}\n            footer={'empty'}\n            topper={'para'}\n        >\n            <InfoWindowContent />\n        </Window>\n    );\n};\nexport default InfoWindow;","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport CamWindow from \"../../windows/OverviewCamWindow\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\";\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.socket.emit('userId', socketCtx.username)\r\n      socketCtx.setNewFont(color);\r\n      setConnection(true);\r\n    }\r\n\r\n    socketCtx.socket.on('AuthFailed', () => {\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    })\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '50px',\r\n    position: 'absolute',\r\n    left: props.position.x + 'px',\r\n    top: props.position.y + 'px',\r\n    transform: 'translateY(-100px)',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '100px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from 'react';\r\nimport { useGLTF, Box, Cylinder} from '@react-three/drei';\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport {isEqual} from 'lodash';\r\n\r\nexport function Model(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF(\"/model/MI_230104.glb\");\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* Glass Materials need to be generated here*/}\r\n          {/* Beam Splitter cube */}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 1 */}\r\n          <Box\r\n            position={[-0.45, 0.55, 0.58]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#9999ff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 2 */}\r\n          <Box\r\n            position={[0.2, 0.55, 0.44]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#99ff99\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Beam Splitter slim is defined in 'off' Overlay*/}\r\n\r\n          {/* Lens */}\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[0,0,0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"KM100_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 1, 1]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"KM100_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}          \r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"screen\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[-0.4, 1, -1.3]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n            material={materials.WhiteParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaser_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.6, 1, -0.15]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"greenlaser_1\") ? (\r\n                <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n              )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n       </group>\r\n\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaserPower_1\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.8, 0.6, -0.9]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"greenlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {\r\n          (props.showBeam === 'off') &&\r\n          <group>\r\n            <group\r\n                name=\"BS_slim\"\r\n                position={[0.64, 0, -0.52]}\r\n                onPointerDown={(e) => {\r\n                  e.stopPropagation();\r\n                  props.toggleSelect(\"experimentSelection\");\r\n                }}\r\n              >\r\n                {props.showTags && <DescriptiveTag position={[0, 1, -0.15]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n                <mesh\r\n                  name=\"Cylinder\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder.geometry}\r\n                  material={materials.BlackParts}\r\n                >\r\n                  {props.selected.has(\"experimentSelection\") ? (\r\n                    <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                  ) : (\r\n                    <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                  )}\r\n                </mesh>\r\n                <mesh\r\n                  name=\"Cylinder_1\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder_1.geometry}\r\n                  material={materials.ShinyParts}\r\n                />\r\n              </group>\r\n              <Cylinder\r\n                position={[0.64, 0.68, -0.66]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n          </group>\r\n        }\r\n        {\r\n          (props.showBeam === 'on') &&\r\n          <group>\r\n            <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 11, 0]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group> \r\n        }\r\n\r\n        {\r\n          (props.showBeam === 'split') && \r\n          <group>\r\n            <mesh\r\n              name=\"LaserBeamBS\"\r\n              geometry={nodes.LaserBeamBS.geometry}\r\n              material={materials.Laser}\r\n              position={[-0.53, 0.68, -0.13]}\r\n              rotation={[0, 0, -Math.PI / 2]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <mesh\r\n              name=\"LaserBeam\"\r\n              castShadow\r\n              receiveShadow\r\n              geometry={nodes.LaserBeam.geometry}\r\n              material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh> \r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0, 0, 0]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n              <Cylinder\r\n                position={[0, 0.68, -0.14]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 11, 0]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group>  \r\n        }\r\n\r\n        {(props.showLED === 'none') &&\r\n        <mesh/>\r\n        }\r\n\r\n        {(props.showLED === 'white') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightWhite\"\r\n              geometry={nodes.LEDLightWhite.geometry}\r\n              material={materials.LEDWhite}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ffffff\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 11, 0]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n          </group>\r\n        }\r\n\r\n        {(props.showLED === 'red') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightRed\"\r\n              geometry={nodes.LEDLightRed.geometry}\r\n              material={materials.LEDRed}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ff3900\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\"/>}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 11, 0]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder> \r\n          </group>\r\n        }\r\n\r\n    \r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.76, 0.62, 0.03]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"linear_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.4, 0]} title=\"Linear Movable Mirror\" description=\"SM1ZP/M Translation Mount\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"linear_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n                  \r\n        <mesh\r\n          name=\"TranslateMirrorBase\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.TranslateMirrorBase.geometry}\r\n          material={materials.BlackParts}\r\n          position={[-1.88, 0.11, -0.01]}\r\n        />\r\n\r\n        <group\r\n          name=\"ThermalMirror\"\r\n          position={[-2.7, 0.82, -0.91]}\r\n          rotation={[0, -Math.PI / 2, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"heater\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.2, 0]} title=\"Heatable Mirror Stage\" description=\"Mirror Mounted on an Aluminum Rod\" />}\r\n          <mesh \r\n            name=\"Cylinder008\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008.geometry}\r\n            material={materials['Material.002']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#884422\" opacity={1.0}/>\r\n            )}\r\n          </mesh>\r\n          <mesh \r\n            name=\"Cylinder008_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_1.geometry}\r\n            material={materials['BlackParts.001']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"Cylinder008_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_2.geometry}\r\n            material={materials['ShinyParts.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_3\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_3.geometry}\r\n            material={materials['Alu.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_4\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_4.geometry}\r\n            material={materials['Mirror.002']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_5\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_5.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n        </group>\r\n\r\n        <group\r\n          name=\"TranslateMirrorBase\"\r\n          position={[-2.38, 0.11, -1.01]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('heater_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.2, 0]} title=\"Mirror Changing Stage\" description=\"PR01/M Rotation Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004.geometry}\r\n            material={materials.BlackParts}\r\n          >  \r\n            {props.selected.has('heater_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        \r\n        <group\r\n          name=\"RotaryStage\"\r\n          position={[-0.12, 0, 0.51]}\r\n          rotation={[0, -1.57, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('plate_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Glass Plate Rotation Stage\" description=\"PR01/M Rotation Stage\" />}\r\n          <mesh\r\n            name=\"PR01_M-Step001\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001'].geometry}\r\n            material={materials['BlackParts.004']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_1'].geometry}\r\n            material={materials['BlackParts.003']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_2'].geometry}\r\n            material={materials['ShinyParts.003']}\r\n          />\r\n        </group>\r\n\r\n        <mesh\r\n          name=\"BS_slimHolder001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder001.geometry}\r\n          material={materials.BlackParts}\r\n        />     \r\n\r\n        <mesh\r\n          name=\"BS_slimHolder\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder.geometry}\r\n          material={materials.BlackParts}\r\n          position={[0.64, 0, -0.66]}\r\n          rotation={[-Math.PI, 0.63, -Math.PI]}\r\n        />\r\n        \r\n        \r\n\r\n        <mesh\r\n          name=\"BaseMesh001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_1.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_2.geometry}\r\n          material={materials['BlackParts.004']}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_3.geometry}\r\n          material={materials['ShinyParts.004']}\r\n        />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/MI_230104.glb')\r\nexport default memo(Model, isEqual);\r\n","import MI_230201 from \"../../experiment/MichelsonInterferometer/MI_230201\";\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { OrbitControls, Environment } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst VirtualLayer = () => {\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: 'absolute',\r\n          background: 'linear-gradient(Teal, Black)',\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files='../hdri/autoshop.hdr' />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_230201\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n            showLED={appCtx.showLED}\r\n            socket={socketCtx.socket}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const theme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#01bd7d',\r\n        },\r\n    }\r\n})\r\n\r\nexport const themeLogin = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n    spacing: 2,\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__bP_tv\",\"windowHeader\":\"Window_windowHeader__3dGvs\",\"windowFooter\":\"Window_windowFooter__32UEl\",\"icon\":\"Window_icon__3b2y3\",\"iconClose\":\"Window_iconClose__1d70Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Temp\":\"HeaterCtrl_Temp__jBaKb\",\"Switch\":\"HeaterCtrl_Switch__3eN4Z\",\"Canvas1\":\"HeaterCtrl_Canvas1__2Nq0o\",\"Canvas2\":\"HeaterCtrl_Canvas2__1H7_e\",\"Select\":\"HeaterCtrl_Select__1DEUK\",\"TempSmall\":\"HeaterCtrl_TempSmall__2Dmo3\",\"SwitchTemp\":\"HeaterCtrl_SwitchTemp__GvZuy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__12YJt\",\"chatMain\":\"Chat_chatMain__2eTFB\",\"msgForm\":\"Chat_msgForm__3_C6o\",\"chatHandler\":\"Chat_chatHandler__321sW\",\"openChat\":\"Chat_openChat__3oUjr\",\"closeChat\":\"Chat_closeChat__GVHsw\",\"buttonBlink\":\"Chat_buttonBlink__3AMb2\"};"],"sourceRoot":""}