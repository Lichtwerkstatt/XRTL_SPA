{"version":3,"sources":["services/PopUpContext.js","components/UI/CSS/Settings.module.css","components/Console/Console.module.css","components/UI/CSS/Window.module.css","components/UI/CSS/RotaryCtrl.module.css","components/UI/CSS/NavBar.module.css","components/Login/Login.module.css","components/windows/InfoWindowContent.module.css","services/SocketContext.js","App.js","components/UI/experimentUI/NavBar.js","components/Console/Console.js","components/Chat/Chat.js","components/Login/Login.js","services/PopUp.module.css","services/AppContext.js","components/UI/templates/RadioButton.js","components/UI/templates/Switch.js","components/UI/CtrlUnits/BeamSplitterCtrl.js","components/UI/experimentUI/Window.js","components/assembly/BeamSplitter.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/templates/ESPCamSettings.js","components/UI/CtrlUnits/Settings.js","components/assembly/ESPCamStream.js","components/UI/templates/HeaterSettings.js","components/UI/CtrlUnits/HeaterCtrl.js","components/assembly/Heater.js","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/media/rotary_outline.png","components/assembly/Rotary.js","components/UI/CtrlUnits/LaserCtrl.js","components/assembly/Laser.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/Chat/ViewCamStream.js","components/assembly/CamWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_230201.js","components/UI/experimentUI/VirtualLayer.js","index.js","components/UI/templates/Theme.js","components/UI/CSS/HeaterCtrl.module.css","components/Chat/CSS/Chat.module.css"],"names":["PopUpContext","createContext","usePopUpContext","useContext","PopUpContextProvider","children","useState","showPopUp","setShowPopUp","text","setText","type","setType","socketCtx","useSocketContext","socket","on","error","errmsg","payload","toggleShowPopUp","newText","newType","Provider","value","open","autoHideDuration","onClose","event","reason","className","styles","popUp","variant","severity","module","exports","manager","Manager","autoConnect","SocketContext","jwt","require","SocketContextProvider","connected","setConnected","username","setUsername","URL","setURL","fontColor","setFontColor","appCtx","useAppContext","useEffect","Auth","color","emit","connect","e","addLog","disconnect","lastClosedComponent","controlId","userId","toogleLastComp","removeAllListeners","setNewURL","newURL","toggleConnection","accessCode","close","sub","code","component","iat","Date","now","token","sign","auth","setNewFont","newFont","helperEmit","App","process","title","NavBar","connectionStatusColor","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showCam","showInfoWindowColor","showInfoWindow","id","navbar","navMenuLaser","theme","popupId","popupState","bindTrigger","sx","borderRadius","bgcolor","marginTop","paddingLeft","icon","width","height","bindMenu","onClick","toggleShowLED","size","margin","toggleShowBeam","navMenu","toggleLogin","toggleAutoRotate","toggleShowTags","toggleCam","toggleShowInfoWindow","memo","isEqual","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","logs","map","index","consoleHandler","closeConsole","openConsole","Chat","showChat","setShowChat","message","setMessage","chat","setChat","sendMessage","preventDefault","chatContainer","chatMain","style","msgForm","marginLeft","paddingTop","htmlFor","onChange","target","onKeyPress","key","endAdornment","position","edge","label","chatHandler","closeChat","openChat","Login","connection","setConnection","setAccessCode","filter","createFilterOptions","handleLogin","String","showLogin","themeLogin","popupWindow","popupInner","fontSize","autoFocus","paddingRight","helperText","marginBottom","freeSolo","renderInput","params","newValue","inputValue","filterOptions","options","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","disableClearable","handleHomeEndKeys","getOptionLabel","renderOption","endIcon","AppContext","React","AppContextProvider","setLastClosedComponent","showVirtualLayer","setShowVirtualLayer","Set","selectedComps","setSelectedComps","setShowInfoWindow","setAutoRotate","showRotary","setShowRotary","setShowLogin","showBeam","setShowBeam","setShowTags","setShowCam","showLED","setShowLED","setLogs","toggleSelectedComp","compId","has","prev","x","add","toggleShowVirtualLayer","log","newVal","toggleChangeRotary","RadioButton","val","radioButton","setRadioButton","handleChange","a","status","FormControl","FormLabel","RadioGroup","row","aria-labelledby","name","FormControlLabel","disabled","online","control","Radio","SwiitchCtrl","switchValue","setSwitchValue","switchStatus","Box","m","FormGroup","Stack","direction","spacing","alignItems","Typography","start","Switch","checked","inputProps","end","BeamSplitterCtrl","switchWhiteIsOn","setSwitchWhiteStatus","switchRedIsOn","setSwitchRedStatus","selectionStatus","setSelectionStatus","onlineStatus","setOnlineStatus","redLED","isOn","whiteLED","busy","state","getStatus","ThemeProvider","mx","component2","pinhole","Window","lastChange","setLastChange","alertType","setAlertType","footer","setFooter","alert","setAlert","popupCtx","Footer","componentList","includes","time","getHours","getMinutes","getSeconds","getDay","getMonth","getFooter","handle","window","top","left","windowHeader","display","cursor","float","header","reset","windowContent","background","windowFooter","difH","difMin","timeNow","difSec","windowInfo","BeamSplitter","controlId2","controlLED","controlLED2","rotation","rotationTop","SliderCtrl","sliderValue","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","gutterBottom","mb","Slider","aria-label","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","fullWidth","InputLabel","command","ESPCamSettings","Settings","frameSize","switchIsOn","contrast","exposure","setSwitchStatus","setContrast","setExposure","settings","setSettings","setFrameSize","x1","x2","y1","y2","ctx","gray","data","uint8Arr","Uint8Array","binary","i","length","fromCharCode","base64String","btoa","img","Image","onload","canvas","document","getElementById","getContext","drawImage","this","src","IconButton","Canvas","constrast","circle","ESPCamStream","HeaterSettings","Temp","Canvas2","Button","startIcon","zIndex","averageTime","updateTime","HeaterCtrl","powerSwitch","setPowerSwitch","powerValue","setPowerValue","setting","temp","setTemp","setAverageTime","setUpdateTime","pwm","componentT","string","toFixed","Canvas1","Heater","controlIdHeater","controlIdThermistor","RotaryCtrl","enteredRotation","setEnteredRotation","setRotation","absolute","rotCW_Handler","Number","move","rotaryCtrl","CtrlLeft","CtrlRight","Rotary","Rotary_bg","LaserCtrl","setSwitch","vertical-align","Laser","KM100","controlIdBottom","controlIdTop","KM100_Background","rotationBottom","SM1ZP","SM1ZP_bg","MichelsonInterferometer","zero","innerHeight","innerWidth","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","selected","InfoWindowContent","mainWrapper","href","bgTeam","alt","InfoWindow","ViewCam","peerConnection","offer","peer","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","localDescription","ontrack","srcObject","streams","onicecandidate","candidate","addIceCandidate","RTCIceCandidate","catch","console","setAttribute","autoPlay","playsInline","RTCPeerConnection","iceServers","urls","ExperimentUILayer","CamWindow","toggleSelect","DescriptiveTag","Html","zIndexRange","borderLeft","description","Model","useRef","useGLTF","nodes","materials","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","Math","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","PlaneMesh","WhiteParts","PlaneMesh_1","LaserMesh","LaserMesh_1","SD5","Cylinder","Cylinder_1","LaserBeam","emissive","emissiveIntensity","Cylinder007","Cylinder007_1","LaserBeamBS","LEDLightWhite","LEDWhite","LEDLightRed","LEDRed","TranslateMirrorMesh005","TranslateMirrorMesh005_1","TranslateMirrorMesh005_2","TranslateMirrorBase","Cylinder008","Cylinder008_1","Cylinder008_2","Cylinder008_3","Cylinder008_4","Cylinder008_5","TranslateMirrorMesh004","TranslateMirrorMesh004_1","BS_slimHolder001","BS_slimHolder","BaseMesh001","BaseMesh001_1","BaseMesh001_2","BaseMesh001_3","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_230201","ReactDOM","render","createTheme","palette","mode","primary","light","main","dark","contrastText"],"mappings":"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","file":"static/js/main.b8645938.chunk.js","sourcesContent":["import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Settings_Canvas__3VcPS\",\"Settings\":\"Settings_Settings__2q_rW\",\"Cam\":\"Settings_Cam__288H_\",\"circle\":\"Settings_circle__37RlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__1dDWk\",\"consoleMain\":\"Console_consoleMain__SxxQK\",\"consoleHandler\":\"Console_consoleHandler__2f7jk\",\"openConsole\":\"Console_openConsole__1E2CK\",\"closeConsole\":\"Console_closeConsole__1Gp8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__eoZ4W\",\"windowHeader\":\"Window_windowHeader__2vHd6\",\"windowFooter\":\"Window_windowFooter__3xtgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1dFJs\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__1Oq_0\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__RbI2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2NK8m\",\"navMenu\":\"NavBar_navMenu__DRNeT\",\"navMenuLaser\":\"NavBar_navMenuLaser__1OP1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1DZpm\",\"close\":\"Login_close__jc06k\",\"popupWindow\":\"Login_popupWindow__2XsJg\",\"popupInner\":\"Login_popupInner__1U9Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__345Fv\"};","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const Auth = (color) => {\r\n      setFontColor(color);\r\n      socket.emit('newUserInfo', username)\r\n    }\r\n\r\n    const connect = (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    socket.on('Auth', Auth);\r\n\r\n    if (appCtx.lastClosedComponent === 'screen') {\r\n      socket.emit(\"leave stream room\", { controlId: 'screen', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'heater') {\r\n      socket.emit('leave stream room', { controlId: 'heater', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'Cam_1') {\r\n      socket.emit('watcher disconnect');\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('Auth', Auth)\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username, accessCode) => {\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        code: accessCode,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      //secure: true, rejectUnauthorized: false}\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\r\nimport { MdOutlineScreenRotation, MdInfoOutline } from 'react-icons/md'\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport { MenuItem, Menu, ThemeProvider, IconButton, Tooltip } from '@mui/material';\r\nimport { ImConnection } from 'react-icons/im'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa'\r\n//import { BsBox } from 'react-icons/bs'\r\nimport { Icon } from '@iconify/react';\r\nimport { memo, Fragment } from 'react'\r\nimport { isEqual } from 'lodash';\r\nimport { theme } from './../templates/Theme'\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let autoRotateColor = '';\r\n    if (appCtx.autoRotate) { autoRotateColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n\r\n    return <div id='navbar' className={styles.navbar} >\r\n        <h1>XR TwinLab</h1>\r\n        <div className={styles.navMenuLaser}>\r\n            <h3>Overlay:</h3>\r\n            <ThemeProvider theme={theme} >\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n                    {(popupState) => (\r\n                        <Fragment>\r\n                            <IconButton variant=\"contained\" {...bindTrigger(popupState)} sx={{\r\n                                borderRadius: 1,\r\n                                color: 'black',\r\n                                ':hover': {\r\n                                    bgcolor: 'darkgreen',\r\n                                    color: '#00ffa8',\r\n                                },\r\n                                marginTop: '-2%',\r\n                                paddingLeft: 20\r\n\r\n                            }}>\r\n                                <Icon icon=\"mdi:led-off\" width=\"27\" height=\"27\" />\r\n                            </IconButton>\r\n                            <Menu {...bindMenu(popupState)}  >\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('none');\r\n                                }} >None</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('white');\r\n                                }}>White</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowLED('red');\r\n                                }}>Red</MenuItem>\r\n                            </Menu>\r\n                        </Fragment>\r\n                    )}\r\n                </PopupState>\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n                    {(popupState) => (\r\n                        <Fragment>\r\n                            <IconButton variant=\"contained\" size='25' sx={{\r\n                                borderRadius: 1,\r\n                                color: 'black',\r\n                                ':hover': {\r\n                                    bgcolor: 'darkgreen',\r\n                                    color: '#00ffa8',\r\n                                },\r\n                                marginTop: '-1%',\r\n                                paddingLeft: 20,\r\n                                margin: 'auto'\r\n                            }}  {...bindTrigger(popupState)}>\r\n                                <GiLaserWarning />\r\n                            </IconButton>\r\n                            <Menu {...bindMenu(popupState)}>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('on');\r\n                                }} >On</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('off');\r\n                                }}>Off</MenuItem>\r\n                                <MenuItem onClick={() => {\r\n                                    popupState.close();\r\n                                    appCtx.toggleShowBeam('split');\r\n                                }}>Beamsplitter</MenuItem>\r\n                            </Menu>\r\n                        </Fragment>\r\n                    )}\r\n                </PopupState>\r\n            </ThemeProvider>\r\n        </div>\r\n        <div className={styles.navMenu}>\r\n            <ul>\r\n                <Tooltip title='Connnection'>\r\n                    <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29} color={connectionStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                {/*                 <Tooltip title='2D model'>\r\n                    <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} /></li>\r\n                </Tooltip> */}\r\n\r\n                <Tooltip title='Rotation'>\r\n                    <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Labels'>\r\n                    <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Webcam'>\r\n                    <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Information'>\r\n                    <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                </Tooltip>\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\nexport default memo(NavBar, isEqual)","import { useAppContext } from '../../services/AppContext'\r\nimport { RiTerminalBoxFill } from 'react-icons/ri'\r\nimport styles from './Console.module.css'\r\nimport { useState, memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Console = (props) => {\r\n  const [showConsole, setShowConsole] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + ' ' + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}>\r\n        <span>\r\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { theme } from '../../components/UI/templates/Theme';\r\nimport { useEffect, useState, memo } from 'react'\r\nimport styles from './CSS/Chat.module.css'\r\nimport { ImBubble } from 'react-icons/im'\r\nimport { MdSend } from 'react-icons/md'\r\nimport { isEqual } from 'lodash';\r\nimport { ThemeProvider, InputAdornment, IconButton, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nconst Chat = () => {\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const message = (payload) => {\r\n      setChat([...chat, payload]);\r\n    }\r\n\r\n    socketCtx.socket.on('message', message);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('message', message);\r\n    }\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\r\n    setMessage('');\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\r\n    setShowChat(!showChat);\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + ' ' + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm}>\r\n        <ThemeProvider theme={theme}>\r\n\r\n          <FormControl sx={{ marginLeft: -4, width: 3 / 3, paddingTop: 1 }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">Message  </InputLabel>\r\n            <OutlinedInput\r\n              onChange={handleChange}\r\n              onKeyPress={(e) => { if (e.key === 'Enter') { sendMessage(e); } }}\r\n              value={message}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={sendMessage}\r\n                    edge=\"end\"\r\n                  >\r\n                    <MdSend />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Message\"\r\n            />\r\n          </FormControl>\r\n        </ThemeProvider>\r\n      </form>\r\n      <div className={styles.chatHandler + ' ' + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);","import { Autocomplete, TextField, ThemeProvider, Button, IconButton } from '@mui/material';\r\nimport HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { themeLogin } from '../../components/UI/templates/Theme';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './Login.module.css'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'https://xrtl.uni-jena.de' }]\r\n    const [connection, setConnection] = useState(null);\r\n    const [username, setUsername] = useState('');\r\n    const [accessCode, setAccessCode] = useState('');\r\n    const filter = createFilterOptions();\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n\r\n\r\n    const handleLogin = () => {\r\n        if (username !== '' && accessCode !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection.title), String(username));\r\n                socketCtx.toggleConnection(String(username), String(accessCode));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const handleAccessCode = (event) => {\r\n        setAccessCode(event.target.value);\r\n    };\r\n\r\n\r\n    const autoCompleteHandle = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setConnection({ title: newValue, });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setConnection({ title: newValue.inputValue, });\r\n        } else {\r\n            setConnection(newValue);\r\n        }\r\n    }\r\n\r\n    const filterOption = (options, params) => {\r\n        const filtered = filter(options, params);\r\n        const { inputValue } = params;\r\n        const isExisting = options.some((option) => inputValue === option.title);\r\n        if (inputValue !== '' && !isExisting) {\r\n            filtered.push({ inputValue, title: `Add '${inputValue}'`, });\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    const getLabel = (option) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n        }\r\n        if (option.inputValue) {\r\n            return option.inputValue;\r\n        }\r\n        return option.title;\r\n    }\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={themeLogin}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Login</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        variant='outlined'\r\n                        label='Username '\r\n                        value={username}\r\n                        onChange={handleChange}\r\n                        onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                        style={{ marginLeft: '4%', width: '50%', paddingRight: '25%' }}\r\n                        error={username === ''}\r\n                        helperText={username === '' ? 'Enter your username!' : ' '}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant='outlined'\r\n                        label='Access code '\r\n                        value={accessCode}\r\n                        onChange={handleAccessCode}\r\n                        onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                        style={{ marginLeft: '-20%', width: '40%' }}\r\n                        error={accessCode === ''}\r\n                        helperText={accessCode === '' ? 'Enter the access code!' : ' '}\r\n                    />\r\n\r\n                    <Autocomplete sx={{ marginLeft: '4%', marginTop: '3%', width: '50%', marginBottom: 10 }}\r\n                        value={connection}\r\n                        freeSolo\r\n                        renderInput={(params) => (\r\n                            <TextField {...params} label='Choose server address' />)}\r\n                        onChange={autoCompleteHandle}\r\n                        onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                        filterOptions={filterOption}\r\n                        selectOnFocus\r\n                        clearOnBlur\r\n                        disableClearable\r\n                        handleHomeEndKeys\r\n                        options={connectionOption}\r\n                        getOptionLabel={getLabel}\r\n                        renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                    />\r\n\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: '20%', height: '15%' }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__IolRq\"};","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [lastClosedComponent, setLastClosedComponent] = useState('');\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showRotary, setShowRotary] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showBeam, setShowBeam] = useState('off');\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [showLED, setShowLED] = useState('none');\r\n  const [logs, setLogs] = useState([]);\r\n\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      setLastClosedComponent(compId);\r\n    }\r\n  };\r\n\r\n  const toogleLastComp = () => {\r\n    setLastClosedComponent('');\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('Cam_1')\r\n  }\r\n\r\n  const toggleShowLED = (newVal) => {\r\n    setShowLED(newVal);\r\n  }\r\n\r\n  const toggleShowBeam = (newVal) => {\r\n    setShowBeam(newVal);\r\n  }\r\n\r\n  const toggleChangeRotary = () => {\r\n\r\n    setShowBeam(!showRotary);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin,\r\n        toggleCam,\r\n        showCam,\r\n        lastClosedComponent,\r\n        toogleLastComp,\r\n        showLED,\r\n        toggleShowLED,\r\n        setShowRotary,\r\n        toggleChangeRotary\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { FormControl, RadioGroup, FormControlLabel, Radio, FormLabel } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst RadioButton = (props) => {\r\n    const [radioButton, setRadioButton] = useState(props.val);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    const handleChange = async (event) => {\r\n        setRadioButton(event.target.value)\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: event.target.value,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set position on \" + props.component + \" to \" + radioButton)\r\n    }\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">{props.title}</FormLabel>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                value={props.val}\r\n                onChange={handleChange}\r\n            >\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'none'} control={<Radio />} label=\"None\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'splitter'} control={<Radio />} label=\"Beam splitter\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'pinhole'} control={<Radio />} label=\"Pinhole\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'rled'} control={<Radio />} label=\"Red LED\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'wled'} control={<Radio />} label=\"White LED\" />\r\n\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default RadioButton;","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    try {\r\n        props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n    } catch (error) { }\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n            color: socketCtx.fontColor,\r\n\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 250, m: 2 }}>\r\n            <FormGroup>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { theme } from '../templates/Theme.js'\r\nimport RadioButton from '../templates/RadioButton';\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from '../templates/Switch';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst BeamSplitterCtrl = (props) => {\r\n    const [switchWhiteIsOn, setSwitchWhiteStatus] = useState(false);\r\n    const [switchRedIsOn, setSwitchRedStatus] = useState(false);\r\n    const [selectionStatus, setSelectionStatus] = useState(80);\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.redLED) {\r\n                setSwitchRedStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.whiteLED) {\r\n                setSwitchWhiteStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.component) {\r\n                (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n                setSelectionStatus(payload.status.state)\r\n            }\r\n            //console.log(\"Status of settings:   \", payload)\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.redLED,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.whiteLED,\r\n            getStatus: true\r\n        })\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps      \r\n    }, [socketCtx.socket]);\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ mx: 1 }}>\r\n                <RadioButton component={props.component} component2={props.pinhole} online={onlineStatus} val={selectionStatus} option=\"state\" />\r\n                <Switch component={props.whiteLED} switchStatus={switchWhiteIsOn} online={onlineStatus} start='LED white Off' end='On' option='switch' />\r\n                <Switch component={props.redLED} switchStatus={switchRedIsOn} online={onlineStatus} start='LED red Off' end='On' option='switch' />\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default BeamSplitterCtrl\r\n","import { IoReloadOutline, IoInformationCircleOutline } from 'react-icons/io5'\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { usePopUpContext } from '../../../services/PopUpContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/Window.module.css';\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { memo, useEffect } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { isEqual } from 'lodash';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Window = (props) => {\r\n  const [lastChange, setLastChange] = useState(props.lastChange);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState('Initializing... ');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.footer) {\r\n      setFooter('empty');\r\n    }\r\n\r\n    const Footer = (payload) => {\r\n      if (props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.on('footer', Footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('footer', Footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n\r\n    if (props.id === \"Cam_1\") {\r\n      appCtx.toggleCam();\r\n    }\r\n\r\n    if (props.id === \"info\") {\r\n      appCtx.toggleShowInfoWindow();\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.componentList[0],\r\n      reset: true\r\n    })\r\n\r\n    if (props.componentList[1]) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.componentList[1],\r\n        reset: true\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 50px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={handleReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={handleCloseWindow}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: 'url(' + props.background + ')',\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {footer !== 'empty' && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={handleInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);","import BeamSplitterCtrl from \"../UI/CtrlUnits/BeamSplitterCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\nconst BeamSplitter = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId, props.controlId2, props.controlLED, props.controlLED2]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"190px\"\r\n      width=\"360px\"\r\n\r\n    >\r\n      <BeamSplitterCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlId}\r\n        pinhole={props.controlId2}\r\n        redLED={props.controlLED}\r\n        whiteLED={props.controlLED2}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default BeamSplitter;\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderValue);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    setSliderPos(newValue)\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: newValue,\r\n      color: socketCtx.fontColor,\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 300, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={90}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState(props.selectValue);\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue.props.value,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set selected \" + props.component + \" with \" + selectValue)\r\n    }\r\n    if (props.title === 'Resolution') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={10}>XGA (1024x768)</MenuItem>\r\n                <MenuItem value={9}>SVGA (800x600)</MenuItem>\r\n                <MenuItem value={8}>VGA (640x480)</MenuItem>\r\n                <MenuItem value={5}>QVGA (320x240)</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n    else if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={5000}>5</MenuItem>\r\n                <MenuItem value={10000}>10</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\r\nimport { FormControl, InputLabel, Box } from '@mui/material';\r\nimport SelectItem from './SelectItem'\r\n\r\nconst SelectCtrl = (props) => {\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >{props.title}</InputLabel>\r\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} selectValue={props.selectValue} />\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\nexport default SelectCtrl;","import { ThemeProvider } from '@mui/material/styles';\r\nimport styles from '../CSS/Settings.module.css';\r\nimport { theme } from '../templates/Theme.js';\r\nimport Slider from '../templates/SliderCtrl';\r\nimport Switch from '../templates/Switch';\r\nimport Select from '../templates/Select';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst ESPCamSettings = (props) => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Settings}>\r\n                <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n                <Select title='Resolution' component={props.component} online={props.online} option='frameSize' selectValue={props.frameSize} />\r\n                <Switch component={props.component} switchStatus={props.switchIsOn} online={props.online} start='Color' end='Gray' option='gray' />\r\n                <Slider title='Contrast' component={props.component} online={props.online} sliderValue={props.contrast} min={-2} max={2} option='contrast' />\r\n                <Slider title='Exposure' component={props.component} online={props.online} sliderValue={props.exposure} min={0} max={500} option='exposure' />\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default ESPCamSettings;","import { useSocketContext } from '../../../services/SocketContext';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport styles from '../CSS/Settings.module.css'\r\nimport { theme } from '../templates/Theme.js';\r\nimport { useState, useEffect } from 'react';\r\nimport { IconButton } from '@mui/material';\r\nimport ESPCamSettings from '../templates/ESPCamSettings';\r\n\r\nconst Settings = (props) => {\r\n    const [switchIsOn, setSwitchStatus] = useState(false);\r\n    const [contrast, setContrast] = useState(0);\r\n    const [exposure, setExposure] = useState(0);\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [settings, setSettings] = useState(true);\r\n    const [frameSize, setFrameSize] = useState(0);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    const hiddenSetting = () => {\r\n        setSettings(!settings);\r\n        if (settings) {\r\n            document.getElementById('ScreenCanvas').style.height = '400px'\r\n            document.getElementById('ScreenCanvas').style.width = '800px'\r\n            document.getElementById('circle').style.left = '400px'\r\n\r\n        } else {\r\n\r\n            document.getElementById('ScreenCanvas').style.height = '400px'\r\n            document.getElementById('ScreenCanvas').style.width = '600px'\r\n            document.getElementById('circle').style.left = '200px'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        var x1, x2, y1, y2;\r\n        var ctx;\r\n\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                setSwitchStatus(payload.status.gray)\r\n                setExposure(payload.status.exposure)\r\n                setContrast(payload.status.contrast)\r\n                setFrameSize(payload.status.frameSize)\r\n                //console.log('Status of settings:   ', payload)\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                var uint8Arr = new Uint8Array(payload.data);\r\n                var binary = '';\r\n                for (var i = 0; i < uint8Arr.length; i++) {\r\n                    binary += String.fromCharCode(uint8Arr[i]);\r\n                }\r\n                var base64String = window.btoa(binary);\r\n\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    var canvas = document.getElementById('ScreenCanvas');\r\n                    if (canvas != null && settings) {\r\n                        ctx = canvas.getContext('2d');\r\n                        x1 = 0;\r\n                        y1 = 0;\r\n                        x2 = 600;\r\n                        y2 = 400;\r\n                        ctx.drawImage(this, x1, y1, x2, y2);\r\n                    } else {\r\n                        ctx = canvas.getContext('2d');\r\n                        x1 = 0;\r\n                        y1 = 0;\r\n                        x2 = 800;\r\n                        y2 = 400;\r\n                        ctx.drawImage(this, x1, y1, x2, y2);\r\n                    }\r\n                };\r\n                img.src = 'data:image/jpg;base64,' + base64String;\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('join stream room', {\r\n            controlId: props.component,\r\n            userId: socketCtx.username\r\n        });\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Settings}>\r\n                <IconButton onClick={hiddenSetting}  >\r\n                    <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                </IconButton>\r\n\r\n                <div className={styles.Canvas}>\r\n                    <canvas id='ScreenCanvas' width={'600px'} height={'400px'} />\r\n                </div>\r\n\r\n                {settings && <ESPCamSettings component={props.component} online={onlineStatus} constrast={contrast} exposure={exposure} frameSize={frameSize} switchIsOn={switchIsOn} />}\r\n            </div>\r\n\r\n            <div id='circle' className={styles.circle} />\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Settings;\r\n","import Settings from '../UI/CtrlUnits/Settings';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst ESPCamStream = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='1000px'\r\n      height='430px'\r\n    >\r\n      <Settings\r\n        component={props.controlId}\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default ESPCamStream;","import DeviceThermostatOutlinedIcon from '@mui/icons-material/DeviceThermostatOutlined';\r\nimport { Button } from '@mui/material';\r\nimport styles from '../CSS/HeaterCtrl.module.css';\r\nimport Select from './Select'\r\n\r\nconst HeaterSettings = (props) => {\r\n\r\n    return (\r\n        <div className={styles.Temp}>\r\n            <div className={styles.Canvas2}>\r\n                <Button sx={{ fontSize: 17, marginLeft: -34, marginTop: -4, marginBottom: 10 }} startIcon={<DeviceThermostatOutlinedIcon />}>Gauge settings </Button>\r\n                <div className={styles.Select}>\r\n                    <Select sx={{ zIndex: 1500, marginBottom: -10 }} title='Average time (ms)' component={props.component} online={props.online} option='averageTime' selectValue={props.averageTime} />\r\n                    <Select title='Update time (s)' component={props.component} online={props.online} option='updateTime' selectValue={props.updateTime} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default HeaterSettings;","import { ThemeProvider, Button, IconButton, Typography } from '@mui/material';\r\nimport MicrowaveOutlinedIcon from '@mui/icons-material/MicrowaveOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport styles from '../CSS/HeaterCtrl.module.css';\r\nimport { theme } from '../templates/Theme.js';\r\nimport Slider from '../templates/SliderCtrl';\r\nimport { useState, useEffect } from 'react';\r\nimport Switch from '../templates/Switch'\r\nimport HeaterSettings from '../templates/HeaterSettings'\r\n\r\nconst HeaterCtrl = (props) => {\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [powerSwitch, setPowerSwitch] = useState(false);\r\n    const [powerValue, setPowerValue] = useState(0);\r\n    const [setting, setSettings] = useState(false);\r\n    const [temp, setTemp] = useState('-°C');\r\n    const [averageTime, setAverageTime] = useState(0);\r\n    const [updateTime, setUpdateTime] = useState(0);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    const hiddenSetting = () => {\r\n        setSettings(!setting);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                setPowerSwitch(payload.status.isOn)\r\n                setPowerValue(payload.status.pwm)\r\n\r\n               // console.log(\"Status  \", payload)\r\n            }\r\n\r\n            if (payload.controlId === props.componentT) {\r\n                setAverageTime(payload.status.averageTime);\r\n                setUpdateTime(payload.status.updateTime);\r\n                // console.log(\"Status  Thermistor\", payload)\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.componentT) {\r\n                var string = payload.data.data;\r\n                try { string = string.toFixed(1) + \" °C\" } catch (e) { string = '-°C' }\r\n                setTemp(string);\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.componentT,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('join stream room', {\r\n            controlId: props.componentT,\r\n            userId: socketCtx.username\r\n        });\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Temp}>\r\n                <Typography id='temp' variant='h2'>{temp}</Typography>\r\n                <IconButton onClick={hiddenSetting}  >\r\n                    <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                </IconButton>\r\n            </div>\r\n            <div className={styles.Canvas1}>\r\n                <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                <Slider title='PowerSwitch' component={props.component} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n\r\n            </div>\r\n            <div className={styles.Switch} >\r\n                <Switch component={props.component} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option='switch' />\r\n            </div>\r\n            {setting && <HeaterSettings online={true} component={props.componentT} updateTime={updateTime} averageTime={averageTime} />}\r\n        </ThemeProvider>\r\n    )\r\n\r\n}\r\nexport default HeaterCtrl;\r\n","import HeaterCtrl from '../UI/CtrlUnits/HeaterCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Heater = (props) => {\r\n\r\n    return (\r\n        <Window\r\n            id={props.id}\r\n            componentList={[props.controlIdHeater, props.controlIdThermistor]}\r\n            header={props.title}\r\n            top={props.top}\r\n            left={props.left}\r\n            height='340px'\r\n            width='673px'\r\n        >\r\n            <HeaterCtrl\r\n                component={props.controlIdHeater}\r\n                componentT={props.controlIdThermistor}\r\n            />\r\n        </Window>\r\n    )\r\n}\r\nexport default Heater;","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.component,\r\n        move: direction,\r\n        color: socketCtx.fontColor,\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Last change by: ' + socketCtx.username,\r\n        controlId: props.component\r\n      });\r\n\r\n      /*  if (rotation > 5000 || rotation > -5000) {\r\n         appCtx.toggleChangeRotary();\r\n       } else {\r\n         appCtx.toggleChangeRotary();\r\n       } */\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    setEnteredRotation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","export default __webpack_public_path__ + \"static/media/rotary_outline.c6f9b7e7.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Rotary_bg from './media/rotary_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Rotary = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={Rotary_bg}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top='10'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default Rotary;\r\n","import { ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { GiLaserWarning } from \"react-icons/gi\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { theme } from '../templates/Theme.js';\r\nimport Switch from '../templates/Switch';\r\nimport { Box } from '@mui/material';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <div className=\"switchOnOff\">\r\n      <ThemeProvider theme={theme} >\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n          <Switch component={props.component} icon={document.getElementById(\"icon\")} online={onlineStatus} switchStatus={switchIsOn} start='Off' end='On' option=\"switch\" />\r\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\nexport default LaserCtrl\r\n","import LaserCtrl from '../UI/CtrlUnits/LaserCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Laser = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='200px'\r\n      width='300px'\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n        top='0'\r\n        left='0'\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst KM100 = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlIdBottom, props.controlIdTop]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      \r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport SM1ZP_bg from './media/linear_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst SM1ZP = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={SM1ZP_bg}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import BeamSplitter from '../../assembly/BeamSplitter';\r\nimport ESPCam from '../../assembly/ESPCamStream';\r\nimport Heater from '../../assembly/Heater';\r\nimport Rotary from '../../assembly/Rotary';\r\nimport Laser from '../../assembly/Laser';\r\nimport KM100 from '../../assembly/KM100';\r\nimport SM1ZP from '../../assembly/SM1ZP';\r\n\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = 'Initializing...'\r\n  var zero = '0'\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has('KM100_1') && (\r\n        <KM100\r\n          title='Reference Mirror'\r\n          id={'KM100_1'}\r\n          controlIdTop={'KM100_top_1'}\r\n          controlIdBottom={'KM100_bottom_1'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has('linear_1') && (\r\n        <SM1ZP\r\n          title='Linear Movable Mirror'\r\n          controlId={'linear_1'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Rotary stage plate*/}\r\n      {props.selected.has('plate_rotation') && (\r\n        <Rotary\r\n          title='Glass Plate Rotation Stage'\r\n          controlId={'plate_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Rotary stage Measurement Mirror*/}\r\n      {props.selected.has('heater_rotation') && (\r\n        <Rotary\r\n          title='Mirror Changing Stage'\r\n          controlId={'heater_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topHighMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has('greenlaser_1') && (\r\n        <KM100\r\n          title='Laser Alignment'\r\n          id={'greenlaser_1'}\r\n          controlIdTop={'greenlaser_top_1'}\r\n          controlIdBottom={'greenlaser_bottom_1'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has('greenlaserPower_1') && (\r\n        <Laser\r\n          title='Power Supply'\r\n          id={'greenlaserPower_1'}\r\n          controlId={'greenlaser_1'}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has('screen') && (\r\n        <ESPCam\r\n          title='Screen'\r\n          controlId={'screen'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n      {/* Heater */}\r\n      {props.selected.has('heater') && (\r\n        <Heater\r\n          title='Heatable Mirror Stage'\r\n          id={'heater'}\r\n          controlIdHeater={'heater'}\r\n          controlIdThermistor={'thermistor'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n\r\n      {/* Beam splitter */}\r\n      {props.selected.has('experimentSelection') && (\r\n        <BeamSplitter\r\n          title='Multi Component Selection'\r\n          controlId={'experimentSelection'}\r\n          controlId2={'pinhole'}\r\n          controlLED={'redLED'}\r\n          controlLED2={'whiteLED'}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={halfWidth}\r\n        />\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default MichelsonInterferometer;","export default __webpack_public_path__ + \"static/media/xrtl_team.519a843e.png\";","import styles from \"./InfoWindowContent.module.css\"\r\nimport bgTeam from \"../media/images/xrtl_team.png\"\r\n\r\nconst InfoWindowContent = (props) => {\r\n  return (\r\n    <div>\r\n\r\n      <div className={styles.mainWrapper}      >\r\n        Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\r\n        <p>\r\n          This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n        </p>\r\n        <p>\r\n          Best! Clara, Falko, Jari and Johannes\r\n        </p>\r\n      </div>\r\n      <img className={styles.img} src={bgTeam} alt='XRTL Team' />\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;\r\n","import Window from \"../UI/experimentUI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            id='info'\r\n            top=\"10\"\r\n            left=\"20\"\r\n            width=\"30\"\r\n            height=\"80\"\r\n            footer={'empty'}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import { useSocketContext } from '../../services/SocketContext'\r\nimport { useEffect } from 'react';\r\n\r\nconst ViewCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        var peerConnection;\r\n\r\n        const offer = (payload) => {\r\n            peerConnection = props.peer;\r\n            peerConnection\r\n                .setRemoteDescription(payload.data)\r\n                .then(() => peerConnection.createAnswer())\r\n                .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n                .then(() => socketCtx.socket.emit('answer', { id: payload.id, data: peerConnection.localDescription }))\r\n\r\n            peerConnection.ontrack = (event) => {\r\n                document.getElementById('video').srcObject = event.streams[0];\r\n            }\r\n\r\n            peerConnection.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socketCtx.socket.emit('candidate', { id: payload.id, data: event.candidate })\r\n                }\r\n            }\r\n        }\r\n\r\n        const candidate = (payload) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(payload.data))\r\n                .catch(e => console.error(e))\r\n        }\r\n\r\n        document.getElementById('video').setAttribute('style', 'transform: rotate(180deg)')\r\n\r\n\r\n        socketCtx.socket.emit(\"join stream room\", {\r\n            id: props.id,\r\n            userId: socketCtx.username,\r\n            controlId: 'Cam'\r\n        });\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        });\r\n\r\n        socketCtx.socket.emit('viewer', props.component)\r\n\r\n        socketCtx.socket.on('offer', offer)\r\n\r\n        socketCtx.socket.on('candidate', candidate)\r\n\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('offer', offer)\r\n            socketCtx.socket.removeAllListeners('candidate', candidate)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <video className=\"video\" id='video' autoPlay playsInline width=\"640px\" height=\"480px\" ></video>\r\n        </div>\r\n    );\r\n};\r\nexport default ViewCam;\r\n","import Window from \"../UI/experimentUI/Window\";\r\nimport ViewCam from \"../Chat/ViewCamStream\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const config = { iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }] } //stun:stun.stunprotocol.org\r\n    var peerConnection = new RTCPeerConnection(config);\r\n\r\n    return (\r\n        <Window\r\n            id=\"Cam_1\"\r\n            componentList={['Cam_1']}\r\n            header=\"Top view of experiment\"\r\n            top=\"200\"\r\n            left=\"250\"\r\n            width=\"640px\"\r\n            footer={'empty'}\r\n        >\r\n            <ViewCam\r\n                component=\"Cam_1\"\r\n                peer={peerConnection}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;\r\n","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport CamWindow from \"../../assembly/CamWindow\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\"\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.setNewFont(color);\r\n      setConnection(true);\r\n    }\r\n    socketCtx.socket.on('AuthFailed', () => {\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    })\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '30px',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '150px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from 'react';\r\nimport { useGLTF, Box, Cylinder} from '@react-three/drei';\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport {isEqual} from 'lodash';\r\n\r\nexport function Model(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF(\"/model/MI_230104.glb\");\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* Glass Materials need to be generated here*/}\r\n          {/* Beam Splitter cube */}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 1 */}\r\n          <Box\r\n            position={[-0.45, 0.55, 0.58]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#9999ff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 2 */}\r\n          <Box\r\n            position={[0.2, 0.55, 0.44]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#99ff99\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Beam Splitter slim is defined in 'off' Overlay*/}\r\n\r\n          {/* Lens */}\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[0,0,0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"KM100_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 1.3, 0.9]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"KM100_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}          \r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"screen\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, -1.3]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n            material={materials.WhiteParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaser_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.6, 1.3, 0]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"greenlaser_1\") ? (\r\n                <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n              )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n       </group>\r\n\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaserPower_1\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.4, 1.1, -0.8]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"greenlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {\r\n          (props.showBeam === 'off') &&\r\n          <group>\r\n            <group\r\n                name=\"BS_slim\"\r\n                position={[0.64, 0, -0.52]}\r\n                onPointerDown={(e) => {\r\n                  e.stopPropagation();\r\n                  props.toggleSelect(\"experimentSelection\");\r\n                }}\r\n              >\r\n                {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n                <mesh\r\n                  name=\"Cylinder\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder.geometry}\r\n                  material={materials.BlackParts}\r\n                >\r\n                  {props.selected.has(\"experimentSelection\") ? (\r\n                    <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                  ) : (\r\n                    <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                  )}\r\n                </mesh>\r\n                <mesh\r\n                  name=\"Cylinder_1\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder_1.geometry}\r\n                  material={materials.ShinyParts}\r\n                />\r\n              </group>\r\n              <Cylinder\r\n                position={[0.64, 0.68, -0.66]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n          </group>\r\n        }\r\n        {\r\n          (props.showBeam === 'on') &&\r\n          <group>\r\n            <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group> \r\n        }\r\n\r\n        {\r\n          (props.showBeam === 'split') && \r\n          <group>\r\n            <mesh\r\n              name=\"LaserBeamBS\"\r\n              geometry={nodes.LaserBeamBS.geometry}\r\n              material={materials.Laser}\r\n              position={[-0.53, 0.68, -0.13]}\r\n              rotation={[0, 0, -Math.PI / 2]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <mesh\r\n              name=\"LaserBeam\"\r\n              castShadow\r\n              receiveShadow\r\n              geometry={nodes.LaserBeam.geometry}\r\n              material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh> \r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0, 0, 0]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n              <Cylinder\r\n                position={[0, 0.68, -0.14]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group>  \r\n        }\r\n\r\n        {(props.showLED === 'none') &&\r\n        <mesh/>\r\n        }\r\n\r\n        {(props.showLED === 'white') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightWhite\"\r\n              geometry={nodes.LEDLightWhite.geometry}\r\n              material={materials.LEDWhite}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ffffff\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n          </group>\r\n        }\r\n\r\n        {(props.showLED === 'red') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightRed\"\r\n              geometry={nodes.LEDLightRed.geometry}\r\n              material={materials.LEDRed}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ff3900\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder> \r\n          </group>\r\n        }\r\n\r\n    \r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.76, 0.62, 0.03]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"linear_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.8, 0]} title=\"Linear Movable Mirror\" description=\"SM1ZP/M Translation Mount\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"linear_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n                  \r\n        <mesh\r\n          name=\"TranslateMirrorBase\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.TranslateMirrorBase.geometry}\r\n          material={materials.BlackParts}\r\n          position={[-1.88, 0.11, -0.01]}\r\n        />\r\n\r\n        <group\r\n          name=\"ThermalMirror\"\r\n          position={[-2.7, 0.82, -0.91]}\r\n          rotation={[0, -Math.PI / 2, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"heater\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Heatable Mirror Stage\" description=\"Mirror Mounted on an Aluminum Rod\" />}\r\n          <mesh \r\n            name=\"Cylinder008\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008.geometry}\r\n            material={materials['Material.002']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#884422\" opacity={1.0}/>\r\n            )}\r\n          </mesh>\r\n          <mesh \r\n            name=\"Cylinder008_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_1.geometry}\r\n            material={materials['BlackParts.001']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"Cylinder008_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_2.geometry}\r\n            material={materials['ShinyParts.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_3\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_3.geometry}\r\n            material={materials['Alu.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_4\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_4.geometry}\r\n            material={materials['Mirror.002']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_5\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_5.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n        </group>\r\n\r\n        <group\r\n          name=\"TranslateMirrorBase\"\r\n          position={[-2.38, 0.11, -1.01]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('heater_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Mirror Changing Stage\" description=\"PR01/M Rotation Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004.geometry}\r\n            material={materials.BlackParts}\r\n          >  \r\n            {props.selected.has('heater_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        \r\n        <group\r\n          name=\"RotaryStage\"\r\n          position={[-0.12, 0, 0.51]}\r\n          rotation={[0, -1.57, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('plate_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Glass Plate Rotation Stage\" description=\"PR01/M Rotation Stage\" />}\r\n          <mesh\r\n            name=\"PR01_M-Step001\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001'].geometry}\r\n            material={materials['BlackParts.004']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_1'].geometry}\r\n            material={materials['BlackParts.003']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_2'].geometry}\r\n            material={materials['ShinyParts.003']}\r\n          />\r\n        </group>\r\n\r\n        <mesh\r\n          name=\"BS_slimHolder001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder001.geometry}\r\n          material={materials.BlackParts}\r\n        />     \r\n\r\n        <mesh\r\n          name=\"BS_slimHolder\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder.geometry}\r\n          material={materials.BlackParts}\r\n          position={[0.64, 0, -0.66]}\r\n          rotation={[-Math.PI, 0.63, -Math.PI]}\r\n        />\r\n        \r\n        \r\n\r\n        <mesh\r\n          name=\"BaseMesh001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_1.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_2.geometry}\r\n          material={materials['BlackParts.004']}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_3.geometry}\r\n          material={materials['ShinyParts.004']}\r\n        />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/MI_230104.glb')\r\nexport default memo(Model, isEqual);\r\n","import MI_230201 from \"../../experiment/MichelsonInterferometer/MI_230201\";\r\nimport { OrbitControls, Environment } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: 'absolute',\r\n          background: 'linear-gradient(Teal, Black)',\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files='../hdri/autoshop.hdr' />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_230201\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n            showLED={appCtx.showLED}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const theme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#01bd7d',\r\n        },\r\n    }\r\n})\r\n\r\nexport const themeLogin = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n    spacing: 2,\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Temp\":\"HeaterCtrl_Temp__8Du_1\",\"Switch\":\"HeaterCtrl_Switch__3cXgO\",\"Canvas1\":\"HeaterCtrl_Canvas1__HF34-\",\"Canvas2\":\"HeaterCtrl_Canvas2__ZQFSu\",\"Select\":\"HeaterCtrl_Select__3wULz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__26qIN\",\"chatMain\":\"Chat_chatMain__1zSUi\",\"msgForm\":\"Chat_msgForm__3zrhr\",\"chatHandler\":\"Chat_chatHandler__2wAbt\",\"openChat\":\"Chat_openChat__3kAnz\",\"closeChat\":\"Chat_closeChat__a-LQe\",\"buttonBlink\":\"Chat_buttonBlink__juA-h\"};"],"sourceRoot":""}