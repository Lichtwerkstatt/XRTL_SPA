{"version":3,"sources":["components/UI/CSS/RotaryCtrl.module.css","components/UI/CSS/NavBar.module.css","components/Login/CSS/Login.module.css","App.js","components/UI/CSS/Settings.module.css","components/windows/CSS/InfoWindowContent.module.css","components/UI/experimentUI/NavBar.js","components/Console/Console.js","components/Login/Login.js","components/Chat/Chat.js","services/SocketContext.js","components/experiment/ComponentDescription/Imprint.js","components/experiment/ComponentDescription/Telescope_1.js","components/experiment/ComponentDescription/Telescope_2.js","components/experiment/ComponentDescription/DescriptionHandler.js","components/UI/experimentUI/Window.js","components/assembly/DescriptionOnly.js","components/assembly/media/id15_outline.png","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/Pinhole.js","components/assembly/media/PS_outline.png","components/UI/templates/Switch.js","components/UI/CtrlUnits/SwitchCtrl.js","components/assembly/Laser.js","components/assembly/media/rotary_outline.png","components/assembly/Rotary.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/XR50P_outline.png","components/assembly/XR50P.js","components/assembly/Eye.js","components/experiment/AdaptiveOptics/AdaptiveOptics.js","components/UI/templates/ESPCam.js","components/UI/CtrlUnits/ESPCamWithoutSettings.js","components/windows/OverviewCamWindow.js","components/media/images/xrtl_team.png","components/windows/Content/InfoWindowContent.js","components/windows/InfoWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/AdaptiveOptics/materials/GlassMaterial.js","components/experiment/AdaptiveOptics/materials/LaserMaterial.js","components/experiment/AdaptiveOptics/AO_230803.js","components/experiment/AdaptiveOptics/MIS1_2D_control.js","components/UI/experimentUI/VirtualLayer.js","index.js","services/AppContext.js","components/UI/CSS/Window.module.css","components/UI/templates/Theme.js","components/Chat/CSS/Chat.module.css","components/experiment/ComponentDescription/CSS/Description.module.css","services/PopUpContext.js","components/Console/CSS/Console.module.css"],"names":["module","exports","App","process","title","NavBar","appCtx","useAppContext","socketCtx","useSocketContext","connectionStatusColor","connected","showTagsColor","showTags","cameraStatusColor","showCam","showInfoWindowColor","showInfoWindow","showBeamColor","showBeam","showVirtualLayerColor","showVirtualLayer","mobileVersion","setMobileVersion","useState","openMobileVersion","Boolean","closeMobileVersion","id","className","styles","navbar","theme","underConstruction","navMenu","onClick","toggleConnection","toggleLogin","size","color","toggleShowTags","toggleCam","toggleShowVirtualLayer","toggleShowBeam","toggleShowInfoWindow","mobile","event","currentTarget","variant","sx","borderRadius","height","width","bgcolor","MenuListProps","anchorEl","open","onClose","disableRipple","style","paddingRight","memo","isEqual","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","logs","map","payload","index","consoleHandler","closeConsole","openConsole","Login","connectionOption","connection","setConnection","accessCode","setAccessCode","username","setUsername","handleLogin","setNewURL","String","error","handleChange","target","value","handleAccessCode","showLogin","themeLogin","popupWindow","popupInner","close","e","fontSize","container","direction","justifyContent","alignItems","autoFocus","label","onChange","onKeyPress","key","marginLeft","helperText","type","endIcon","Chat","showChat","setShowChat","message","setMessage","chat","setChat","useEffect","socket","on","removeAllListeners","sendMessage","async","preventDefault","at","toggleAutoRotate","userId","toggleunderConstruction","emit","user","i","length","slice","controlIds","controlId","reset","switch","binaryCtrl","Promise","resolve","setTimeout","move","showCase","frameSize","exposure","fontColor","contrast","chatContainer","chatMain","msgForm","paddingTop","htmlFor","endAdornment","position","edge","chatHandler","closeChat","openChat","manager","Manager","autoConnect","SocketContext","createContext","jwt","require","useContext","SocketContextProvider","children","setFontColor","setConnected","URL","setURL","connect","addLog","setSocket","disconnect","newURL","Provider","sub","token","sign","header","kid","auth","helperEmit","Imprint","mainWrapper","ThemeProvider","Box","mr","ml","Button","window","DescriptionTelescope1","DescriptionTelescope2","DescriptionHandler","renderOption","info","telescope_1","telescope_2","component","Window","lastChange","setLastChange","footer","setFooter","setInfo","popupCtx","usePopUpContext","topper","setTopper","para","icon","iconClose","setting","none","undefined","Footer","componentList","includes","status","time","Date","getHours","getMinutes","getSeconds","getDay","getMonth","getFooter","handle","top","left","windowHeader","display","cursor","float","smallSetting","smallSettings","toggleSelectedComp","toggleShowWelcomeWindow","toggleShowManualWindow","windowContent","background","windowFooter","timeNow","difH","difMin","difSec","alert","toggleShowPopUp","identify","windowInfo","Description","RotaryCtrl","enteredRotation","setEnteredRotation","onlineStatus","setOnlineStatus","rotation","setRotation","absolute","busy","getStatus","rotCW_Handler","name","Number","substring","rotaryCtrl","min","max","CtrlLeft","disabled","CtrlRight","Pinhole","PH_Background","SwitchCtrl","switchValue","setSwitchValue","FormGroup","Stack","Typography","Switch","checked","switchStatus","newValue","option","inputProps","online","right","LaserCtrl","switchIsOn","setSwitch","isOn","border","textAlign","Laser","PS_Background","Rotary","Rotary_bg","KM100","controlIdBottom","controlIdTop","KM100_Background","rotationTop","rotationBottom","XR50P","XR50P_bg","AdaptiveOptics","zero","selected","has","Eye","DescriptionOnly","ESPCam","ctx","data","uint8Arr","Uint8Array","binary","fromCharCode","base64String","btoa","img","Image","onload","canvas","document","getElementById","getContext","drawImage","this","src","toogleRoomComp","Canvas","ESPCamWithoutSettings","transform","backgroundSize","CamWindow","innerWidth","InfoWindowContent","backgroundImage","bgTeam","href","InfoWindow","ExperimentUILayer","authFailed","toggleSelect","selectedComps","DescriptiveTag","wrapperStyle","x","y","Html","zIndexRange","borderLeft","description","GlassMaterial","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","LaserMaterial","transparent","opacity","emissive","emissiveIntensity","Model","nodes","materials","useGLTF","dispose","scale","castShadow","receiveShadow","geometry","Beam_eye","Beam_screen","material","Laser_red","onPointerDown","stopPropagation","Netzteil","BlackParts","Cube","Cube_1","Glass","Cube_2","ShinyParts","Cylinder069","Cylinder069_1","Cylinder069_2","Cylinder069_3","Cylinder002","Cylinder002_1","Cylinder002_2","KM100mesh_1","KM100mesh_2","KM100mesh_3","KM100mesh002_1","KM100mesh002_2","KM100mesh002_3","KM100mesh003_1","KM100mesh003_2","KM100mesh003_3","KM100mesh004_1","KM100mesh004_2","KM100mesh004_3","KM100mesh005_1","KM100mesh005_2","KM100mesh005_3","KM100mesh006_1","KM100mesh006_2","KM100mesh006_3","Cube005","Cube005_1","Cube005_2","Cylinder036","Cylinder036_1","Cube008","Cube008_1","Cube008_2","Cylinder","Cylinder_1","Thorlabs_Servo_Mount_Loose_V1_Stand_1","Thorlabs_Servo_Mount_Loose_V1_Stand_2","Thorlabs_Servo_Mount_Loose_V1_Stand_3","Thorlabs_Servo_Mount_Loose_V1_Stand_4","Servo","Thorlabs_Servo_Mount_Loose_V1_Stand_5","Thorlabs_Servo_Mount_Loose_V1_Adapter_1","Thorlabs_Servo_Mount_Loose_V1_Adapter_2","WhiteParts","Plane004","Plane004_1","preload","Model2d","group","useRef","ref","args","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","autoRotate","Billboard","ReactDOM","render","AppContext","React","AppContextProvider","setUnderConstruction","setShowVirtualLayer","roomComponent","setRoomComponent","Set","setSelectedComps","setShowInfoWindow","showManualWindow","setShowManual","showWelcomeWindow","setShowWelcome","setAutoRotate","setShowLogin","manualPage","setManualPage","setShowBeam","setShowTags","setShowCam","setLogs","compId","prev","filter","add","val","log","newVal","toggleSetManualPage","createTheme","palette","mode","primary","light","main","dark","contrastText","spacing","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","text","setText","setType","errmsg","newText","newType","autoHideDuration","reason","severity"],"mappings":"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","file":"static/js/main.c80aa76f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1CVNa\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__LL-dY\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__2CpC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__kQPlq\",\"navMenu\":\"NavBar_navMenu__16QaL\",\"navMenuLaser\":\"NavBar_navMenuLaser__3n9Gj\",\"navRow\":\"NavBar_navRow__1qmGD\",\"mobile\":\"NavBar_mobile__eglhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2plgY\",\"close\":\"Login_close__39P7D\",\"popupWindow\":\"Login_popupWindow__29wfX\",\"popupInner\":\"Login_popupInner__2psTJ\"};","import ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Chat from \"./components/Chat/Chat\";\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Settings_Canvas__2HER9\",\"Settings\":\"Settings_Settings__19Ahs\",\"Cam\":\"Settings_Cam__Eq-1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__5S0Vi\"};","import { MenuItem, Menu, ThemeProvider, IconButton, Tooltip } from '@mui/material';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { MdInfoOutline } from 'react-icons/md';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport { ImEnter, ImExit } from 'react-icons/im'\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport { theme } from './../templates/Theme'\r\nimport { BsCamera, BsBox } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa';\r\nimport { memo, useState } from 'react';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n    let showBeamColor = '';\r\n    if (appCtx.showBeam) { showBeamColor = 'white' }\r\n    let showVirtualLayerColor = '';\r\n    if (!appCtx.showVirtualLayer) { showVirtualLayerColor = 'white' }\r\n\r\n    const [mobileVersion, setMobileVersion] = useState(null);\r\n    const openMobileVersion = Boolean(mobileVersion);\r\n\r\n    const handleClick = (event) => {\r\n        setMobileVersion(event.currentTarget);\r\n    };\r\n\r\n    const closeMobileVersion = () => {\r\n        setMobileVersion(null);\r\n    };\r\n\r\n    return (\r\n        <div id='navbar' className={styles.navbar} >\r\n            <ThemeProvider theme={theme} >\r\n                <h1>XR TwinLab - Adaptive Optics</h1>\r\n\r\n                {appCtx.underConstruction && <h2>Experiment under construction! Some functions may not work!</h2>}\r\n\r\n                <div className={styles.navMenu}>\r\n                    <ul>\r\n                        <Tooltip title={(socketCtx.connected) ? 'Disconnect' : 'Connect'}>\r\n                            <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}> {(socketCtx.connected) ? <ImExit size={25} color={connectionStatusColor} /> : <ImEnter size={25} color={connectionStatusColor} />} </li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Labels'>\r\n                            <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Cam'>\r\n                            <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Model'>\r\n                            <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} color={showVirtualLayerColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Beam Path'>\r\n                            <li onClick={appCtx.toggleShowBeam}><GiLaserWarning size={25} color={showBeamColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Info'>\r\n                            <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className={styles.mobile}>\r\n                    <IconButton onClick={handleClick} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <KeyboardArrowDownIcon color={'white'} />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={mobileVersion}\r\n                        open={openMobileVersion}\r\n                        onClose={closeMobileVersion}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            closeMobileVersion();\r\n                            (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin();\r\n                        }} disableRipple>\r\n                            {(socketCtx.connected) ? <ImExit size={25} color={connectionStatusColor} style={{ paddingRight: '20px' }} /> : <ImEnter size={25} color={connectionStatusColor} style={{ paddingRight: '20px' }} />}\r\n                            {(socketCtx.connected) ? 'Disconnect' : 'Connect'}\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeMobileVersion();\r\n                            appCtx.toggleShowTags();\r\n                        }} disableRipple>\r\n                            <FaTags size={25} style={{ paddingRight: '20px' }} />\r\n                            Labels\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeMobileVersion();\r\n                            appCtx.toggleCam();\r\n                        }} disableRipple>\r\n                            <BsCamera size={26} style={{ paddingRight: '20px' }} />\r\n                            Cam\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeMobileVersion();\r\n                            appCtx.toggleShowInfoWindow();\r\n                        }} disableRipple>\r\n                            <MdInfoOutline size={26} style={{ paddingRight: '20px' }} />\r\n                            Info\r\n                        </MenuItem>\r\n\r\n                    </Menu>\r\n                </div>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\nexport default memo(NavBar, isEqual)\r\n","import { useAppContext } from '../../services/AppContext'\r\nimport { RiTerminalBoxFill } from 'react-icons/ri'\r\nimport styles from './CSS/Console.module.css'\r\nimport { useState, memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Console = (props) => {\r\n  const [showConsole, setShowConsole] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + ' ' + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}>\r\n        <span>\r\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import { TextField, ThemeProvider, Button, IconButton, Grid } from '@mui/material';\r\nimport HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { themeLogin } from '../../components/UI/templates/Theme';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './CSS/Login.module.css'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'https://xrtl-ao.uni-jena.de' }]\r\n    const [connection, setConnection] = useState('');\r\n    const [accessCode, setAccessCode] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleLogin = () => {\r\n        if (username !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection), String(username));\r\n                socketCtx.toggleConnection(String(username), String(accessCode));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n        setConnection(connectionOption[1].title)\r\n    };\r\n\r\n    const handleAccessCode = (event) => {\r\n        setAccessCode(event.target.value);\r\n    };\r\n\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={themeLogin}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Login</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <TextField\r\n                            autoFocus\r\n                            variant='outlined'\r\n                            label='Username '\r\n                            value={username}\r\n                            onChange={handleChange}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{ marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={username === ''}\r\n                            helperText={username === '' ? 'Enter your username!' : ' '}\r\n                        />\r\n\r\n                        <TextField\r\n                            variant='outlined'\r\n                            label='Access code '\r\n                            value={accessCode}\r\n                            onChange={handleAccessCode}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{ marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={accessCode === ''}\r\n                            helperText={accessCode === '' ? 'Enter the access code!' : ' '}\r\n                        />\r\n                    </Grid>\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: '20%', height: '15%' }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);","import { ThemeProvider, InputAdornment, IconButton, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { theme } from '../../components/UI/templates/Theme';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport { useEffect, useState, memo } from 'react'\r\nimport styles from './CSS/Chat.module.css'\r\nimport { ImBubble } from 'react-icons/im'\r\nimport { MdSend } from 'react-icons/md'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Chat = () => {\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  var [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const message = (payload) => {\r\n      setChat([...chat, payload]);\r\n    }\r\n\r\n    socketCtx.socket.on('message', message);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('message', message);\r\n    }\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n    if (message.at(0) === '!') {\r\n      if (message === '!rotate' || message === '!r') {\r\n        appCtx.toggleAutoRotate();\r\n        setChat([...chat, { userId: 'XRTL', message: 'Rotation command was sent ... ', color: '#FF7373' }]);\r\n      } else if (message === '!construction' || message === '!c') {\r\n        appCtx.toggleunderConstruction(!appCtx.underConstruction);\r\n        socketCtx.socket.emit('underConstruction', !appCtx.underConstruction)\r\n        setChat([...chat, { userId: 'XRTL', message: 'Under construction is now set to ' + !appCtx.underConstruction, color: '#FF7373' }]);\r\n      }\r\n      else if (message === '!user' || message === '!users') {\r\n\r\n        socketCtx.socket.emit('updateUser')\r\n\r\n        socketCtx.socket.on('updateUser', (payload) => {\r\n          var user = ''\r\n          for (var i = 2; i < payload.length; i += 3) {\r\n            user += payload[i] + ','\r\n          }\r\n          user = user.slice(0, -1)\r\n          setChat([...chat, { userId: 'XRTL', message: 'List of all the active user/s: ' + user, color: '#FF7373' }]);\r\n        })\r\n      }\r\n      else if (message === '!reset') {\r\n        socketCtx.socket.emit('message', { userId: 'XRTL', message: 'Attention the reset command was emited!', color: '#FF7373' });\r\n\r\n        const controlIds = ['KM100_top_1', 'KM100_bottom_1', 'linear_1', 'greenlaser_top_1', 'greenlaser_bottom_1', 'beamSplitter']\r\n\r\n        for (var i = 0; i < controlIds.length; i++) {\r\n          socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: controlIds[i],\r\n            reset: true\r\n          })\r\n        }\r\n      }\r\n      else if (message === '!showcase' || message === '!s') {\r\n        const showCase = async () => {\r\n          //Establish the ground state =========================\r\n          //Turning off the laser\r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'greenlaser_1',\r\n            switch: false,\r\n            color: '#00ffa8'\r\n          })\r\n\r\n          //Removes the retractable mirror\r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'beamSplitter',\r\n            binaryCtrl: false,\r\n            color: '#00ffa8'\r\n          })\r\n\r\n          //this line guarantees that the following code is executed only after 8 s\r\n          //please note that some commands may take longer or less time to complete  \r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n          //Do awesome things ==================================\r\n          //Turning on the laser\r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'greenlaser_1',\r\n            switch: true,\r\n            color: '#00ffa8'\r\n          })\r\n\r\n          //this line guarantees that the following code is executed only after 8 s\r\n          //please note that some commands may take longer or less time to complete  \r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n          //Adds the retractable mirror\r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'beamSplitter',\r\n            binaryCtrl: true,\r\n            color: '#00ffa8'\r\n          })\r\n          //needs approx 1s\r\n\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n          //Adjustment of the linear stage by 200 steps in clockwise direction \r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'linear_1',\r\n            move: 200,\r\n            color: '#00ffa8'\r\n          })\r\n          //needs approx 6s\r\n\r\n          await new Promise(resolve => setTimeout(resolve, 7000));\r\n\r\n          //Adjustment of the reference mirror by 200 steps vertical tilting \r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'KM100_top_1',\r\n            move: 200,\r\n            color: '#00ffa8'\r\n          })\r\n          //needs approx 6s\r\n\r\n          await new Promise(resolve => setTimeout(resolve, 7000));\r\n\r\n          ////Adjustment of the reference mirror by -200 steps horizontal tilting\r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'KM100_bottom_1',\r\n            move: -200,\r\n            color: '#00ffa8'\r\n          })\r\n          //needs approx 6s\r\n\r\n          await new Promise(resolve => setTimeout(resolve, 7000));\r\n\r\n          //Adjustment of the reference mirror by -200 steps vertical tilting \r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'KM100_top_1',\r\n            move: -200,\r\n            color: '#00ffa8'\r\n          })\r\n          //needs approx 6s\r\n\r\n          await new Promise(resolve => setTimeout(resolve, 7000));\r\n\r\n          ////Adjustment of the reference mirror by -200 steps horizontal tilting\r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'KM100_bottom_1',\r\n            move: 200,\r\n            color: '#00ffa8'\r\n          })\r\n          //needs approx 6s\r\n\r\n          await new Promise(resolve => setTimeout(resolve, 7000));\r\n\r\n          //Adjustment of the linear stage by 200 steps counterclockwise \r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'linear_1',\r\n            move: -200,\r\n            color: '#00ffa8'\r\n          })\r\n          //needs approx 6s\r\n\r\n          await new Promise(resolve => setTimeout(resolve, 7000));\r\n\r\n          //Establish a ground state ==========================\r\n          //Removes the retractable mirror\r\n          socketCtx.socket.emit(\"command\", {\r\n            userId: 'XRTL',\r\n            controlId: 'beamSplitter',\r\n            binaryCtrl: false,\r\n            color: '#00ffa8'\r\n          })\r\n        }\r\n\r\n        showCase()\r\n\r\n      }\r\n      else if (message === '!cam') {\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          frameSize: 10\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          exposure: 800,\r\n          color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          contrast: 1,\r\n          color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: 'XRTL',\r\n          controlId: 'overview',\r\n          exposure: 1200,\r\n          color: socketCtx.fontColor,\r\n        })\r\n\r\n        setChat([...chat, { userId: 'XRTL', message: 'The highest camera settings have been made!', color: '#FF7373' }]);\r\n      }\r\n      else {\r\n        setChat([...chat, { userId: 'XRTL', message: \"Command doesn't exists\", color: '#FF7373' }]);\r\n      }\r\n\r\n    } else if (message !== '' && message !== ' ') {\r\n      socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\r\n    }\r\n    setMessage('');\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\r\n    setShowChat(!showChat);\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + ' ' + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm}>\r\n        <ThemeProvider theme={theme}>\r\n\r\n          <FormControl sx={{ marginLeft: -4, width: 3 / 3, paddingTop: 1 }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">Message  </InputLabel>\r\n            <OutlinedInput\r\n              onChange={handleChange}\r\n              onKeyPress={(e) => { if (e.key === 'Enter') { sendMessage(e); } }}\r\n              value={message}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={sendMessage}\r\n                    edge=\"end\"\r\n                  >\r\n                    <MdSend />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Message\"\r\n            />\r\n          </FormControl>\r\n        </ThemeProvider>\r\n      </form>\r\n      <div className={styles.chatHandler + ' ' + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\nvar socket = manager.socket(\"/\");\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const connect = (e) => {\r\n      setConnected(true);\r\n\r\n      appCtx.addLog(\"Server : Client connected to \" + URL);\r\n      appCtx.setSocket(socket);\r\n      appCtx.setUsername(username);\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n\r\n    if (username && username === 'admin') {\r\n      setUsername('Supervisor')\r\n    } else {\r\n      setUsername(username);\r\n    }\r\n  }\r\n\r\n  const toggleConnection = (username, key) => {\r\n    if (!connected) {\r\n      var payload = { sub: username }\r\n      var token = jwt.sign(payload, key, { header: { kid: username === 'admin' ? 'admin' : 'client' } });\r\n\r\n      socket.auth = { token: token }\r\n      socket.connect();\r\n      socket.emit('userId', username)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, setConnected, toggleConnection, setNewURL, setFontColor, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import { themeLogin } from '../../UI/templates/Theme';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport styles from './CSS/Description.module.css';\r\nimport { Button, Box } from '@mui/material';\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Imprint text\r\n * \r\n * @description Within this file is the text for the imprint, which can be found within the information window under the § symbol.\r\n * \r\n * @param {string} height - For scaling the content (is specified in pixels)\r\n * \r\n * @returns {React.ReactElement} Imprint text and buttons for redirection to websites.  \r\n */\r\nconst Imprint = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    The editorial responsibility for this application lies with the Executive Office of the Abbe Center of Photonics and it's representative/s.\r\n                </p>\r\n                <p>\r\n                    For further information please follow the links:\r\n                </p>\r\n                <ThemeProvider theme={themeLogin}>\r\n\r\n                    <Box sx={{ '& button': { mr: 5, ml: 3 } }}>\r\n\r\n                        <Button type='submit' variant='contained' onClick={() => { window.open(\"https://www.asp.uni-jena.de/legal-notice\", 'resizable=yes') }}> Legal Notice </Button>\r\n                        <Button type='submit' variant='contained' onClick={() => { window.open(\"https://www.uni-jena.de/en/privacy-statement\", 'resizable=yes') }}> Privacy Statement </Button>\r\n                    </Box>\r\n                </ThemeProvider>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nImprint.propTypes = {\r\n    height: propTypes.string.isRequired,\r\n}\r\n\r\nexport default Imprint;\r\n","import styles from './CSS/Description.module.css'\r\n\r\nconst DescriptionTelescope1 = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    Telescope 1 Description\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default DescriptionTelescope1;","import styles from './CSS/Description.module.css'\r\n\r\nconst DescriptionTelescope2 = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.mainWrapper} style={{ height: props.height }} >\r\n                <p>\r\n                    Telescope 2 Description\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default DescriptionTelescope2;","import Imprint from './Imprint';\r\nimport Telescope1 from './Telescope_1';\r\nimport Telescope2 from './Telescope_2';\r\nimport propTypes from \"prop-types\";\r\n\r\n/**\r\n * Description handler\r\n * \r\n * @description This component handles the display and rendering of the descriptions of the components and the imprint. For this, the descriptions must be imported and defined within the \r\n * variable renderOption as a component with the controlId as the key. This component must then be given the height of the window. The corresponding description is then returned within return. \r\n * \r\n * @param {string} component - controlId \r\n * @param {string} height - Passes the size of the window to scale the content (is specified in pixels).\r\n * \r\n * @returns {React.ReactElement} Component description to be displayed in the window\r\n * \r\n * Examples are for the variable renderOption within return nothing is changed!\r\n * @example   linear_1: <SM1ZP height={props.height} />\r\n * @example   KM100_1: <KM100 height={props.height} />\r\n * @example   screen: <ESPCam height={props.height} />\r\n */\r\nconst DescriptionHandler = (props) => {\r\n\r\n    const renderOption = {\r\n        info: <Imprint height={props.height} />,\r\n        telescope_1: <Telescope1 height={props.height} />,\r\n        telescope_2: <Telescope2 height={props.height} />,\r\n\r\n    }\r\n\r\n    return (\r\n        <div>{renderOption[props.component]}</div>\r\n    )\r\n}\r\n\r\nDescriptionHandler.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n    height: propTypes.string.isRequired,\r\n}\r\n\r\nexport default DescriptionHandler;\r\n","import { IoInformationCircleOutline, IoCloseCircleOutline, IoSettingsOutline } from 'react-icons/io5' //IoReloadOutline\r\nimport DescriptionHandler from '../../experiment/ComponentDescription/DescriptionHandler'\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { usePopUpContext } from '../../../services/PopUpContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport { MdOutlineUpdate } from 'react-icons/md'; //MdOutlineCircle\r\nimport styles from '../CSS/Window.module.css';\r\nimport { ImSection } from 'react-icons/im';\r\nimport Draggable from 'react-draggable';\r\nimport { memo, useEffect } from 'react';\r\nimport { isEqual } from 'lodash';\r\nimport { useState } from 'react';\r\n\r\nconst Window = (props) => {\r\n  const [lastChange, setLastChange] = useState(props.lastChange);\r\n  const [footer, setFooter] = useState('Initializing... ');\r\n  const [info, setInfo] = useState(props.info === false ? false : true);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const [topper, setTopper] = useState('')\r\n\r\n  const renderOption = {\r\n    para: <ImSection className={styles.icon} size={24} />,\r\n    info: <IoInformationCircleOutline className={styles.iconClose} size={30} />,\r\n    setting: <IoSettingsOutline className={styles.iconClose} size={30} />,\r\n    none: <IoSettingsOutline className={styles.icon} size={25} color={'#01bd7d'} />,\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.topper === 'none') {\r\n      setTopper('none')\r\n    } else if (props.topper === 'para') {\r\n      setTopper('para')\r\n    } else if (props.topper === undefined) {\r\n      setTopper('info')\r\n    }\r\n\r\n    const Footer = (payload) => {\r\n      if (props.footer !== 'empty' && props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (props.footer !== 'empty' && props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.on('footer', Footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('footer', Footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n\r\n    if (props.id === \"overview\") {\r\n      appCtx.toggleCam();\r\n    }\r\n\r\n    if (props.id === \"info\") {\r\n      appCtx.toggleShowInfoWindow();\r\n    }\r\n\r\n    if (props.id === \"welcome\") {\r\n      appCtx.toggleShowWelcomeWindow();\r\n    }\r\n\r\n    if (props.id === \"manual\") {\r\n      appCtx.toggleShowManualWindow();\r\n    }\r\n  }\r\n\r\n  const handleInformation = () => {\r\n    setInfo(!info)\r\n\r\n    if (props.id === 'screen' && appCtx.smallSetting === true) {\r\n      appCtx.smallSettings()\r\n    }\r\n\r\n    if (props.id === 'info') {\r\n      topper === 'para' ? setTopper('info') : setTopper('para');\r\n    } else {\r\n      topper === 'info' ? setTopper('setting') : setTopper('info')\r\n    }\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    var alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    popupCtx.toggleShowPopUp(alert, 'info');\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      controlId: props.componentList[0],\r\n      identify: 3000,\r\n      color: socketCtx.fontColor,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px', width: props.height + 'px', height: props.height + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 70px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n\r\n          <p>\r\n            <span onClick={handleInformation}>\r\n              {renderOption[topper]}\r\n            </span>\r\n            <span onClick={handleCloseWindow}><IoCloseCircleOutline className={styles.iconClose} size={30} /></span>\r\n          </p>\r\n        </div>\r\n        {info ?\r\n          <div\r\n            className={styles.windowContent}\r\n            style={{\r\n              height: props.height,\r\n              width: props.width,\r\n              background: 'url(' + props.background + ')',\r\n            }}\r\n          >\r\n            {props.children}\r\n          </div>\r\n\r\n          :\r\n\r\n          <div\r\n            className={styles.windowContent}\r\n            style={{\r\n              height: props.height,\r\n              width: props.width,\r\n            }}\r\n          >\r\n            <DescriptionHandler height={props.height} component={props.id} />\r\n          </div>\r\n        }\r\n\r\n        {props.footer !== 'empty' ?\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={handleInfo}> <MdOutlineUpdate size={25} /></span>\r\n            <label>{footer}</label>\r\n          </div>\r\n          :\r\n          <div />\r\n        }\r\n\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);","import Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Description Component window \r\n * \r\n * @description This React component returns a window with the description of a component. \r\n * Inside the DescriptionHandler.js file, the controlId and the class containing the description must \r\n * be added to the dictionary.  \r\n * \r\n * @param {string} id - controlId\r\n * @param {string} header - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * @param {string} height - Defines the height of the window\r\n * @param {string} width - Defines the width of the window\r\n * @param {string} footer - If set to 'empty', then the window has no footer.\r\n * @param {string} topper - If set to 'none', then no other button will be displayed in the tooper.\r\n * @param {boolean} info - If set to 'false', then the window does not need any content defined below \r\n * <Winow/> based on the controlId, but gets it from the DescriptionHandler.\r\n * \r\n * @returns {React.ReactElement} Telescope description window\r\n */\r\nconst Description = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      footer={'empty'}\r\n      topper={'none'}\r\n      info={false}\r\n    />\r\n  )\r\n}\r\nexport default Description;","export default __webpack_public_path__ + \"static/media/id15_outline.9b250e31.png\";","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.component,\r\n        move: direction,\r\n        color: socketCtx.fontColor,\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n        controlId: props.component\r\n      });\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    if (event.target.value > -1) {\r\n      setEnteredRotation(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","import PH_Background from \"./media/id15_outline.png\";\r\nimport RotaryCtrl from \"../UI/CtrlUnits/RotaryCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\n/**\r\n * Pinhole component window\r\n * \r\n * @description This react component returns a window with the content for the pinhole component window.\r\n *  \r\n * @param {string} controlId - controlId\r\n * @param {string} controlIdTop - controlId for the stepper motor \r\n * @param {number} rotation - Initialisation value for the control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} Pinhole component window\r\n */\r\nconst Pinhole = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"240px\"\r\n      width=\"250px\"\r\n      background={PH_Background}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default Pinhole;\r\n","export default __webpack_public_path__ + \"static/media/PS_outline.8e83270a.png\";","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport propTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\n/**\r\n * Switch Component\r\n * \r\n * @description This component returns a styled switch. The left/beginning and right/end text of the switch can be set. In addition, the controlId, the status \r\n * (of the component and the online status), and the command for the server must be specified.\r\n * \r\n * @param {string} component - controlId \r\n * @param {string} left -  text at the left/beginning\r\n * @param {string} right -text at the right/end\r\n * @param {boolean} switchStatus - Status of the switch from the status request \r\n * @param {boolean} online - connection status to the component\r\n * @param {string} option - command for the server\r\n * \r\n * @returns {React.ReactElement} styled switch with the specified props \r\n * \r\n * @example <Switch component={'TestSwitch'} online={true} switchStatus={false} option=\"switch\" />\r\n * @example <Switch component={'TestSwitch2'} online={true} switchStatus={false} left='Off' right='On' option=\"switch\" />\r\n * @example <Switch component={'TestSwitch3'} online={false} switchStatus={true} left='Front' right='Back' option=\"status\" />\r\n */\r\n\r\nconst SwitchCtrl = (props) => {\r\n    /**\r\n     * @param {bool} switchValue - Indicates the status of the switch\r\n     * @function setSwitchValue - Assigning a new value\r\n     */\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    /**\r\n     * Handles the onclick event on the switch\r\n     * \r\n     * @description Clicking on the button overwrites it with the new value. This is then sent to the server with a \"command\" command. Emitting footer \r\n     * then updates the footer of the window \r\n     * \r\n     * @param {*} event - Clicking event\r\n     * @param {boolean} newValue - Value with which switchValue is to be overwritten\r\n     */\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: 'Used by: ' + socketCtx.username.substring(0, 17),\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n    }\r\n\r\n    return (\r\n        <Box >\r\n            <FormGroup>\r\n                <Stack direction=\"row\" alignItems=\"center\" sx={{ ml: 2 }}>\r\n                    <Typography>{props.left}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.right}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nSwitchCtrl.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n    left: propTypes.string,\r\n    right: propTypes.string,\r\n    switchStatus: propTypes.bool.isRequired,\r\n    online: propTypes.bool.isRequired,\r\n    option: propTypes.string.isRequired\r\n}\r\n\r\nexport default SwitchCtrl;\r\n","import { ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { theme } from '../templates/Theme.js';\r\nimport Switch from '../templates/Switch';\r\nimport { Box } from '@mui/material';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  \r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme} >\r\n      <div style={{\r\n        position: 'absolute',\r\n        width: '120px',\r\n        height: '40px',\r\n        border: '2px solid #00ffa8',\r\n        borderRadius: '50px',\r\n        textAlign: 'center',\r\n        top: '40px',\r\n        left: '10px'\r\n      }}>\r\n        <Box sx={{ ml: '-4px' }} >\r\n          <Switch component={props.component} online={onlineStatus} switchStatus={switchIsOn} left='Off' right='On' option=\"switch\" />\r\n        </Box>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\nexport default LaserCtrl\r\n","import PS_Background from './media/PS_outline.png';\r\nimport LaserCtrl from '../UI/CtrlUnits/SwitchCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Laser power supply component window\r\n * \r\n * @description  This React component returns a window with the content for the Laser power supply component window.\r\n *  \r\n * @param {string} id - controlId of the entire component (same as for the laser alignment)\r\n * @param {string} controlId - controlId for the relais\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} Laser power supply component window\r\n */\r\nconst Laser = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={PS_Background}\r\n\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","export default __webpack_public_path__ + \"static/media/rotary_outline.c6f9b7e7.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Rotary_bg from './media/rotary_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Rotary component window\r\n * \r\n * @description This react component returns a window with the content for the rotary component window.\r\n *  \r\n * @param {string} controlId - controlId\r\n * @param {string} controlIdTop - controlId for the stepper motor \r\n * @param {number} rotation - Initialisation value for the control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} Rotary component window\r\n */\r\nconst Rotary = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={Rotary_bg}\r\n    >\r\n      <RotaryCtrl\r\n        component={props.controlId}\r\n        rotation={props.rotation}\r\n        top='10'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default Rotary;\r\n","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * KM100 component window\r\n * \r\n * @description  This React component returns a window with the content for the KM100 component window.\r\n *  \r\n * @param {string} id - controlId of the entire component\r\n * @param {string} controlIdTop - controlId for the upper stepper motor \r\n * @param {string} controlIdBottom - controlId for the lower stepper motor\r\n * @param {number} rotationTop - Initialisation value for upper control element\r\n * @param {number} rotationBottom - Initialisation value for lower control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} KM100 component window\r\n */\r\nconst KM100 = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlIdBottom, props.controlIdTop]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/XR50P_outline.bcbc3ede.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport XR50P_bg from './media/XR50P_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * XR50P component window\r\n * \r\n * @description This react component returns a window with the content for the XR50P component window.\r\n *  \r\n * @param {string} controlId - controlId\r\n * @param {number} rotation - Initialisation value for the control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} XR50P component window\r\n */\r\nconst XR50P = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={XR50P_bg}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        component={props.controlId}\r\n        rotation={props.rotation}\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default XR50P;\r\n","//import KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Eye component window\r\n * \r\n * @description  This React component returns a window with the content for the eye component window.\r\n *  \r\n * @param {string} id - controlId of the entire component\r\n * @param {string} controlIdTop - controlId for the upper stepper motor \r\n * @param {string} controlIdBottom - controlId for the lower stepper motor\r\n * @param {number} rotationTop - Initialisation value for upper control element\r\n * @param {number} rotationBottom - Initialisation value for lower control element\r\n * @param {string} title - For setting the title within the window\r\n * @param {number} top - For the positioning of the window \r\n * @param {number} left - For the positioning of the window \r\n * \r\n * @returns {React.ReactElement} KM100 component window\r\n */\r\nconst KM100 = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlIdBottom, props.controlIdTop]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={''}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","import DescriptionOnlyComponent from \"../../assembly/DescriptionOnly\";\r\nimport Pinhole from \"../../assembly/Pinhole\";\r\nimport LaserCtrl from \"../../assembly/Laser\";\r\nimport Rotary from \"../../assembly/Rotary\";\r\nimport KM100 from \"../../assembly/KM100\";\r\nimport XR50P from \"../../assembly/XR50P\";\r\nimport Eye from '../../assembly/Eye'\r\n\r\nconst AdaptiveOptics = (props) => {\r\n  let footer = \"Initializing...\";\r\n  var zero = \"0\";\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has(\"KM100B_1\") && (\r\n        <KM100\r\n          title=\"Prism Mount\"\r\n          id={\"KM100B_1\"}\r\n          controlIdTop={\"KM100B_top_1\"}\r\n          controlIdBottom={\"KM100B_bottom_1\"}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={600}\r\n          left={920}\r\n        />\r\n      )}\r\n\r\n      {/* Linear stage */}\r\n      {props.selected.has(\"linear_1\") && (\r\n        <XR50P\r\n          title=\"Delay Line\"\r\n          controlId={\"linear_1\"}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={600}\r\n          left={100}\r\n        />\r\n      )}\r\n\r\n      {/* Laser ctrl */}\r\n      {props.selected.has(\"redlaser_1\") && (\r\n        <KM100\r\n          title=\"Laser Alignment\"\r\n          id={\"redlaser_1\"}\r\n          controlIdTop={\"redlaser_top_1\"}\r\n          controlIdBottom={\"redlaser_bottom_1\"}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={450}\r\n          left={1600}\r\n        />\r\n      )}\r\n\r\n      {/* Laser power */}\r\n      {props.selected.has(\"redlaserPower_1\") && (\r\n        <LaserCtrl\r\n          title=\"Power Supply\"\r\n          id={\"redlaserPower_1\"}\r\n          controlId={\"redlaser_1\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={1600}\r\n        />\r\n      )}\r\n\r\n      {/* Pinhole */}\r\n      {props.selected.has(\"pinhole\") && (\r\n        <Pinhole\r\n          title=\"Pinhole\"\r\n          controlId={\"pinhole\"}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={100}\r\n          left={1100}\r\n        />\r\n      )}\r\n      {/* Phantom eye*/}\r\n      {props.selected.has(\"rotaryStage_1\") && (\r\n        <Eye\r\n          title=\"Eye\"\r\n          controlId={\"rotaryStage_1\"}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n      {/* Rotary stage of the eye*/}\r\n      {props.selected.has(\"rotaryStage_1\") && (\r\n        <Rotary\r\n          title=\"Rotary stage\"\r\n          controlId={\"rotaryStage_1\"}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={550}\r\n          left={150}\r\n        />\r\n      )}\r\n      {/* Telescope in front of the Adaptive Mirror */}\r\n      {props.selected.has(\"telescope_1\") && (\r\n        <DescriptionOnlyComponent\r\n          title=\"Telescope 1\"\r\n          controlId={\"telescope_1\"}\r\n          footer={footer}\r\n          top={550}\r\n          left={900}\r\n        />\r\n      )}\r\n      {/* Telescope in front of the Wavefront Sensor*/}\r\n      {props.selected.has(\"telescope_2\") && (\r\n        <DescriptionOnlyComponent\r\n          title=\"Telescope 2\"\r\n          controlId={\"telescope_2\"}\r\n          footer={footer}\r\n          top={50}\r\n          left={150}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default AdaptiveOptics;\r\n","import { useSocketContext } from '../../../services/SocketContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/Settings.module.css'\r\nimport propTypes from \"prop-types\";\r\nimport { useEffect } from 'react';\r\n\r\n/**\r\n * ESPCam canvas component\r\n * \r\n * @description This component returns a canvas with the camera stream of an ESPCam. For this, the height and width \r\n * must be specified. In addition, changes to the styling can be transferred.\r\n * \r\n * @param {string} component - controlId \r\n * @param {string} width - Sets the width of the canvas in pixels\r\n * @param {string} height - Sets the height of the canvas in pixels\r\n * @param {string} style - additional styling of the canvas\r\n * \r\n * @returns {React.ReactElement} styled canvas with ESPCam stream\r\n */\r\nconst ESPCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    useEffect(() => {\r\n        var x1, x2, y1, y2;\r\n        var ctx;\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                var uint8Arr = new Uint8Array(payload.data);\r\n                var binary = '';\r\n                for (var i = 0; i < uint8Arr.length; i++) {\r\n                    binary += String.fromCharCode(uint8Arr[i]);\r\n                }\r\n                var base64String = window.btoa(binary);\r\n\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    var canvas = document.getElementById(props.component);\r\n\r\n                    ctx = canvas.getContext('2d');\r\n                    x1 = 0;\r\n                    y1 = 0;\r\n                    x2 = 600;\r\n                    y2 = 400;\r\n                    ctx.drawImage(this, x1, y1, x2, y2);\r\n                };\r\n                img.src = 'data:image/jpg;base64,' + base64String;\r\n            }\r\n        }\r\n        // A room is created for the component, into which the clients are then added when they open the corresponding window. By creating the room, the traffic caused by sending the \r\n        // stream should be reduced, as only the clients who really need the stream receive it.\r\n        appCtx.toogleRoomComp(props.component, true);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <div className={styles.Canvas}>\r\n            <canvas id={props.component} width={props.width} height={props.height} style={props.style} />\r\n        </div>\r\n    )\r\n}\r\n\r\nESPCam.propTypes = {\r\n    component: propTypes.string.isRequired,\r\n    width: propTypes.string.isRequired,\r\n    height: propTypes.string.isRequired,\r\n    style: propTypes.array\r\n}\r\n\r\nexport default ESPCam;\r\n\r\n","import { useSocketContext } from '../../../services/SocketContext';\r\nimport { useEffect } from 'react';\r\nimport ESPCam from '../templates/ESPCam';\r\n\r\nconst ESPCamWithoutSettings = (props) => {\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        document.getElementById(props.component).style.transform = 'rotate(180deg)'\r\n\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                //console.log('Status of settings:   ', payload)\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n\r\n        }\r\n        //Comment needed to prevent a warning\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ESPCam component={props.component} width={props.width} height={props.height} style={{ borderRadius: '5px', backgroundSize: 'cover', top: 30 }} />\r\n    )\r\n    //<canvas id='Canvas' width={props.width} height={props.height} style={{ borderRadius: '5px', backgroundSize: 'cover' }} />\r\n}\r\nexport default ESPCamWithoutSettings;","import ESPCam from '../UI/CtrlUnits/ESPCamWithoutSettings';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\n/**\r\n * Overview camera window\r\n * \r\n * @description This react component returns a window with the content for the Overview Camera window. \r\n *  \r\n * @returns {React.ReactElement} Overview camera window\r\n */\r\nconst CamWindow = () => {\r\n    var width = window.innerWidth\r\n    var height = 0;\r\n\r\n    if (0 < width && width < 576) {\r\n        width = '350px'\r\n        height = '260px'\r\n    }\r\n    else if (576 < width && width < 768) {\r\n        width = '510px'\r\n        height = '340px'\r\n    } else {\r\n        width = '600px'\r\n        height = '400px'\r\n    }\r\n\r\n\r\n    return (\r\n        <Window\r\n            header={'Top View of Experiment'}\r\n            top={'200'}\r\n            left={'650'}\r\n            id={'overview'}\r\n            componentList={['overview']}\r\n            width={width}\r\n            height={height}\r\n            footer={'empty'}\r\n            topper={'none'}\r\n        >\r\n            <ESPCam\r\n                component={'overview'}\r\n                width={width}\r\n                height={height}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default CamWindow;","export default __webpack_public_path__ + \"static/media/xrtl_team.9c8d8d7c.png\";","import styles from \"../CSS/InfoWindowContent.module.css\";\r\nimport bgTeam from \"../../media/images/xrtl_team.png\";\r\n\r\n/**\r\n * Information text\r\n * \r\n * @description This file contains the content and text for the information window.\r\n *  \r\n * @returns {React.ReactElement} Content and Text for the information window\r\n */\r\nconst InfoWindowContent = () => {\r\n  return (\r\n\r\n    <div className={styles.mainWrapper} style={{ backgroundImage: \"url(\\\"\" + bgTeam + \"\\\")\" }}\r\n    >\r\n      Remote labs represent a groundbreaking approach to science education and collaboration, facilitating communication and experimentation from afar. However, creating remote access capabilities can be prohibitively expensive or technically challenging, particularly for non-IT and non-engineering disciplines. To make remote labs accessible across all fields, we need a user-friendly platform that enables researchers, assistants, and technical staff to implement them independently. To that end, we are proud to present XR TwinLab (XRTL), an open-source toolbox designed specifically for the field of Photonics. With its modular structure XRTL offers a flexible, web-based application for controlling optical experimental setups. This exciting project is currently being developed by the esteemed Abbe School of Photonics and the Open Makerspace Lichtwerkstatt Jena.\r\n\r\n      Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n\r\n      <p>\r\n        Best! Clara, Fabian, Falko, Jari and Johannes\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;","import InfoWindowContent from \"./Content/InfoWindowContent\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\n/**\r\n * Information window\r\n * \r\n * @description This react component returns a window with the content for the information window.\r\n *  \r\n * @returns {React.ReactElement} Information window\r\n */\r\nconst InfoWindow = () => {\r\n    var width = window.innerWidth\r\n    var height = 0;\r\n\r\n    if (0 < width && width < 576) {\r\n        width = '350px'\r\n        height = '650px'\r\n    }\r\n    else {\r\n        width = '600px'\r\n        height = '517px'\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            id='info'\r\n            top=\"200\"\r\n            left=\"200\"\r\n            width={width}\r\n            height={height}\r\n            footer={'empty'}\r\n            topper={'para'}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import AdaptiveOptics from \"../../experiment/AdaptiveOptics/AdaptiveOptics\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport CamWindow from \"../../windows/OverviewCamWindow\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport { useEffect, Fragment } from \"react\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\";\r\n\r\nconst ExperimentUILayer = () => {\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.socket.emit('userId', socketCtx.username);\r\n      socketCtx.setConnected(true);\r\n      socketCtx.setFontColor(color);\r\n    }\r\n\r\n    const underConstruction = (payload) => {\r\n      appCtx.toggleunderConstruction(payload);\r\n    }\r\n\r\n    const authFailed = () => {\r\n      socketCtx.setConnected(false);\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    }\r\n\r\n    socketCtx.socket.on('AuthFailed', authFailed)\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    socketCtx.socket.on('underConstruction', underConstruction)\r\n\r\n    if (!socketCtx.socket.connected) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('underConstruction', underConstruction)\r\n      socketCtx.socket.removeAllListeners('AuthFailed', authFailed)\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <AdaptiveOptics\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport propTypes from \"prop-types\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\n/**\r\n * Descriptive tag component\r\n * \r\n * @description The Recat component returns the tag of a component for the 3D model. For this, the title, the description and the position within the 3D space must be specified.\r\n * \r\n * @param {string} title - title of a component\r\n * @param {string} description - Short description of the components\r\n * @param {string} position  - Positioning of the tag\r\n * \r\n * \r\n * @returns {React.ReactElement} styled tag\r\n */\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '50px',\r\n    position: 'absolute',\r\n    left: props.position.x + 'px',\r\n    top: props.position.y + 'px',\r\n    transform: 'translateY(-100px)',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '100px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nDescriptiveTag.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  description: propTypes.string.isRequired,\r\n  position: propTypes.array.isRequired\r\n}\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","\r\nconst GlassMaterial = () => {\r\n  return (\r\n    <meshPhysicalMaterial\r\n      thickness={1}\r\n      roughness={0.1}\r\n      transmission={1}\r\n      clearcoat={0.5}\r\n      clearcoatRoughness={0}\r\n      ior={1.1}\r\n      envMapIntensity={25}\r\n      color={\"#ffffff\"}\r\n      attenuationColor={\"#00ffff\"}\r\n      attenuationDistance={5}\r\n    />\r\n  );\r\n};\r\nexport default GlassMaterial;\r\n","const LaserMaterial = () => {\r\n    return (\r\n        <meshStandardMaterial\r\n        color=\"#ff0000\"\r\n        transparent\r\n        opacity={0.8}\r\n        emissive\r\n        emissiveIntensity={1}\r\n      />\r\n    );\r\n  };\r\n  export default LaserMaterial;\r\n  ","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\nCommand: npx gltfjsx@6.1.2 AO_230803.glb -k -s\r\n*/\r\n\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport React, { memo } from \"react\";\r\nimport { isEqual } from \"lodash\";\r\nimport GlassMaterial from \"./materials/GlassMaterial\";\r\nimport LaserMaterial from \"./materials/LaserMaterial\";\r\n\r\nfunction Model(props) {\r\n  const { nodes, materials } = useGLTF(\"/model/AO_230803.glb\");\r\n\r\n  return (\r\n    <group {...props} dispose={null} scale={[5, 5, 5]}>\r\n      {/* Beam Overlay */}\r\n\r\n      {props.showBeam && (\r\n        <group>\r\n          <mesh\r\n            name=\"Beam_eye\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Beam_eye.geometry}\r\n          >\r\n            <LaserMaterial />\r\n          </mesh>\r\n          <mesh\r\n            name=\"Beam_screen\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Beam_screen.geometry}\r\n            material={materials.Laser_red}\r\n          >\r\n            <LaserMaterial />\r\n          </mesh>\r\n        </group>\r\n      )}\r\n\r\n      <group\r\n        name=\"LaserPower\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"redlaserPower_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0.15, 0.05, 0.45]}\r\n            title=\"Power Supply\"\r\n            description=\"Power Supply description\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"LaserPower\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Netzteil.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"redlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n      </group>\r\n\r\n      <mesh\r\n        name=\"Cube\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cube.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"Cube_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cube_1.geometry}\r\n        material={materials.Glass}\r\n      >\r\n        <GlassMaterial />\r\n      </mesh>\r\n      <mesh\r\n        name=\"Cube_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cube_2.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n\r\n      <group\r\n        name=\"Eye\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"rotaryStage_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, 0.43]}\r\n            title=\"The Eye\"\r\n            description=\"His gaze pierces cloud, shadow, earth and flesh.\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Cylinder069\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder069.geometry}\r\n          material={materials[\"BlackParts.001\"]}\r\n        >\r\n          {props.selected.has(\"rotaryStage_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder069_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder069_1.geometry}\r\n          material={materials[\"Glass.001\"]}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder069_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder069_2.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"rotaryStage_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder069_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder069_3.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <mesh\r\n        name=\"Cylinder002\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cylinder002.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"Cylinder002_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cylinder002_1.geometry}\r\n        material={materials.Glass}\r\n      >\r\n        <GlassMaterial />\r\n      </mesh>\r\n      <mesh\r\n        name=\"Cylinder002_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cylinder002_2.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n\r\n      <mesh\r\n        name=\"KM100mesh_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh_1.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"KM100mesh_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh_2.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n      <mesh\r\n        name=\"KM100mesh_3\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh_3.geometry}\r\n        material={materials.Glass}\r\n      >\r\n        <GlassMaterial />\r\n      </mesh>\r\n\r\n      <mesh\r\n        name=\"KM100mesh002_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh002_1.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"KM100mesh002_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh002_2.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n      <mesh\r\n        name=\"KM100mesh002_3\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.KM100mesh002_3.geometry}\r\n        material={materials.Glass}\r\n      >\r\n        <GlassMaterial />\r\n      </mesh>\r\n\r\n      <group\r\n        name=\"Telescope_1\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"telescope_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, -0.13]}\r\n            title=\"Telescope 1\"\r\n            description=\"Telescope 1 Description\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"KM100mesh003_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh003_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"telescope_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh003_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh003_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n\r\n        <mesh\r\n          name=\"KM100mesh003_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh003_3.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh004_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh004_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"telescope_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh004_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh004_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"KM100mesh004_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh004_3.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n      </group>\r\n\r\n      <group\r\n        name=\"Telescope_2\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"telescope_2\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.02, 0.1, -0.24]}\r\n            title=\"Telescope 2\"\r\n            description=\"Telescope 2 Description\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"KM100mesh005_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh005_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"telescope_2\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh005_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh005_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"KM100mesh005_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh005_3.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh006_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh006_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"telescope_2\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"KM100mesh006_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh006_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"KM100mesh006_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.KM100mesh006_3.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n      </group>\r\n\r\n      <group\r\n      name=\"SHS\"\r\n      >\r\n        <mesh\r\n          name=\"Cube005\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube005.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        <mesh\r\n          name=\"Cube005_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube005_1.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cube005_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube005_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <group\r\n        name=\"Pinhole\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"pinhole\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.01, 0.1, 0.3]}\r\n            title=\"Pinhole\"\r\n            description=\"Pinhole Description\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Pinhole\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder036.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"pinhole\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cylinder036_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder036_1.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <group\r\n        name=\"DelayLine\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"linear_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0.1, 0.1, 0.15]}\r\n            title=\"Delay Line\"\r\n            description=\"Delay Line Description\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"XR50P_M-Stepbr_(LeftHanded)001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes[\"XR50P_M-Stepbr_(LeftHanded)001\"].geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"linear_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"XR50P_M-Stepbr_(LeftHanded)001_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes[\"XR50P_M-Stepbr_(LeftHanded)001_1\"].geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"XR50P_M-Stepbr_(LeftHanded)001_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes[\"XR50P_M-Stepbr_(LeftHanded)001_2\"].geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n      </group>\r\n      <group\r\n        name=\"Prism\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"KM100B_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[-0.12, 0.1, 0.15]}\r\n            title=\"Prism\"\r\n            description=\"Prism Description\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Cube008\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube008.geometry}\r\n          material={materials.Glass}\r\n        >\r\n          <GlassMaterial />\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cube008_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube008_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"KM100B_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        <mesh\r\n          name=\"Cube008_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cube008_2.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n      </group>\r\n\r\n      <group\r\n        name=\"Laser\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"redlaser_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0.12, 0.1, 0.3]}\r\n            title=\"Laser\"\r\n            description=\"Laser Description\"\r\n          />\r\n        )}\r\n        <mesh\r\n          name=\"Laser\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        <mesh\r\n          name=\"Laser_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Cylinder_1.geometry}\r\n          material={materials.BlackParts}\r\n        >\r\n          {props.selected.has(\"redlaser_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n      </group>\r\n      <mesh\r\n        name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_1.geometry}\r\n        material={materials[\"BlackParts.002\"]}\r\n      />\r\n      <mesh\r\n        name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_2.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n      <mesh\r\n        name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_3\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_3.geometry}\r\n        material={materials[\"ShinyParts.001\"]}\r\n      />\r\n      <mesh\r\n        name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_4\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_4.geometry}\r\n        material={materials.Servo}\r\n      />\r\n      <mesh\r\n        name=\"Thorlabs_Servo_Mount_Loose_V1_Stand_5\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Stand_5.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"Thorlabs_Servo_Mount_Loose_V1_Adapter_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Adapter_1.geometry}\r\n        material={materials[\"BlackParts.002\"]}\r\n      />\r\n      <mesh\r\n        name=\"Thorlabs_Servo_Mount_Loose_V1_Adapter_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Thorlabs_Servo_Mount_Loose_V1_Adapter_2.geometry}\r\n        material={materials.WhiteParts}\r\n      />\r\n      <mesh\r\n        name=\"PR01_M-Step_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes[\"PR01_M-Step_1\"].geometry}\r\n        material={materials[\"BlackParts.003\"]}\r\n      />\r\n      <mesh\r\n        name=\"PR01_M-Step_2\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes[\"PR01_M-Step_2\"].geometry}\r\n        material={materials[\"ShinyParts.002\"]}\r\n      />\r\n      <mesh\r\n        name=\"Plane004\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane004.geometry}\r\n        material={materials.BlackParts}\r\n      />\r\n      <mesh\r\n        name=\"Plane004_1\"\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Plane004_1.geometry}\r\n        material={materials.ShinyParts}\r\n      />\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"/AO_230803.glb\");\r\nexport default memo(Model, isEqual);\r\n","import DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport React, { useRef, memo, useEffect } from \"react\";\r\nimport { Box } from \"@react-three/drei\";\r\nimport { isEqual } from \"lodash\";\r\n\r\nfunction Model2d({ ...props }) {\r\n  const group = useRef();\r\n\r\n  const socket = props.socket;\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === \"beamSplitter\") {\r\n\r\n        // console.log(\"Status  \", payload)\r\n      } else if (payload.controlId === \"OtherComponent\") {\r\n        //Normal case of assignment\r\n        //setRotation(payload.status.absolute);\r\n      }\r\n    };\r\n\r\n    socket.on(\"status\", status);\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"status\", status);\r\n    };\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socket]);\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group\r\n        name=\"BSslim\"\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"pinhole\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Pinhole\"\r\n            description=\"DESCRIPTION\"\r\n          />\r\n        )}\r\n        <Box\r\n          position={[0, 0, 0]}\r\n          args={[2, 2, 0.01]}\r\n          scale={[0.25, 0.25, 0.25]}\r\n        >\r\n          {props.selected.has(\"pinhole\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"Mirror1\"\r\n        position={[-1, -1, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"KM100B_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Reference Mirror\"\r\n            description=\"KM100 B Double Rotary Control\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"KM100B_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"TranslateMirror\"\r\n        position={[-2, 0, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"linear_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Linear Movable Mirror\"\r\n            description=\"SM1ZP/M Translation Mount\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"linear_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"Schirm\"\r\n        position={[-1, 1, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"rotaryStage_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Rotary Stage\"\r\n            description=\"PR01/M Rotation Stage\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"rotaryStage_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n\r\n\r\n\r\n\r\n      <group\r\n        name=\"Laser\"\r\n        position={[2, 0, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"redlaser_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Laser Alignment\"\r\n            description=\"KM100 Double Rotary Control\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"redlaser_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"SD5\"\r\n        position={[2, 1, 0]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"redlaserPower_1\");\r\n        }}\r\n      >\r\n        {props.showTags && (\r\n          <DescriptiveTag\r\n            position={[0, 0.2, 0]}\r\n            title=\"Power Supply\"\r\n            description=\"5V Laser Power Supply\"\r\n          />\r\n        )}\r\n        <Box args={[2, 2, 0.01]} scale={[0.25, 0.25, 0.25]}>\r\n          {props.selected.has(\"redlaserPower_1\") ? (\r\n            <meshStandardMaterial color={\"#00ff00\"} transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#ffffff\" opacity={0.5} />\r\n          )}\r\n        </Box>\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default memo(Model2d, isEqual);\r\n","import Model3d from \"../../experiment/AdaptiveOptics/AO_230803\";\r\nimport Model2d from \"../../experiment/AdaptiveOptics/MIS1_2D_control\";\r\nimport { OrbitControls, Environment, Billboard } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\n\r\nconst VirtualLayer = (...props) => {\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: \"absolute\",\r\n          background: \"linear-gradient(Teal, Black)\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files=\"../hdri/autoshop.hdr\" />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <Model3d\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n            socket={socketCtx.socket}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    // socketCtx.socket.emit(\"command\", {\r\n    //   userId: socketCtx.username,\r\n    //   controlId: props.component,\r\n    //   getStatus: true,\r\n    // });\r\n\r\n    // appCtx.toogleRoomComp(props.component, true);\r\n\r\n    // socketCtx.socket.on(\"data\", Settings.data);\r\n\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: \"absolute\",\r\n          background: \"linear-gradient(Teal, Black)\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n        colorManagement\r\n        camera={{ position: [0, 0, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          {/* <canvas\r\n            id=\"Canvas\"\r\n            width={props.width}\r\n            height={props.height}\r\n            style={{ borderRadius: \"5px\", backgroundSize: \"cover\" }}\r\n          /> */}\r\n\r\n          <Environment files=\"../hdri/autoshop.hdr\" />\r\n\r\n          {/* <pointLight /> */}\r\n          <Billboard>\r\n            <Model2d\r\n              toggleSelect={appCtx.toggleSelectedComp}\r\n              selected={appCtx.selectedComps}\r\n              showTags={appCtx.showTags}\r\n              socket={socketCtx.socket}\r\n            />\r\n          </Billboard>\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [underConstruction, setUnderConstruction] = useState(false);\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [roomComponent, setRoomComponent] = useState(new Set());\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [showManualWindow, setShowManual] = useState(false);\r\n  const [showWelcomeWindow, setShowWelcome] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const [manualPage, setManualPage] = useState(1);\r\n  const [showBeam, setShowBeam] = useState(false);\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [socket, setSocket] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  const toggleSelectedComp = (compId) => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      toogleRoomComp(compId);\r\n    }\r\n  };\r\n\r\n  const toogleRoomComp = (compId, val = false) => {\r\n    try {\r\n      if (!roomComponent.has(compId) && val !== false) {\r\n        setRoomComponent(prev => new Set(prev.add(compId)));\r\n\r\n        socket.emit('join stream room', {\r\n          controlId: compId,\r\n          userId: username\r\n        });\r\n      } else if (roomComponent.has(compId)) {\r\n        setRoomComponent(prev => new Set([...prev].filter(x => x !== compId)));\r\n\r\n        socket.emit(\"leave stream room\", {\r\n          controlId: compId,\r\n          userId: username\r\n        });\r\n      }\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowBeam = () => {\r\n    setShowBeam(!showBeam)\r\n  }\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleShowManualWindow = () => {\r\n    setShowManual(!showManualWindow);\r\n  }\r\n\r\n  const toggleShowWelcomeWindow = () => {\r\n    setShowWelcome(!showWelcomeWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('overview')\r\n  }\r\n\r\n  const toggleunderConstruction = (newVal) => {\r\n    setUnderConstruction(newVal)\r\n  }\r\n\r\n  const toggleSetManualPage = (newVal) => {\r\n    setManualPage(newVal)\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        toggleLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        showCam,\r\n        toggleCam,\r\n        setRoomComponent,\r\n        toogleRoomComp,\r\n        showManualWindow,\r\n        toggleShowManualWindow,\r\n        showWelcomeWindow,\r\n        toggleShowWelcomeWindow,\r\n        underConstruction,\r\n        toggleunderConstruction,\r\n        manualPage,\r\n        toggleSetManualPage,\r\n        username,\r\n        setUsername,\r\n        socket,\r\n        setSocket\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__3Tl7P\",\"windowHeader\":\"Window_windowHeader__3sdoy\",\"windowFooter\":\"Window_windowFooter__2UqYD\",\"icon\":\"Window_icon__1XLwI\",\"iconClose\":\"Window_iconClose__2xmrX\"};","import { createTheme } from '@mui/material/styles';\r\n\r\n/**\r\n * Standard theme\r\n * \r\n * @description This theme is the default theme used.\r\n * \r\n * @returns theme\r\n */\r\nexport const theme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#01bd7d',\r\n        },\r\n    }\r\n})\r\n\r\n/**\r\n * Login theme\r\n * \r\n * @description This theme is used in the login window. The special feature here is that the contrast text is white and spaceing is set to two.\r\n * \r\n * @returns login theme\r\n */\r\n\r\nexport const themeLogin = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n    spacing: 2,\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__1-A5c\",\"chatMain\":\"Chat_chatMain__2MKlm\",\"msgForm\":\"Chat_msgForm__Lzuye\",\"chatHandler\":\"Chat_chatHandler__2PpcP\",\"openChat\":\"Chat_openChat__1uPdw\",\"closeChat\":\"Chat_closeChat__2CVMW\",\"buttonBlink\":\"Chat_buttonBlink__2OdHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"Description_mainWrapper__1Wfx9\"};","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div  style={{ position: 'fixed', top: '5.25%', right: '0.5%' }}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n} ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__3bbjP\",\"consoleMain\":\"Console_consoleMain__3VuoB\",\"consoleHandler\":\"Console_consoleHandler__1f5Pp\",\"openConsole\":\"Console_openConsole__2rHs7\",\"closeConsole\":\"Console_closeConsole__3Ij_U\"};"],"sourceRoot":""}