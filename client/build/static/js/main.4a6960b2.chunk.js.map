{"version":3,"sources":["components/Console/Console.module.css","components/UI/CSS/Window.module.css","components/UI/CSS/Settings.module.css","components/UI/CSS/NavBar.module.css","components/UI/CSS/RotaryCtrl.module.css","components/Login/Login.module.css","components/windows/InfoWindowContent.module.css","App.js","components/UI/experimentUI/NavBar.js","components/Console/Console.js","services/SocketContext.js","components/Chat/Chat.js","components/Login/Login.js","services/PopUp.module.css","components/UI/templates/RadioButton.js","components/UI/templates/Switch.js","components/UI/CtrlUnits/BeamSplitterCtrl.js","components/UI/experimentUI/Window.js","components/assembly/BeamSplitter.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/templates/ESPCamSettings.js","components/UI/CtrlUnits/Settings.js","components/assembly/ESPCamStream.js","components/UI/templates/HeaterSettings.js","components/UI/CtrlUnits/HeaterCtrl.js","components/assembly/Heater.js","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/media/rotary_outline.png","components/assembly/Rotary.js","components/UI/CtrlUnits/LaserCtrl.js","components/assembly/Laser.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/Chat/ViewCamStream.js","components/assembly/CamWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_230201.js","components/UI/experimentUI/VirtualLayer.js","index.js","services/AppContext.js","components/UI/templates/Theme.js","components/UI/CSS/HeaterCtrl.module.css","components/Chat/CSS/Chat.module.css","services/PopUpContext.js"],"names":["module","exports","App","process","title","NavBar","appCtx","useAppContext","socketCtx","useSocketContext","connectionStatusColor","connected","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showCam","showInfoWindowColor","showInfoWindow","showHelpWindowColor","showHelpWindow","showManualWindowColor","showManualWindow","useState","mobileVersion","setMobileVersion","openMobileVersion","Boolean","led","setLED","openLED","laserBeam","setLaserBeam","openLaserBeam","handleLED","closeLaserBeam","id","className","styles","navbar","theme","navMenuLaser","onClick","event","currentTarget","variant","sx","borderRadius","height","width","color","bgcolor","icon","MenuListProps","anchorEl","open","onClose","toggleShowBeam","disableRipple","navMenu","toggleConnection","toggleLogin","size","toggleAutoRotate","toggleShowTags","toggleCam","toggleShowManualWindow","toggleShowHelpWindow","toggleShowInfoWindow","mobile","memo","isEqual","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","logs","map","payload","index","consoleHandler","closeConsole","openConsole","manager","Manager","autoConnect","socket","SocketContext","createContext","jwt","require","useContext","SocketContextProvider","children","setConnected","username","setUsername","URL","setURL","fontColor","setFontColor","useEffect","Auth","emit","connect","e","addLog","disconnect","on","lastClosedComponent","controlId","userId","toogleLastComp","removeAllListeners","setNewURL","newURL","Provider","value","accessCode","close","sub","code","component","iat","Date","now","token","sign","auth","setNewFont","newFont","helperEmit","Chat","showChat","setShowChat","message","setMessage","chat","setChat","sendMessage","preventDefault","chatContainer","chatMain","style","msgForm","marginLeft","paddingTop","htmlFor","onChange","target","onKeyPress","key","endAdornment","position","edge","label","chatHandler","closeChat","openChat","Login","connectionOption","connection","setConnection","setAccessCode","handleLogin","String","error","showLogin","themeLogin","popupWindow","popupInner","fontSize","container","direction","justifyContent","alignItems","autoFocus","paddingRight","helperText","type","endIcon","RadioButton","val","radioButton","setRadioButton","handleChange","a","option","status","FormControl","FormLabel","RadioGroup","row","aria-labelledby","name","FormControlLabel","disabled","online","control","Radio","SwiitchCtrl","switchValue","setSwitchValue","switchStatus","Box","m","FormGroup","Stack","spacing","Typography","start","Switch","checked","newValue","inputProps","end","BeamSplitterCtrl","switchWhiteIsOn","setSwitchWhiteStatus","switchRedIsOn","setSwitchRedStatus","selectionStatus","setSelectionStatus","onlineStatus","setOnlineStatus","redLED","isOn","whiteLED","busy","state","getStatus","ThemeProvider","mx","component2","pinhole","Window","lastChange","setLastChange","alertType","setAlertType","footer","setFooter","alert","setAlert","popupCtx","usePopUpContext","Footer","componentList","includes","time","getHours","getMinutes","getSeconds","getDay","getMonth","getFooter","handle","window","top","left","windowHeader","display","cursor","float","header","reset","toggleSelectedComp","windowContent","background","windowFooter","difH","difMin","timeNow","difSec","toggleShowPopUp","windowInfo","BeamSplitter","controlId2","controlLED","controlLED2","rotation","rotationTop","SliderCtrl","sliderValue","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","text","gutterBottom","mb","Slider","aria-label","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","fullWidth","InputLabel","command","ESPCamSettings","Settings","frameSize","switchIsOn","contrast","exposure","smallSetting","settings","setSettings","setSwitchStatus","setFrameSize","setContrast","setExposure","x1","x2","y1","y2","ctx","document","getElementById","gray","data","uint8Arr","Uint8Array","binary","i","length","fromCharCode","base64String","btoa","img","Image","onload","canvas","getContext","drawImage","this","src","IconButton","smallSettings","Canvas","constrast","ESPCamStream","innerWidth","LED","HeaterSettings","Temp","Canvas2","Button","marginTop","marginBottom","startIcon","zIndex","averageTime","updateTime","HeaterCtrl","powerSwitch","setPowerSwitch","powerValue","setPowerValue","setting","temp","setTemp","setAverageTime","setUpdateTime","pwm","componentT","string","toFixed","Canvas1","Heater","controlIdHeater","controlIdThermistor","RotaryCtrl","enteredRotation","setEnteredRotation","setRotation","absolute","rotCW_Handler","Number","move","rotaryCtrl","CtrlLeft","CtrlRight","Rotary","Rotary_bg","LaserCtrl","setSwitch","vertical-align","Laser","KM100","controlIdBottom","controlIdTop","KM100_Background","rotationBottom","SM1ZP","SM1ZP_bg","MichelsonInterferometer","zero","innerHeight","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","selected","has","InfoWindowContent","mainWrapper","href","bgTeam","alt","InfoWindow","ViewCam","peerConnection","offer","peer","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","localDescription","ontrack","srcObject","streams","onicecandidate","candidate","addIceCandidate","RTCIceCandidate","catch","console","setAttribute","autoPlay","playsInline","RTCPeerConnection","iceServers","urls","ExperimentUILayer","CamWindow","toggleSelect","selectedComps","DescriptiveTag","Html","zIndexRange","borderLeft","description","Model","useRef","useGLTF","nodes","materials","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","Math","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","PlaneMesh","WhiteParts","PlaneMesh_1","LaserMesh","LaserMesh_1","SD5","showBeam","Cylinder","Cylinder_1","LaserBeam","emissive","emissiveIntensity","Cylinder007","Cylinder007_1","LaserBeamBS","showLED","LEDLightWhite","LEDWhite","LEDLightRed","LEDRed","TranslateMirrorMesh005","TranslateMirrorMesh005_1","TranslateMirrorMesh005_2","TranslateMirrorBase","Cylinder008","Cylinder008_1","Cylinder008_2","Cylinder008_3","Cylinder008_4","Cylinder008_5","TranslateMirrorMesh004","TranslateMirrorMesh004_1","BS_slimHolder001","BS_slimHolder","BaseMesh001","BaseMesh001_1","BaseMesh001_2","BaseMesh001_3","preload","VirtualLayer","showVirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_230201","ReactDOM","render","AppContext","React","AppContextProvider","setLastClosedComponent","setShowVirtualLayer","Set","setSelectedComps","setShowInfoWindow","setSmallSetting","setAutoRotate","showRotary","setShowRotary","setShowLogin","setShowBeam","setShowTags","setShowCam","setShowLED","setLogs","compId","prev","filter","x","add","toggleShowVirtualLayer","log","newVal","toggleShowLED","toggleChangeRotary","createTheme","palette","mode","primary","light","main","dark","contrastText","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","setText","setType","errmsg","newText","newType","autoHideDuration","reason","popUp","severity"],"mappings":"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","file":"static/js/main.4a6960b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__2M4_v\",\"consoleMain\":\"Console_consoleMain__3PA3Q\",\"consoleHandler\":\"Console_consoleHandler__1s8wN\",\"openConsole\":\"Console_openConsole__EoPR2\",\"closeConsole\":\"Console_closeConsole__3fUaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__bP_tv\",\"windowHeader\":\"Window_windowHeader__3dGvs\",\"windowFooter\":\"Window_windowFooter__32UEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Settings_Canvas__3PUPd\",\"Settings\":\"Settings_Settings__vSiuu\",\"Cam\":\"Settings_Cam__1Pqxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__3PxRA\",\"navMenu\":\"NavBar_navMenu__pAShU\",\"navMenuLaser\":\"NavBar_navMenuLaser__2I-gB\",\"mobile\":\"NavBar_mobile__2AMvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__5PhHk\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__22lvT\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__3xHkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__F7FYl\",\"close\":\"Login_close__29SJu\",\"popupWindow\":\"Login_popupWindow__2dTT4\",\"popupInner\":\"Login_popupInner__2jRMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__3FTCe\"};","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import { MdOutlineScreenRotation, MdInfoOutline, MdOutlineHelp, MdOutlineMenuBook } from 'react-icons/md';\r\nimport { MenuItem, Menu, ThemeProvider, IconButton, Tooltip } from '@mui/material';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport { ImConnection } from 'react-icons/im'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport { theme } from './../templates/Theme'\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa';\r\nimport { memo, useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let autoRotateColor = '';\r\n    if (appCtx.autoRotate) { autoRotateColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n    let showHelpWindowColor = '';\r\n    if (appCtx.showHelpWindow) { showHelpWindowColor = 'white' }\r\n    let showManualWindowColor = '';\r\n    if (appCtx.showManualWindow) { showManualWindowColor = 'white' }\r\n\r\n    const [mobileVersion, setMobileVersion] = useState(null);\r\n    const openMobileVersion = Boolean(mobileVersion);\r\n\r\n    const [led, setLED] = useState(null);\r\n    const openLED = Boolean(led)\r\n\r\n    const [laserBeam, setLaserBeam] = useState(null);\r\n    const openLaserBeam = Boolean(laserBeam)\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setMobileVersion(event.currentTarget);\r\n    };\r\n\r\n    const handleClick2 = (event) => {\r\n        setLED(event.currentTarget);\r\n    };\r\n\r\n    const handleLaserBeam = (event) => {\r\n        setLaserBeam(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileVersion = () => {\r\n        setMobileVersion(null);\r\n    };\r\n    const handleLED = () => {\r\n        setLED(null);\r\n    };\r\n\r\n    const closeLaserBeam = () => {\r\n        setLaserBeam(null);\r\n    };\r\n\r\n    return (\r\n        <div id='navbar' className={styles.navbar} >\r\n            <ThemeProvider theme={theme} >\r\n                <h1>XR TwinLab</h1>\r\n                <div className={styles.navMenuLaser}>\r\n                    <h3>Overlay:</h3>\r\n\r\n                    <IconButton onClick={handleClick2} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <Icon icon=\"mdi:led-off\" width=\"70\" height=\"70\" />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={led}\r\n                        open={openLED}\r\n                        onClose={handleLED}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowBeam('none');\r\n                        }} disableRipple >None</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowBeam('white');\r\n                        }} disableRipple>White</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            handleLED();\r\n                            appCtx.toggleShowBeam('red');\r\n                        }} disableRipple>Red</MenuItem>\r\n                    </Menu>\r\n\r\n                    <IconButton onClick={handleLaserBeam} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <GiLaserWarning />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={laserBeam}\r\n                        open={openLaserBeam}\r\n                        onClose={closeLaserBeam}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('on');\r\n                        }} disableRipple >On</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('off');\r\n                        }} disableRipple>Off</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            closeLaserBeam();\r\n                            appCtx.toggleShowBeam('split');\r\n                        }} disableRipple>Beamsplitter</MenuItem>\r\n                    </Menu>\r\n\r\n\r\n                </div>\r\n                <div className={styles.navMenu}>\r\n                    <ul>\r\n                        <Tooltip title='Connnection'>\r\n                            <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29} color={connectionStatusColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Rotation'>\r\n                            <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Labels'>\r\n                            <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Webcam'>\r\n                            <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Manual'>\r\n                            <li onClick={appCtx.toggleShowManualWindow}><MdOutlineMenuBook size={26} color={showManualWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Help'>\r\n                            <li onClick={appCtx.toggleShowHelpWindow}><MdOutlineHelp size={26} color={showHelpWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Information'>\r\n                            <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                        </Tooltip>\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className={styles.mobile}>\r\n                    <IconButton onClick={handleClick} variant=\"contained\" sx={{\r\n                        borderRadius: 1,\r\n                        height: '33px',\r\n                        width: '30px',\r\n                        color: 'black',\r\n                        ':hover': {\r\n                            bgcolor: 'darkgreen',\r\n                            color: '#00ffa8',\r\n                        },\r\n                    }}>\r\n                        <KeyboardArrowDownIcon color={'white'} />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"demo-customized-menu\"\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'demo-customized-button',\r\n                        }}\r\n                        anchorEl={mobileVersion}\r\n                        open={openMobileVersion}\r\n                        onClose={handleMobileVersion}\r\n                    >\r\n                        <MenuItem onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }} disableRipple>\r\n                            <ImConnection size={29} sx={{ width: '10px' }} />\r\n                            Connection\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleAutoRotate} disableRipple>\r\n                            <MdOutlineScreenRotation size={26} />\r\n                            Rotation\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleShowTags} disableRipple>\r\n                            <FaTags size={25} />\r\n                            Tags\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleCam} disableRipple>\r\n                            <MdOutlineMenuBook size={26} />\r\n                            Manual\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleShowManualWindow} disableRipple>\r\n                            <MdOutlineHelp size={26} />\r\n                            Help\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleShowHelpWindow} disableRipple>\r\n                            <BsCamera size={26} />\r\n                            Cam\r\n                        </MenuItem>\r\n                        <MenuItem onClick={appCtx.toggleShowInfoWindow} disableRipple>\r\n                            <MdInfoOutline size={26} />\r\n                            Info\r\n                        </MenuItem>\r\n\r\n                    </Menu>\r\n                </div>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\nexport default memo(NavBar, isEqual)\r\n","import { useAppContext } from '../../services/AppContext'\nimport { RiTerminalBoxFill } from 'react-icons/ri'\nimport styles from './Console.module.css'\nimport { useState, memo } from 'react'\nimport { isEqual } from 'lodash';\n\nconst Console = (props) => {\n  const [showConsole, setShowConsole] = useState(false);\n  const [animation, setAnimation] = useState('');\n  const appCtx = useAppContext();\n\n  const showConsoleHandler = () => {\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\n    setShowConsole(!showConsole)\n  }\n\n  return (\n    <div className={styles.consoleContainer + ' ' + animation}>\n      <div className={styles.consoleMain}>\n        {appCtx.logs.map((payload, index) => {\n          return (<span key={index}>{payload}<br /></span>)\n        })}\n      </div>\n      <div className={styles.consoleHandler}>\n        <span>\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\n        </span>\n      </div>\n    </div>\n  )\n}\nexport default memo(Console, isEqual);\n","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const Auth = (color) => {\r\n      setFontColor(color);\r\n      socket.emit('newUserInfo', username)\r\n    }\r\n\r\n    const connect = (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    socket.on('Auth', Auth);\r\n\r\n    if (appCtx.lastClosedComponent === 'screen') {\r\n      socket.emit(\"leave stream room\", { controlId: 'screen', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'heater') {\r\n      socket.emit('leave stream room', { controlId: 'heater', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'Cam_1') {\r\n      socket.emit('watcher disconnect');\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('Auth', Auth)\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username, accessCode) => {\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        code: accessCode,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      //secure: true, rejectUnauthorized: false}\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import { useSocketContext } from '../../services/SocketContext';\nimport { theme } from '../../components/UI/templates/Theme';\nimport { useEffect, useState, memo } from 'react'\nimport styles from './CSS/Chat.module.css'\nimport { ImBubble } from 'react-icons/im'\nimport { MdSend } from 'react-icons/md'\nimport { isEqual } from 'lodash';\nimport { ThemeProvider, InputAdornment, IconButton, FormControl, InputLabel, OutlinedInput } from '@mui/material';\nconst Chat = () => {\n  const [showChat, setShowChat] = useState(false);\n  const [animation, setAnimation] = useState('');\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  const socketCtx = useSocketContext();\n\n  useEffect(() => {\n    const message = (payload) => {\n      setChat([...chat, payload]);\n    }\n\n    socketCtx.socket.on('message', message);\n\n    return () => {\n      socketCtx.socket.removeAllListeners('message', message);\n    }\n  }, [socketCtx, chat])\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\n    setMessage('');\n  }\n\n  const showChatHandler = () => {\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\n    setShowChat(!showChat);\n  }\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  return (\n    <div\n      className={styles.chatContainer + ' ' + animation}\n    >\n      <div className={styles.chatMain}>\n        {chat.map((payload, index) => {\n          return (\n            <b key={index} >\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\n              <br />\n            </b>\n          )\n        })}\n      </div>\n      <form className={styles.msgForm}>\n        <ThemeProvider theme={theme}>\n\n          <FormControl sx={{ marginLeft: -4, width: 3 / 3, paddingTop: 1 }} variant=\"outlined\">\n            <InputLabel htmlFor=\"outlined-adornment-password\">Message  </InputLabel>\n            <OutlinedInput\n              onChange={handleChange}\n              onKeyPress={(e) => { if (e.key === 'Enter') { sendMessage(e); } }}\n              value={message}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={sendMessage}\n                    edge=\"end\"\n                  >\n                    <MdSend />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Message\"\n            />\n          </FormControl>\n        </ThemeProvider>\n      </form>\n      <div className={styles.chatHandler + ' ' + animation}>\n        <span>\n          <ImBubble size={35} onClick={showChatHandler} />\n        </span>\n      </div>\n    </div>\n  )\n}\nexport default memo(Chat, isEqual);","import HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { TextField, ThemeProvider, Button, IconButton, Grid } from '@mui/material';\r\nimport { themeLogin } from '../../components/UI/templates/Theme';\r\nimport { useSocketContext } from '../../services/SocketContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './Login.module.css';\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'https://xrtl.uni-jena.de' }]\r\n    const [connection, setConnection] = useState(null);\r\n    const [accessCode, setAccessCode] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleLogin = () => {\r\n        if (username !== '' && accessCode !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection), String(username));\r\n                socketCtx.toggleConnection(String(username), String(accessCode));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n        setConnection(connectionOption[1].title);\r\n    };\r\n\r\n    const handleAccessCode = (event) => {\r\n        setAccessCode(event.target.value);\r\n    };\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={themeLogin}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Login</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <TextField\r\n                            autoFocus\r\n                            variant='outlined'\r\n                            label='Username '\r\n                            value={username}\r\n                            onChange={handleChange}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{ marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={username === ''}\r\n                            helperText={username === '' ? 'Enter your username!' : ' '}\r\n                        />\r\n\r\n                        <TextField\r\n                            variant='outlined'\r\n                            label='Access code '\r\n                            value={accessCode}\r\n                            onChange={handleAccessCode}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            style={{  marginLeft: '0%', width: '200px', paddingRight: '25%' }}\r\n                            error={accessCode === ''}\r\n                            helperText={accessCode === '' ? 'Enter the access code!' : ' '}\r\n                        />\r\n                    </Grid>\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: '20%', height: '15%' }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__2QIb1\"};","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { FormControl, RadioGroup, FormControlLabel, Radio, FormLabel } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst RadioButton = (props) => {\r\n    const [radioButton, setRadioButton] = useState(props.val);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    const handleChange = async (event) => {\r\n        setRadioButton(event.target.value)\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: event.target.value,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set position on \" + props.component + \" to \" + radioButton)\r\n    }\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">{props.title}</FormLabel>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                value={props.val}\r\n                onChange={handleChange}\r\n            >\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'none'} control={<Radio />} label=\"None\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'splitter'} control={<Radio />} label=\"Beam splitter\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'pinhole'} control={<Radio />} label=\"Pinhole\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'rled'} control={<Radio />} label=\"Red LED\" />\r\n                <FormControlLabel disabled={(socketCtx.connected && props.online) ? false : true} value={'wled'} control={<Radio />} label=\"White LED\" />\r\n\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default RadioButton;","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    try {\r\n        props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n    } catch (error) { }\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n            color: socketCtx.fontColor,\r\n\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 250, m: 2 }}>\r\n            <FormGroup>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { theme } from '../templates/Theme.js'\r\nimport RadioButton from '../templates/RadioButton';\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from '../templates/Switch';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst BeamSplitterCtrl = (props) => {\r\n    const [switchWhiteIsOn, setSwitchWhiteStatus] = useState(false);\r\n    const [switchRedIsOn, setSwitchRedStatus] = useState(false);\r\n    const [selectionStatus, setSelectionStatus] = useState(80);\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.redLED) {\r\n                setSwitchRedStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.whiteLED) {\r\n                setSwitchWhiteStatus(payload.status.isOn);\r\n            }\r\n            else if (payload.controlId === props.component) {\r\n                (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n                setSelectionStatus(payload.status.state)\r\n            }\r\n            //console.log(\"Status of settings:   \", payload)\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.redLED,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.whiteLED,\r\n            getStatus: true\r\n        })\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps      \r\n    }, [socketCtx.socket]);\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ mx: 1 }}>\r\n                <RadioButton component={props.component} component2={props.pinhole} online={onlineStatus} val={selectionStatus} option=\"state\" />\r\n                <Switch component={props.whiteLED} switchStatus={switchWhiteIsOn} online={onlineStatus} start='LED white Off' end='On' option='switch' />\r\n                <Switch component={props.redLED} switchStatus={switchRedIsOn} online={onlineStatus} start='LED red Off' end='On' option='switch' />\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default BeamSplitterCtrl\r\n","import { IoReloadOutline, IoInformationCircleOutline } from 'react-icons/io5'\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport { usePopUpContext } from '../../../services/PopUpContext';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/Window.module.css';\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { memo, useEffect } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { isEqual } from 'lodash';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Window = (props) => {\r\n  const [lastChange, setLastChange] = useState(props.lastChange);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState('Initializing... ');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.footer) {\r\n      setFooter('empty');\r\n    }\r\n\r\n    const Footer = (payload) => {\r\n      if (props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (props.componentList.includes(payload.controlId)) {\r\n        setFooter(String(payload.status))\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.on('footer', Footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('footer', Footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n\r\n    if (props.id === \"Cam_1\") {\r\n      appCtx.toggleCam();\r\n    }\r\n\r\n    if (props.id === \"info\") {\r\n      appCtx.toggleShowInfoWindow();\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.componentList[0],\r\n      reset: true\r\n    })\r\n\r\n    if (props.componentList[1]) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.componentList[1],\r\n        reset: true\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 50px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={handleReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={handleCloseWindow}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: 'url(' + props.background + ')',\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {footer !== 'empty' && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={handleInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);","import BeamSplitterCtrl from \"../UI/CtrlUnits/BeamSplitterCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\n\r\nconst BeamSplitter = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId, props.controlId2, props.controlLED, props.controlLED2]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"190px\"\r\n      width=\"360px\"\r\n\r\n    >\r\n      <BeamSplitterCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlId}\r\n        pinhole={props.controlId2}\r\n        redLED={props.controlLED}\r\n        whiteLED={props.controlLED2}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default BeamSplitter;\r\n","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderValue);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    setSliderPos(newValue)\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: newValue,\r\n      color: socketCtx.fontColor,\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 300, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={90}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState(props.selectValue);\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue.props.value,\r\n            color: socketCtx.fontColor,\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set selected \" + props.component + \" with \" + selectValue)\r\n    }\r\n    if (props.title === 'Resolution') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={10}>XGA (1024x768)</MenuItem>\r\n                <MenuItem value={9}>SVGA (800x600)</MenuItem>\r\n                <MenuItem value={8}>VGA (640x480)</MenuItem>\r\n                <MenuItem value={5}>QVGA (320x240)</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n    else if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={props.selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={5000}>5</MenuItem>\r\n                <MenuItem value={10000}>10</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\r\nimport { FormControl, InputLabel, Box } from '@mui/material';\r\nimport SelectItem from './SelectItem'\r\n\r\nconst SelectCtrl = (props) => {\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >{props.title}</InputLabel>\r\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} selectValue={props.selectValue} />\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\nexport default SelectCtrl;","import { ThemeProvider } from '@mui/material/styles';\r\nimport styles from '../CSS/Settings.module.css';\r\nimport { theme } from '../templates/Theme.js';\r\nimport Slider from '../templates/SliderCtrl';\r\nimport Switch from '../templates/Switch';\r\nimport Select from '../templates/Select';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst ESPCamSettings = (props) => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Settings}>\r\n                <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n                <Select title='Resolution' component={props.component} online={props.online} option='frameSize' selectValue={props.frameSize} />\r\n                <Switch component={props.component} switchStatus={props.switchIsOn} online={props.online} start='Color' end='Gray' option='gray' />\r\n                <Slider title='Contrast' component={props.component} online={props.online} sliderValue={props.contrast} min={-2} max={2} option='contrast' />\r\n                <Slider title='Exposure' component={props.component} online={props.online} sliderValue={props.exposure} min={0} max={500} option='exposure' />\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default ESPCamSettings;","import { useSocketContext } from '../../../services/SocketContext';\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\nimport { useAppContext } from '../../../services/AppContext';\nimport ESPCamSettings from '../templates/ESPCamSettings';\nimport { ThemeProvider } from '@mui/material/styles';\nimport styles from '../CSS/Settings.module.css'\nimport { theme } from '../templates/Theme.js';\nimport { useState, useEffect } from 'react';\nimport { IconButton } from '@mui/material';\n\nconst Settings = (props) => {\n    const appCtx = useAppContext();\n    const [settings, setSettings] = useState(appCtx.smallSetting);\n    const [onlineStatus, setOnlineStatus] = useState(false);\n    const [switchIsOn, setSwitchStatus] = useState(false);\n    const [frameSize, setFrameSize] = useState(0);\n    const [contrast, setContrast] = useState(0);\n    const [exposure, setExposure] = useState(0);\n    const socketCtx = useSocketContext();\n\n    const hiddenSetting = () => {\n        setSettings(!settings);\n        appCtx.smallSettings()\n        if (appCtx.smallSetting) {\n            document.getElementById('ScreenCanvas').style.left = '-340px'\n        } else {\n            document.getElementById('ScreenCanvas').style.left = '-655px'\n        }\n    }\n\n    useEffect(() => {\n        var x1, x2, y1, y2;\n        var ctx;\n\n        if (props.width === '700px') {\n            document.getElementById('ScreenCanvas').style.left = '-340px'\n        }\n\n        const status = (payload) => {\n            if (payload.controlId === props.component) {\n                setOnlineStatus(true)\n                setSwitchStatus(payload.status.gray)\n                setExposure(payload.status.exposure)\n                setContrast(payload.status.contrast)\n                setFrameSize(payload.status.frameSize)\n                //console.log('Status of settings:   ', payload)\n            }\n        }\n\n        const data = (payload) => {\n            if (payload.controlId === props.component) {\n                var uint8Arr = new Uint8Array(payload.data);\n                var binary = '';\n                for (var i = 0; i < uint8Arr.length; i++) {\n                    binary += String.fromCharCode(uint8Arr[i]);\n                }\n                var base64String = window.btoa(binary);\n\n                var img = new Image();\n                img.onload = function () {\n                    var canvas = document.getElementById('ScreenCanvas');\n                    if (canvas != null && settings) {\n                        ctx = canvas.getContext('2d');\n                        x1 = 0;\n                        y1 = 0;\n                        x2 = 600;\n                        y2 = 400;\n                        ctx.drawImage(this, x1, y1, x2, y2);\n                    } else {\n                        ctx = canvas.getContext('2d');\n                        x1 = 0;\n                        y1 = 0;\n                        x2 = 600;\n                        y2 = 400;\n                        ctx.drawImage(this, x1, y1, x2, y2);\n                    }\n                };\n                img.src = 'data:image/jpg;base64,' + base64String;\n            }\n        }\n\n        socketCtx.socket.emit('command', {\n            userId: socketCtx.username,\n            controlId: props.component,\n            getStatus: true\n        })\n\n        socketCtx.socket.emit('join stream room', {\n            controlId: props.component,\n            userId: socketCtx.username\n        });\n\n        socketCtx.socket.emit('getFooter', props.component)\n\n        socketCtx.socket.on('status', status);\n\n        socketCtx.socket.on('data', data);\n\n        return () => {\n            socketCtx.socket.removeAllListeners('status', status)\n            socketCtx.socket.removeAllListeners('data', data)\n        }\n        //Comment needed to prevent a warning\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [socketCtx.socket]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={styles.Settings}>\n                <IconButton onClick={hiddenSetting}  >\n                    <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\n                </IconButton>\n                <div className={styles.Canvas}>\n                    <canvas id='ScreenCanvas' width={'600px'} height={'400px'} />\n                </div>\n                {settings && <ESPCamSettings component={props.component} online={onlineStatus} constrast={contrast} exposure={exposure} switchIsOn={switchIsOn} frameSize={frameSize} />}\n            </div>\n        </ThemeProvider>\n    )\n}\nexport default Settings;","import Settings from '../UI/CtrlUnits/Settings';\nimport Window from '../UI/experimentUI/Window';\nimport { useAppContext } from '../../services/AppContext';\n\nconst ESPCamStream = (props) => {\n  const appCtx = useAppContext();\n  var width = window.innerWidth\n  var height = 0;\n\n  if (0 < width && width < 576) {\n    width = '350px'\n    height = '260px'\n  }\n  else if (576 < width && width < 768) {\n    width = '510px'\n    height = '340px'\n  }\n  else if (768 < width && width < 1000) {\n    width = '650px'\n    height = '430px'\n  } else {\n    width = '1000px'\n    height = '430px'\n  }\n\n  if (appCtx.smallSetting && width === '1000px') {\n    width = '1000px'\n  } else if(!appCtx.smallSetting && width === '1000px') {\n    width = '700px'\n  }\n\n  return (\n    <Window\n      id={props.controlId}\n      componentList={[props.controlId]}\n      header={props.title}\n      top={props.top}\n      left={props.left}\n      width={width}\n      height={height}\n    >\n      <Settings\n        component={props.controlId}\n        led={props.LED}\n        width={width}\n      />\n    </Window>\n  );\n};\nexport default ESPCamStream;","import DeviceThermostatOutlinedIcon from '@mui/icons-material/DeviceThermostatOutlined';\r\nimport { Button } from '@mui/material';\r\nimport styles from '../CSS/HeaterCtrl.module.css';\r\nimport Select from './Select'\r\n\r\nconst HeaterSettings = (props) => {\r\n\r\n    return (\r\n        <div className={styles.Temp}>\r\n            <div className={styles.Canvas2}>\r\n                <Button sx={{ fontSize: 17, marginLeft: -34, marginTop: -4, marginBottom: 10 }} startIcon={<DeviceThermostatOutlinedIcon />}>Gauge settings </Button>\r\n                <div className={styles.Select}>\r\n                    <Select sx={{ zIndex: 1500, marginBottom: -10 }} title='Average time (ms)' component={props.component} online={props.online} option='averageTime' selectValue={props.averageTime} />\r\n                    <Select title='Update time (s)' component={props.component} online={props.online} option='updateTime' selectValue={props.updateTime} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default HeaterSettings;","import { ThemeProvider, Button, IconButton, Typography } from '@mui/material';\r\nimport MicrowaveOutlinedIcon from '@mui/icons-material/MicrowaveOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport { useSocketContext } from '../../../services/SocketContext';\r\nimport styles from '../CSS/HeaterCtrl.module.css';\r\nimport { theme } from '../templates/Theme.js';\r\nimport Slider from '../templates/SliderCtrl';\r\nimport { useState, useEffect } from 'react';\r\nimport Switch from '../templates/Switch'\r\nimport HeaterSettings from '../templates/HeaterSettings'\r\n\r\nconst HeaterCtrl = (props) => {\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [powerSwitch, setPowerSwitch] = useState(false);\r\n    const [powerValue, setPowerValue] = useState(0);\r\n    const [setting, setSettings] = useState(false);\r\n    const [temp, setTemp] = useState('-°C');\r\n    const [averageTime, setAverageTime] = useState(0);\r\n    const [updateTime, setUpdateTime] = useState(0);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    const hiddenSetting = () => {\r\n        setSettings(!setting);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                setPowerSwitch(payload.status.isOn)\r\n                setPowerValue(payload.status.pwm)\r\n\r\n               // console.log(\"Status  \", payload)\r\n            }\r\n\r\n            if (payload.controlId === props.componentT) {\r\n                setAverageTime(payload.status.averageTime);\r\n                setUpdateTime(payload.status.updateTime);\r\n                // console.log(\"Status  Thermistor\", payload)\r\n            }\r\n        }\r\n\r\n        const data = (payload) => {\r\n            if (payload.controlId === props.componentT) {\r\n                var string = payload.data.data;\r\n                try { string = string.toFixed(1) + \" °C\" } catch (e) { string = '-°C' }\r\n                setTemp(string);\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.componentT,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('join stream room', {\r\n            controlId: props.componentT,\r\n            userId: socketCtx.username\r\n        });\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status);\r\n\r\n        socketCtx.socket.on('data', data);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('data', data)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.Temp}>\r\n                <Typography id='temp' variant='h2'>{temp}</Typography>\r\n                <IconButton onClick={hiddenSetting}  >\r\n                    <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                </IconButton>\r\n            </div>\r\n            <div className={styles.Canvas1}>\r\n                <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                <Slider title='PowerSwitch' component={props.component} online={onlineStatus} sliderValue={powerValue} min={0} max={255} option='pwm' />\r\n\r\n            </div>\r\n            <div className={styles.Switch} >\r\n                <Switch component={props.component} online={onlineStatus} switchStatus={powerSwitch} start='Off' end='On' option='switch' />\r\n            </div>\r\n            {setting && <HeaterSettings online={true} component={props.componentT} updateTime={updateTime} averageTime={averageTime} />}\r\n        </ThemeProvider>\r\n    )\r\n\r\n}\r\nexport default HeaterCtrl;\r\n","import HeaterCtrl from '../UI/CtrlUnits/HeaterCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Heater = (props) => {\r\n\r\n    return (\r\n        <Window\r\n            id={props.id}\r\n            componentList={[props.controlIdHeater, props.controlIdThermistor]}\r\n            header={props.title}\r\n            top={props.top}\r\n            left={props.left}\r\n            height='340px'\r\n            width='673px'\r\n        >\r\n            <HeaterCtrl\r\n                component={props.controlIdHeater}\r\n                componentT={props.controlIdThermistor}\r\n            />\r\n        </Window>\r\n    )\r\n}\r\nexport default Heater;","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        controlId: props.component,\r\n        move: direction,\r\n        color: socketCtx.fontColor,\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Last change by: ' + socketCtx.username,\r\n        controlId: props.component\r\n      });\r\n\r\n      /*  if (rotation > 5000 || rotation > -5000) {\r\n         appCtx.toggleChangeRotary();\r\n       } else {\r\n         appCtx.toggleChangeRotary();\r\n       } */\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    setEnteredRotation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","export default __webpack_public_path__ + \"static/media/rotary_outline.c6f9b7e7.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Rotary_bg from './media/rotary_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Rotary = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={Rotary_bg}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top='10'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default Rotary;\r\n","import { ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { GiLaserWarning } from \"react-icons/gi\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { theme } from '../templates/Theme.js';\r\nimport Switch from '../templates/Switch';\r\nimport { Box } from '@mui/material';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <div className=\"switchOnOff\">\r\n      <ThemeProvider theme={theme} >\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n          <Switch component={props.component} icon={document.getElementById(\"icon\")} online={onlineStatus} switchStatus={switchIsOn} start='Off' end='On' option=\"switch\" />\r\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\nexport default LaserCtrl\r\n","import LaserCtrl from '../UI/CtrlUnits/LaserCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst Laser = (props) => {\r\n\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='200px'\r\n      width='300px'\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n        top='0'\r\n        left='0'\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst KM100 = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.id}\r\n      componentList={[props.controlIdBottom, props.controlIdTop]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      \r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport SM1ZP_bg from './media/linear_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\n\r\nconst SM1ZP = (props) => {\r\n  return (\r\n    <Window\r\n      id={props.controlId}\r\n      componentList={[props.controlId]}\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      background={SM1ZP_bg}\r\n\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import BeamSplitter from '../../assembly/BeamSplitter';\r\nimport ESPCam from '../../assembly/ESPCamStream';\r\nimport Heater from '../../assembly/Heater';\r\nimport Rotary from '../../assembly/Rotary';\r\nimport Laser from '../../assembly/Laser';\r\nimport KM100 from '../../assembly/KM100';\r\nimport SM1ZP from '../../assembly/SM1ZP';\r\n\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = 'Initializing...'\r\n  var zero = '0'\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has('KM100_1') && (\r\n        <KM100\r\n          title='Reference Mirror'\r\n          id={'KM100_1'}\r\n          controlIdTop={'KM100_top_1'}\r\n          controlIdBottom={'KM100_bottom_1'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has('linear_1') && (\r\n        <SM1ZP\r\n          title='Linear Movable Mirror'\r\n          controlId={'linear_1'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Rotary stage plate*/}\r\n      {props.selected.has('plate_rotation') && (\r\n        <Rotary\r\n          title='Glass Plate Rotation Stage'\r\n          controlId={'plate_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Rotary stage Measurement Mirror*/}\r\n      {props.selected.has('heater_rotation') && (\r\n        <Rotary\r\n          title='Mirror Changing Stage'\r\n          controlId={'heater_rotation'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topHighMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has('greenlaser_1') && (\r\n        <KM100\r\n          title='Laser Alignment'\r\n          id={'greenlaser_1'}\r\n          controlIdTop={'greenlaser_top_1'}\r\n          controlIdBottom={'greenlaser_bottom_1'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has('greenlaserPower_1') && (\r\n        <Laser\r\n          title='Power Supply'\r\n          id={'greenlaserPower_1'}\r\n          controlId={'greenlaser_1'}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has('screen') && (\r\n        <ESPCam\r\n          title='Screen'\r\n          controlId={'screen'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n      {/* Heater */}\r\n      {props.selected.has('heater') && (\r\n        <Heater\r\n          title='Heatable Mirror Stage'\r\n          id={'heater'}\r\n          controlIdHeater={'heater'}\r\n          controlIdThermistor={'thermistor'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n\r\n      {/* Beam splitter */}\r\n      {props.selected.has('experimentSelection') && (\r\n        <BeamSplitter\r\n          title='Multi Component Selection'\r\n          controlId={'experimentSelection'}\r\n          controlId2={'pinhole'}\r\n          controlLED={'redLED'}\r\n          controlLED2={'whiteLED'}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={halfWidth}\r\n        />\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default MichelsonInterferometer;","export default __webpack_public_path__ + \"static/media/xrtl_team.519a843e.png\";","import styles from \"./InfoWindowContent.module.css\"\r\nimport bgTeam from \"../media/images/xrtl_team.png\"\r\n\r\nconst InfoWindowContent = (props) => {\r\n  return (\r\n    <div>\r\n\r\n      <div className={styles.mainWrapper}      >\r\n        Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\r\n        <p>\r\n          This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n        </p>\r\n        <p>\r\n          Best! Clara, Falko, Jari and Johannes\r\n        </p>\r\n      </div>\r\n      <img className={styles.img} src={bgTeam} alt='XRTL Team' />\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;\r\n","import Window from \"../UI/experimentUI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            id='info'\r\n            top=\"10\"\r\n            left=\"20\"\r\n            width=\"30\"\r\n            height=\"80\"\r\n            footer={'empty'}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import { useSocketContext } from '../../services/SocketContext'\nimport { useEffect } from 'react';\n\nconst ViewCam = (props) => {\n    const socketCtx = useSocketContext();\n\n    useEffect(() => {\n        var peerConnection;\n        \n        const offer = (payload) => {\n            peerConnection = props.peer;\n            peerConnection\n            .setRemoteDescription(payload.data)\n            .then(() => peerConnection.createAnswer())\n            .then((sdp) => peerConnection.setLocalDescription(sdp))\n            .then(() => socketCtx.socket.emit('answer', { id: payload.id, data: peerConnection.localDescription }))\n            \n            peerConnection.ontrack = (event) => {\n                document.getElementById('video').srcObject = event.streams[0];\n            }\n            \n            peerConnection.onicecandidate = (event) => {\n                if (event.candidate) {\n                    socketCtx.socket.emit('candidate', { id: payload.id, data: event.candidate })\n                }\n            }\n        }\n        \n        const candidate = (payload) => {\n            peerConnection\n                .addIceCandidate(new RTCIceCandidate(payload.data))\n                .catch(e => console.error(e))\n        }\n\n        document.getElementById('video').setAttribute('style', 'transform: rotate(180deg)')\n\n        socketCtx.socket.emit('viewer', props.component)\n\n        socketCtx.socket.on('offer', offer)\n\n        socketCtx.socket.on('candidate', candidate)\n\n        return () => {\n            socketCtx.socket.removeAllListeners('offer', offer)\n            socketCtx.socket.removeAllListeners('candidate', candidate)\n        }\n        //Comment needed to prevent a warning\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div>\n            <video className=\"video\" id='video' autoPlay playsInline width=\"640px\" height=\"480px\" ></video>\n        </div>\n    );\n};\nexport default ViewCam;\n","import Window from \"../UI/experimentUI/Window\";\r\nimport ViewCam from \"../Chat/ViewCamStream\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const config = { iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }] } //stun:stun.stunprotocol.org\r\n    var peerConnection = new RTCPeerConnection(config);\r\n\r\n    return (\r\n        <Window\r\n            id=\"Cam_1\"\r\n            componentList={['Cam_1']}\r\n            header=\"Top view of experiment\"\r\n            top=\"200\"\r\n            left=\"250\"\r\n            width=\"640px\"\r\n            footer={'empty'}\r\n        >\r\n            <ViewCam\r\n                component=\"Cam_1\"\r\n                peer={peerConnection}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;\r\n","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport CamWindow from \"../../assembly/CamWindow\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\"\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.setNewFont(color);\r\n      setConnection(true);\r\n    }\r\n    socketCtx.socket.on('AuthFailed', () => {\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    })\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '30px',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '150px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from 'react';\r\nimport { useGLTF, Box, Cylinder} from '@react-three/drei';\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport {isEqual} from 'lodash';\r\n\r\nexport function Model(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF(\"/model/MI_230104.glb\");\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* Glass Materials need to be generated here*/}\r\n          {/* Beam Splitter cube */}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 1 */}\r\n          <Box\r\n            position={[-0.45, 0.55, 0.58]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#9999ff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Refraction Plate 2 */}\r\n          <Box\r\n            position={[0.2, 0.55, 0.44]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.5, 0.5, 0.125]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#99ff99\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          {/* Beam Splitter slim is defined in 'off' Overlay*/}\r\n\r\n          {/* Lens */}\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[0,0,0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"KM100_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 1.3, 0.9]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"KM100_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}          \r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"screen\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, -1.3]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n            material={materials.WhiteParts}\r\n          />\r\n        \r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[0, 0, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaser_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.6, 1.3, 0]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"greenlaser_1\") ? (\r\n                <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n                <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n              )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n       </group>\r\n\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaserPower_1\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[1.4, 1.1, -0.8]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"greenlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {\r\n          (props.showBeam === 'off') &&\r\n          <group>\r\n            <group\r\n                name=\"BS_slim\"\r\n                position={[0.64, 0, -0.52]}\r\n                onPointerDown={(e) => {\r\n                  e.stopPropagation();\r\n                  props.toggleSelect(\"experimentSelection\");\r\n                }}\r\n              >\r\n                {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n                <mesh\r\n                  name=\"Cylinder\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder.geometry}\r\n                  material={materials.BlackParts}\r\n                >\r\n                  {props.selected.has(\"experimentSelection\") ? (\r\n                    <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                  ) : (\r\n                    <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                  )}\r\n                </mesh>\r\n                <mesh\r\n                  name=\"Cylinder_1\"\r\n                  castShadow\r\n                  receiveShadow\r\n                  geometry={nodes.Cylinder_1.geometry}\r\n                  material={materials.ShinyParts}\r\n                />\r\n              </group>\r\n              <Cylinder\r\n                position={[0.64, 0.68, -0.66]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n          </group>\r\n        }\r\n        {\r\n          (props.showBeam === 'on') &&\r\n          <group>\r\n            <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group> \r\n        }\r\n\r\n        {\r\n          (props.showBeam === 'split') && \r\n          <group>\r\n            <mesh\r\n              name=\"LaserBeamBS\"\r\n              geometry={nodes.LaserBeamBS.geometry}\r\n              material={materials.Laser}\r\n              position={[-0.53, 0.68, -0.13]}\r\n              rotation={[0, 0, -Math.PI / 2]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <mesh\r\n              name=\"LaserBeam\"\r\n              castShadow\r\n              receiveShadow\r\n              geometry={nodes.LaserBeam.geometry}\r\n              material={materials.Laser}\r\n            >\r\n              <meshStandardMaterial color=\"#65ff00\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh> \r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0, 0, 0]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n              <Cylinder\r\n                position={[0, 0.68, -0.14]}\r\n                args={[1, 1, 1]}\r\n                rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n                scale={[0.14, 0.05, 0.14]}\r\n              >\r\n                <meshPhysicalMaterial\r\n                  thickness={1}\r\n                  roughness={0.1}\r\n                  transmission={1}\r\n                  clearcoat={0.5}\r\n                  clearcoatRoughness={0}\r\n                  ior={1.1}\r\n                  envMapIntensity={25}\r\n                  color={\"#ffffff\"}\r\n                  attenuationColor={\"#00ffff\"}\r\n                  attenuationDistance={5}\r\n                />\r\n              </Cylinder>\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0.64, 0.45, -0.67]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n          </group>  \r\n        }\r\n\r\n        {(props.showLED === 'none') &&\r\n        <mesh/>\r\n        }\r\n\r\n        {(props.showLED === 'white') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightWhite\"\r\n              geometry={nodes.LEDLightWhite.geometry}\r\n              material={materials.LEDWhite}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ffffff\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"Multi Component Selection\" description=\"Custom Revolving Mount\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n          </group>\r\n        }\r\n\r\n        {(props.showLED === 'red') &&\r\n          <group>\r\n            <mesh\r\n              name=\"LEDLightRed\"\r\n              geometry={nodes.LEDLightRed.geometry}\r\n              material={materials.LEDRed}\r\n              position={[-0.7, 0.67, -0.12]}\r\n              rotation={[-Math.PI / 2, Math.PI / 2, 0]}\r\n              scale={0.17}\r\n            >\r\n              <meshStandardMaterial color=\"#ff3900\" transparent opacity={0.8} emissive emissiveIntensity={1}/>\r\n            </mesh>\r\n            <group\r\n              name=\"BS_slim\"\r\n              position={[0.64, 0, -0.52]}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 1.3, -0.1]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder.geometry}\r\n                material={materials.BlackParts}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n              <mesh\r\n                name=\"Cylinder_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder_1.geometry}\r\n                material={materials.ShinyParts}\r\n              />\r\n            </group>\r\n            <group\r\n              name=\"LED\"\r\n              position={[0, 0.45, -0.13]}\r\n              rotation={[Math.PI, -1.18, Math.PI]}\r\n              scale={0.05}\r\n              onPointerDown={(e) => {\r\n                e.stopPropagation();\r\n                props.toggleSelect(\"experimentSelection\");\r\n              }}\r\n            >\r\n              {props.showTags && <DescriptiveTag position={[0, 17, 0]} title=\"LED\" description=\"Measurement of Coherent Length\" />}\r\n              <mesh\r\n                name=\"Cylinder007\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007.geometry}\r\n                material={materials['ShinyParts.005']}\r\n              ></mesh>\r\n              <mesh\r\n                name=\"Cylinder007_1\"\r\n                castShadow\r\n                receiveShadow\r\n                geometry={nodes.Cylinder007_1.geometry}\r\n                material={materials['BlackParts.005']}\r\n              >\r\n                {props.selected.has(\"experimentSelection\") ? (\r\n                  <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n                ) : (\r\n                  <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n                )}\r\n              </mesh>\r\n            </group>\r\n            <Cylinder\r\n            position={[0.64, 0.68, -0.66]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, -Math.PI / 4, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder> \r\n          </group>\r\n        }\r\n\r\n    \r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.76, 0.62, 0.03]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"linear_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.8, 0]} title=\"Linear Movable Mirror\" description=\"SM1ZP/M Translation Mount\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"linear_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n              ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh005_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh005_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n                  \r\n        <mesh\r\n          name=\"TranslateMirrorBase\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.TranslateMirrorBase.geometry}\r\n          material={materials.BlackParts}\r\n          position={[-1.88, 0.11, -0.01]}\r\n        />\r\n\r\n        <group\r\n          name=\"ThermalMirror\"\r\n          position={[-2.7, 0.82, -0.91]}\r\n          rotation={[0, -Math.PI / 2, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"heater\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Heatable Mirror Stage\" description=\"Mirror Mounted on an Aluminum Rod\" />}\r\n          <mesh \r\n            name=\"Cylinder008\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008.geometry}\r\n            material={materials['Material.002']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#884422\" opacity={1.0}/>\r\n            )}\r\n          </mesh>\r\n          <mesh \r\n            name=\"Cylinder008_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_1.geometry}\r\n            material={materials['BlackParts.001']}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"Cylinder008_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_2.geometry}\r\n            material={materials['ShinyParts.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_3\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_3.geometry}\r\n            material={materials['Alu.001']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_4\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_4.geometry}\r\n            material={materials['Mirror.002']}\r\n          />\r\n          <mesh\r\n            name=\"Cylinder008_5\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.Cylinder008_5.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"heater\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n        </group>\r\n\r\n        <group\r\n          name=\"TranslateMirrorBase\"\r\n          position={[-2.38, 0.11, -1.01]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('heater_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 0.5, 0]} title=\"Mirror Changing Stage\" description=\"PR01/M Rotation Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004.geometry}\r\n            material={materials.BlackParts}\r\n          >  \r\n            {props.selected.has('heater_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh004_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh004_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        \r\n        <group\r\n          name=\"RotaryStage\"\r\n          position={[-0.12, 0, 0.51]}\r\n          rotation={[0, -1.57, 0]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect('plate_rotation');\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Glass Plate Rotation Stage\" description=\"PR01/M Rotation Stage\" />}\r\n          <mesh\r\n            name=\"PR01_M-Step001\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001'].geometry}\r\n            material={materials['BlackParts.004']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_1'].geometry}\r\n            material={materials['BlackParts.003']}\r\n          >\r\n            {props.selected.has('plate_rotation') ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshStandardMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          \r\n          <mesh\r\n            name=\"PR01_M-Step001_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes['PR01_M-Step001_2'].geometry}\r\n            material={materials['ShinyParts.003']}\r\n          />\r\n        </group>\r\n\r\n        <mesh\r\n          name=\"BS_slimHolder001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder001.geometry}\r\n          material={materials.BlackParts}\r\n        />     \r\n\r\n        <mesh\r\n          name=\"BS_slimHolder\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BS_slimHolder.geometry}\r\n          material={materials.BlackParts}\r\n          position={[0.64, 0, -0.66]}\r\n          rotation={[-Math.PI, 0.63, -Math.PI]}\r\n        />\r\n        \r\n        \r\n\r\n        <mesh\r\n          name=\"BaseMesh001\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001.geometry}\r\n          material={materials.BlackParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_1\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_1.geometry}\r\n          material={materials.ShinyParts}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_2\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_2.geometry}\r\n          material={materials['BlackParts.004']}\r\n        />\r\n        \r\n        <mesh\r\n          name=\"BaseMesh001_3\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.BaseMesh001_3.geometry}\r\n          material={materials['ShinyParts.004']}\r\n        />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/MI_230104.glb')\r\nexport default memo(Model, isEqual);\r\n","import MI_230201 from \"../../experiment/MichelsonInterferometer/MI_230201\";\r\nimport { OrbitControls, Environment } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: 'absolute',\r\n          background: 'linear-gradient(Teal, Black)',\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files='../hdri/autoshop.hdr' />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_230201\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n            showLED={appCtx.showLED}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [lastClosedComponent, setLastClosedComponent] = useState('');\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [smallSetting, setSmallSetting] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showRotary, setShowRotary] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showBeam, setShowBeam] = useState('off');\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [showLED, setShowLED] = useState('none');\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      setLastClosedComponent(compId);\r\n    }\r\n  };\r\n\r\n  const toogleLastComp = () => {\r\n    setLastClosedComponent('');\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('Cam_1')\r\n  }\r\n\r\n  const toggleShowLED = (newVal) => {\r\n    setShowLED(newVal);\r\n  }\r\n\r\n  const toggleShowBeam = (newVal) => {\r\n    setShowBeam(newVal);\r\n  }\r\n\r\n  const toggleChangeRotary = () => {\r\n\r\n    setShowBeam(!showRotary);\r\n  }\r\n  const smallSettings = () => {\r\n    setSmallSetting(!smallSetting)\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin,\r\n        toggleCam,\r\n        showCam,\r\n        lastClosedComponent,\r\n        toogleLastComp,\r\n        showLED,\r\n        toggleShowLED,\r\n        setShowRotary,\r\n        toggleChangeRotary,\r\n        smallSettings,\r\n        smallSetting\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const theme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#01bd7d',\r\n        },\r\n    }\r\n})\r\n\r\nexport const themeLogin = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            light: '#01bd7d',\r\n            main: '#01bd7d',\r\n            dark: '#01bd7d',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n    spacing: 2,\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Temp\":\"HeaterCtrl_Temp__jBaKb\",\"Switch\":\"HeaterCtrl_Switch__3eN4Z\",\"Canvas1\":\"HeaterCtrl_Canvas1__2Nq0o\",\"Canvas2\":\"HeaterCtrl_Canvas2__1H7_e\",\"Select\":\"HeaterCtrl_Select__1DEUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__12YJt\",\"chatMain\":\"Chat_chatMain__2eTFB\",\"msgForm\":\"Chat_msgForm__3_C6o\",\"chatHandler\":\"Chat_chatHandler__321sW\",\"openChat\":\"Chat_openChat__3oUjr\",\"closeChat\":\"Chat_closeChat__GVHsw\",\"buttonBlink\":\"Chat_buttonBlink__3AMb2\"};","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n"],"sourceRoot":""}